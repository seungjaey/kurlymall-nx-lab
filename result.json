[["/Users/hamtori/kurly/kurlymall-nx/pages/404.tsx","import { useRouter } from 'next/router';\nimport { useEffect, useMemo } from 'react';\nimport { startsWith } from 'lodash';\n\nimport Alert from '../src/shared/components/Alert/Alert';\n\nimport { isPC } from '../util/window/getDevice';\n\nexport default function NotFoundPage() {\n  const router = useRouter();\n\n  const isGiftPath = useMemo(() => startsWith(router.asPath, '/gift'), [router.asPath]);\n\n  useEffect(() => {\n    const path = isPC ? '/shop/main/error.php' : '/m2/error.php';\n    if (isPC && isGiftPath) {\n      Alert({\n        text: '모바일 기기에서 확인할 수 있습니다.',\n      }).then(() => {\n        window.location.assign('/');\n      });\n      return;\n    }\n    window.location.assign(path);\n  }, [isGiftPath]);\n\n  return null;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/_app.tsx","import { useEffect, useState } from 'react';\nimport axios, { AxiosError } from 'axios';\nimport { isUndefined } from 'lodash';\n\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\n\nimport type { AppProps } from 'next/app';\n\nimport Loading from '../src/shared/components/Loading/Loading';\n\nimport store, { AppState, useAppSelector } from '../src/shared/store';\nimport { loadSession } from '../src/shared/reducers/auth';\n\nimport { usePage } from '../src/shared/hooks';\n\nimport { closeAlert, isShown } from '../src/shared/components/Alert/Alert';\nimport GoogleAnalyticsScripts from '../src/shared/components/GoogleAnalyticsScripts';\nimport GlobalPageMetaData from '../src/shared/components/PageMeta/GlobalPageMetaData';\n\nimport '../styles/globals.css';\nimport '../styles/kurly_date_picker.scss';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\n/**\n * react swiper import eslint 이슈\n * https://github.com/import-js/eslint-plugin-import/issues/2266\n */\n// eslint-disable-next-line import/no-unresolved\nimport 'swiper/css';\n// eslint-disable-next-line import/no-unresolved\nimport 'swiper/css/scrollbar';\n\nimport { isWebview } from '../util/window/getDevice';\n\nimport registerMockServiceWorker from '../src/shared/mocks';\nimport { useMember } from '../src/shared/hooks/useMember';\nimport { selectAppTemplate } from '../src/shared/utils/select-app-template';\n\nimport { NEXT_PUBLIC_MOCK_ENABLED } from '../src/shared/configs/config';\nimport { amplitudeService } from '../src/shared/amplitude';\nimport { useNotification } from '../src/shared/hooks/useNotification';\n\nif (NEXT_PUBLIC_MOCK_ENABLED) {\n  registerMockServiceWorker();\n}\n\nconst GlobalStyles = dynamic(() => import('../src/shared/components/Head/GlobalStyles'), { ssr: false });\nconst BranchContainer = dynamic(() => import('../src/shared/containers/BranchContainer'), { ssr: false });\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  const { isLoading } = useSelector(({ page }: AppState) => page);\n  const { uid, isGuest, hasSession } = useSelector(({ auth }: AppState) => auth);\n  const { info, mypage } = useAppSelector(({ member }) => member);\n  const { currentAddress } = useAppSelector(({ shippingAddress }) => shippingAddress);\n\n  useMember();\n  usePage();\n  useNotification();\n\n  const handleChangeRoute = () => {\n    if (isShown()) {\n      closeAlert();\n    }\n  };\n\n  useEffect(() => {\n    router.events.on('routeChangeStart', handleChangeRoute);\n\n    return () => {\n      router.events.on('routeChangeStart', handleChangeRoute);\n    };\n  }, [router.events]);\n\n  useEffect(() => {\n    if (hasSession){\n      amplitudeService.setUserProperties({ 'is_guest': isGuest });\n\n      if (isGuest) {\n        amplitudeService.setUserId(undefined);\n      } else if (uid) {\n        amplitudeService.setUserId(uid);\n      }\n    }\n\n    if (info?.memberNo && mypage?.userGradeName) {\n      amplitudeService.setUserProperties({ 'cust_no': info?.memberNo, 'membership_level': mypage?.userGradeName });\n    }\n\n    if (currentAddress?.address && currentAddress?.clusterCenterCode) {\n      amplitudeService.setUserProperties({ 'center_code': currentAddress.clusterCenterCode });\n    }\n  }, [currentAddress?.address, currentAddress?.clusterCenterCode, hasSession, info?.memberNo, isGuest, mypage?.userGradeName, uid]);\n\n  useEffect(() => {\n    if (!isWebview()) {\n      dispatch(loadSession());\n    }\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      <BranchContainer />\n      <Component {...pageProps} />\n    </>\n  );\n}\n\nfunction UsePageOnlyApp({ Component, pageProps }: AppProps) {\n  const { isLoading } = useSelector(({ page }: AppState) => page);\n\n  usePage();\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      <Component {...pageProps} />\n    </>\n  );\n}\n\nexport default function App(props: AppProps) {\n  if (typeof window === 'object') {\n    const ieCheckAgent = window.navigator.userAgent.toLowerCase();\n    if ((navigator.appName === 'Netscape' && navigator.userAgent.search('Trident') !== -1) || (ieCheckAgent.indexOf('msie') !== -1)) {\n      // ie11 이하 페이지 이동\n      window.location.href = '/shop/event/browserUpdate.php';\n    }\n  }\n\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            staleTime: Infinity,\n            refetchOnMount: false,\n            refetchOnWindowFocus: false,\n            retry(failureCount, error) {\n              if (axios.isAxiosError(error)) {\n                const { response } = error as AxiosError;\n\n                if (isUndefined(response)) {\n                  return false;\n                }\n\n                if (response.status === 400 || response.status === 404) {\n                  return false;\n                }\n              }\n\n              return failureCount < 2;\n            },\n          },\n        },\n      }),\n  );\n  const { pathname } = useRouter();\n  const selectTemplate = () => {\n    switch (selectAppTemplate(pathname)) {\n      case 'app_props_component_only':\n        return <props.Component {...props.pageProps} />;\n      case 'use_page_only':\n        return <UsePageOnlyApp {...props} />;\n      default:\n        return <MyApp {...props} />;\n    }\n  };\n\n  useEffect(() => {\n    if (selectAppTemplate(pathname) === 'app_props_component_only'\n      || selectAppTemplate(pathname) === 'use_page_only') {\n      return;\n    }\n\n    const registerServiceWorker = () => {\n      navigator.serviceWorker.register('/service-worker.js')\n        .then((registration) =>\n          console.log('Service Worker registration successful with scope: ', registration.scope))\n        .catch((err) => console.log('Service Worker registration failed: ', err));\n    };\n\n    if ('serviceWorker' in navigator) {\n      window.addEventListener('load', registerServiceWorker);\n    }\n\n    return () => window.removeEventListener('load', registerServiceWorker);\n  }, [pathname]);\n\n  return (\n    <>\n      <GlobalPageMetaData />\n      <GlobalStyles />\n      <GoogleAnalyticsScripts />\n      <QueryClientProvider client={queryClient}>\n        <Provider store={store}>\n          {selectTemplate()}\n        </Provider>\n        <ReactQueryDevtools initialIsOpen={false} />\n      </QueryClientProvider>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/_document.tsx","import { Head, Html, Main, NextScript } from 'next/document';\n\nconst Document = () => (\n  <Html lang=\"ko\">\n    <Head>\n      <meta name=\"application-name\" content=\"컬리\" />\n      <meta name=\"theme-color\" content=\"#ffffff\" />\n      <meta name=\"referrer\" content=\"same-origin\" />\n      <meta name=\"format-detection\" content=\"telephone=no\" />\n\n      <link rel=\"shortcut icon\" href=\"/favicon.ico\" />\n      <link rel=\"icon\" href=\"/favicon.ico\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/images/icons/favicon-16x16.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/images/icons/favicon-32x32.png\" />\n      <link rel=\"apple-touch-icon\" sizes=\"128x128\" href=\"/images/icons/icon-128x128.png\" />\n      <link rel=\"apple-touch-icon\" sizes=\"144x144\" href=\"/images/icons/icon-144x144.png\" />\n      <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"/images/icons/icon-152x152.png\" />\n      <link rel=\"apple-touch-icon\" sizes=\"167x167\" href=\"/images/icons/icon-167x167.png\" />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/images/icons/icon-180x180.png\" />\n      <link rel=\"apple-touch-icon\" sizes=\"192x192\" href=\"/images/icons/icon-192x192.png\" />\n      <link href=\"/images/splashs/iphone5_splash.png\" media=\"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n      <link href=\"/images/splashs/iphone6_splash.png\" media=\"(device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n      <link href=\"/images/splashs/iphoneplus_splash.png\" media=\"(device-width: 621px) and (device-height: 1104px) and (-webkit-device-pixel-ratio: 3)\" rel=\"apple-touch-startup-image\" />\n      <link href=\"/images/splashs/iphonex_splash.png\" media=\"(device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3)\" rel=\"apple-touch-startup-image\" />\n      <link href=\"/images/splashs/iphonexr_splash.png\" media=\"(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n      <link href=\"/images/splashs/iphonexsmax_splash.png\" media=\"(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3)\" rel=\"apple-touch-startup-image\" />\n      <link href=\"/images/splashs/ipad_splash.png\" media=\"(device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n      <link href=\"/images/splashs/ipadpro1_splash.png\" media=\"(device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n      <link href=\"/images/splashs/ipadpro3_splash.png\" media=\"(device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n      <link href=\"/images/splashs/ipadpro2_splash.png\" media=\"(device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n\n      <meta name=\"mobile-web-app-capable\" content=\"yes\" />\n      <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n      <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"#5f0080\" />\n      <meta name=\"apple-mobile-web-app-title\" content=\"컬리\" />\n\n      <meta name=\"msapplication-TileColor\" content=\"#ffffff\" />\n      <meta name=\"msapplication-tap-highlight\" content=\"no\" />\n\n      <link rel=\"manifest\" href=\"/manifest.json\" />\n    </Head>\n    <body>\n      <Main />\n      <NextScript />\n    </body>\n  </Html>\n);\n\nexport default Document;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/_middleware.ts","import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\nimport { NextURL } from 'next/dist/server/web/next-url';\n\nconst REGEX_MAP = {\n  MOBILE_USER_AGENT: new RegExp('.*Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)|Tablet|tablet.*'),\n  API_PATH_REGEX: new RegExp('^(/nx/api)'),\n  MOBILE_PATH_PREFIX: new RegExp('(/m)+/'),\n  LEGACY_GOODS_LIST_REGEX: new RegExp('^(\\/goods-list)'),\n};\n\nconst STATIC_FILE_PATTERN_LIST = [\n  /^(\\/manifest\\.json)/,\n  /^(\\/images\\/)/,\n  /^(\\/naver)/,\n  /^(\\/sitemap\\/)/,\n  /^(\\/service-worker\\.js)/,\n];\n\nconst LEGACY_GOODS_LIST_RULES = [\n  {\n    searchKey: 'category',\n    pathPrefix: '/categories/',\n  },\n  {\n    searchKey: 'collection',\n    pathPrefix: '/collections/',\n  },\n];\n\nconst checkRegex = (regex: RegExp) => (target: string): boolean => regex.test(target);\nconst checkNxApiPath = checkRegex(REGEX_MAP.API_PATH_REGEX);\nconst checkMobileUserAgent = checkRegex(REGEX_MAP.MOBILE_USER_AGENT);\nconst checkRequestUrlAlreadyMobilePrefix = (pathname: string): boolean => pathname.startsWith('/m/');\nconst checkLegacyGoodsListPage = checkRegex(REGEX_MAP.LEGACY_GOODS_LIST_REGEX);\nconst checkStaticFileRequest = (pathname: string): boolean => STATIC_FILE_PATTERN_LIST.reduce<boolean>((acc, regex) => {\n  if (regex.test(pathname)) {\n    acc = true;\n  }\n  return acc;\n}, false);\n\nconst handleLegacyGoodsListRequest = (nextUrl: NextURL): NextResponse => {\n  const [targetRule] = LEGACY_GOODS_LIST_RULES.filter((rule) => {\n    const { searchKey } = rule;\n    return nextUrl.searchParams.has(searchKey);\n  });\n  // NOTE: Handle /goods-list without any valid searchParams\n  if (!targetRule) {\n    nextUrl.pathname = '/main';\n    return NextResponse.redirect(nextUrl);\n  }\n  const { pathPrefix, searchKey } = targetRule;\n  nextUrl.pathname = `${pathPrefix}${nextUrl.searchParams.get(searchKey)}`;\n  nextUrl.searchParams.delete(searchKey);\n  return NextResponse.redirect(nextUrl);\n};\n\nexport function middleware(request: NextRequest) {\n  const isMobile = checkMobileUserAgent(request.headers.get('user-agent') || '');\n  const { nextUrl } = request;\n  const { pathname } = nextUrl;\n  const isAlreadyMobilePrefix = checkRequestUrlAlreadyMobilePrefix(pathname);\n  const isApiPath = checkNxApiPath(pathname);\n  const isLegacyGoodsListPage = checkLegacyGoodsListPage(pathname);\n  const isStaticFileRequest = checkStaticFileRequest(pathname);\n  if (isStaticFileRequest) {\n    return NextResponse.next();\n  }\n  if (isApiPath) {\n    nextUrl.pathname = pathname.replace('/nx/api', '/api');\n    return NextResponse.rewrite(nextUrl);\n  }\n  if (isAlreadyMobilePrefix) {\n    nextUrl.pathname = pathname.replace(REGEX_MAP.MOBILE_PATH_PREFIX, '/');\n    return NextResponse.redirect(nextUrl);\n  }\n  if (isLegacyGoodsListPage) {\n    return handleLegacyGoodsListRequest(nextUrl);\n  }\n  if (!isMobile) {\n    return NextResponse.next();\n  }\n  nextUrl.pathname = `/m${pathname}`;\n  return NextResponse.rewrite(nextUrl);\n}\n\nexport const config = {\n  matcher: ['/:path*'],\n};\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/index.tsx","import Link from 'next/link';\n\ndeclare global {\n  interface Window {\n    Kakao: any;\n  }\n}\n\nexport default function Home() {\n  return (\n    <div>\n      HOME\n      <Link href=\"/about\">\n        컬리소개\n      </Link>\n\n      <Link href=\"/order\">\n        주문\n      </Link>\n    </div>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/address/shipping-address/index.tsx","import styled from '@emotion/styled';\n\nimport SearchContainer from '../../../src/shared/containers/SearchContainer';\n\nconst Wrapper = styled.div`\n  height: 100vh;\n`;\n\nexport default function ShippingAddressPage() {\n  return (\n    <Wrapper>\n      <SearchContainer />\n    </Wrapper>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/address/shipping-address/list.tsx","import ListContainer from '../../../src/shared/containers/pc/address/ListContainer';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nexport default function ShippingAddressListPage() {\n  useScreenName(ScreenName.SIMPLE_SHIPPING_ADDRESS_LIST);\n\n  return (\n    <ListContainer />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/address/shipping-address/result.tsx","import styled from '@emotion/styled';\n\nimport ResultContainer from '../../../src/shared/containers/pc/address/ResultContainer';\n\nconst Wrapper = styled.div`\n  padding: 0 30px;\n`;\n\nexport default function ShippingAddressResultPage() {\n  return (\n    <Wrapper>\n      <ResultContainer />\n    </Wrapper>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/address/shipping-address/update.tsx","import UpdateContainer from '../../../src/shared/containers/pc/address/UpdateContainer';\n\nexport default function ShippingAddressUpdatePage() {\n  return (\n    <UpdateContainer />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/api/identity-verification.js","import axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport { parseISO } from 'date-fns';\n\nimport evalAdult from '../../src/member/adult-verification/services/evalAdult';\nimport evalExpiration\n  from '../../src/member/adult-verification/services/evalExpiration';\nimport getUserMetaData\n  from '../../src/member/adult-verification/services/getUserMetadata';\nimport { logger } from '../../src/shared/services/logger';\n\nimport { KURLY_URL } from '../../src/shared/configs/config';\nimport httpClient from '../../src/shared/configs/http-client';\n\nconst l = logger.child({ api: '/nx/api/identity-verification' });\n\nconst VERSION = 'v1.0';\nconst clientId = 'kurly';\nconst IDENTITY_THIRD_PARTY_PATH = `https://pgapi.payletter.com/${VERSION}`;\n\nconst fetchVerificationData = async (url, { sessionKey }) => {\n  const { data: verificationData } = await axios.get(url, {\n    headers: {\n      Authorization: 'PLKEY NzQxNTZBMjc4ODFFQjVBNDYyOTUzQUZFRjY1NjU1RDE=',\n      'Content-Type': 'application/json',\n    },\n  });\n  const userMetaData = await getUserMetaData(sessionKey);\n  return { verificationData, userMetaData };\n};\n\nconst updateMetaData = async ({ verificationData, userMetaData, sessionKey }) => {\n  const isAdult = evalAdult(verificationData.birth_date);\n  const isExipred = evalExpiration(parseISO(userMetaData.expiredAt));\n\n  const requestUrl = '/member/proxy/member-core/v1/adult';\n  const requestData = { is_adult: isAdult, adult_member_name: verificationData.real_name };\n  const requestConfig = { headers: { Authorization: `Bearer ${sessionKey}` } };\n\n  if (isExipred) {\n    await httpClient.put(requestUrl, requestData, requestConfig);\n  } else {\n    await httpClient.post(requestUrl, requestData, requestConfig);\n  }\n};\n\nconst handleGet = async (req, res) => {\n  try {\n    const jwt = req.headers.authorization?.replace('Bearer ', '') ?? '';\n    const { m_no: mNo, uuid } = jwtDecode(jwt);\n    const url = `${IDENTITY_THIRD_PARTY_PATH}/auth/mobile/request`;\n    const data = {\n      auth_method: 'mobile',\n      client_id: clientId,\n      user_id: mNo || uuid || 'kurly',\n      custom_parameter: jwt,\n      return_url: `${KURLY_URL}/nx/api/identity-verification`,\n      site_url: 'https://www.kurly.com',\n      site_name: '마켓컬리',\n    };\n\n    l.info({ data });\n    const result = await axios.post(url, data, {\n      headers: {\n        Authorization: 'PLKEY OTFEQURGMTIxODMwMzBCQjEyQjJGNjczMjE3MjU4QTc=',\n        'Content-Type': 'application/json',\n      },\n    });\n    res.status(200).send(result.data);\n    l.info({ data: result.data });\n  } catch (err) {\n    res.status(400).json({ error: err });\n    l.info({ err });\n  }\n};\n\nconst handlePost = async (req, res) => {\n  /**\n   * Request Body\n   * -code: 에러 코드\n   * -message: 에러 메시지\n   * -tid: 인증 거래 번호\n   * -custom_parameter: 인증 요청시 가맹점(컬리)에서 임의로 전송한 값\n   * -auth_info: 암호화 된 사용자 인증 정보\n   */\n  const {\n    code, tid, auth_info: authInfo, custom_parameter: sessionKey,\n  } = req.body;\n  l.info({ body: req.body });\n  const url = `${IDENTITY_THIRD_PARTY_PATH}/auth/info/${tid}?client_id=${clientId}&auth_info=${authInfo}`;\n  if (code === '301') {\n    res.redirect(307, '/member/adult-verification');\n    return;\n  }\n\n  try {\n    const verificationData = await fetchVerificationData(url, { sessionKey });\n    await updateMetaData({ ...verificationData, sessionKey });\n    res.redirect(307, '/member/adult-verification?result=success');\n  } catch (err) {\n    res.redirect(307, '/member/adult-verification?result=fail');\n    l.info({ err });\n  }\n};\n\nexport default (req, res) => {\n  if (req.method === 'POST') {\n    handlePost(req, res);\n  } else {\n    handleGet(req, res);\n  }\n};\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/api/index.js","// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\n\nexport default (req, res) => {\n  res.status(200).send('Hello!');\n};\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/api/refresh.js","import { nanoid } from 'nanoid';\n\nimport { getSession, setSession } from '../../src/shared/configs/redis-client';\n\nimport { SESSION_KEY } from '../../src/shared/configs/config';\n\nimport { logger } from '../../src/shared/services/logger';\nimport httpClient from '../../src/shared/configs/http-client';\nimport { extractAuthentication } from '../../src/shared/utils/token';\nimport { responseGuestToken } from './session';\n\nconst l = logger.child({ api: '/nx/api/refresh' });\n\nexport default async (req, res) => {\n  const { authorization } = req.headers;\n  const requestData = { sessionKey: req.cookies[SESSION_KEY], authorization };\n\n  if (!req.cookies[SESSION_KEY] || !authorization) {\n    l.info({ requestData });\n    await responseGuestToken(res);\n    return;\n  }\n\n  let session = null;\n  try {\n    session = await getSession(req.cookies[SESSION_KEY]);\n  } catch (e) {\n    l.info({ requestData }, JSON.stringify(e));\n    await responseGuestToken(res);\n    return;\n  }\n\n  if (!session) {\n    l.info({ requestData });\n    await responseGuestToken(res);\n    return;\n  }\n\n  const url = '/v3/auth/refresh';\n  let refreshedJWT = '';\n  try {\n    const { data } = await httpClient.put(url, {}, {\n      headers: {\n        authorization,\n      },\n    });\n\n    refreshedJWT = data.data.access_token;\n    // 회원 여부 상관없이 redis에서 가져온 token을 refresh한번 해서 넘겨준다.\n    await setSession(req.cookies[SESSION_KEY], {\n      ...session.data,\n      jwt: refreshedJWT,\n    });\n\n    const { isGuest } = extractAuthentication(refreshedJWT);\n\n    if (isGuest) {\n      const response = {\n        accessToken: refreshedJWT,\n        isGuest,\n        uid: nanoid(),\n      };\n      res.status(200).send(response);\n      l.info({ requestData, response });\n      return;\n    }\n  } catch (e) {\n    l.info({ requestData }, JSON.stringify(e));\n    await responseGuestToken(res, session);\n    return;\n  }\n\n  const response = {\n    accessToken: refreshedJWT,\n    isGuest: !session.member,\n    uid: session.sess?.m_uuid ?? session.uid,\n  };\n  res.status(200).send(response);\n  l.info({ requestData, response });\n};\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/api/session.js","import { nanoid } from 'nanoid';\n\nimport { cookie, fetchSession } from '../../libs/session';\n\nimport { guestToken } from '../../src/shared/api/auth/token';\nimport { setSession } from '../../src/shared/configs/redis-client';\n\nimport { logger } from '../../src/shared/services/logger';\nimport { extractAuthentication } from '../../src/shared/utils/token';\nimport httpClient from '../../src/shared/configs/http-client';\n\nconst l = logger.child({ api: '/nx/api/session' });\n\nexport const responseGuestToken = async (res, session = null) => {\n  try {\n    const { access_token: accessToken } = await guestToken();\n    const responseGuestSession = {\n      accessToken,\n      uid: nanoid(),\n      isGuest: true,\n      ...(session?.data?.login_fail_count && {\n        loginFailCount: session.data.login_fail_count ?? 0,\n      }),\n    };\n\n    // session 이 있을경우 (없어도 fetchSession 이후에는 신규 세션 오브젝트가 생김)\n    // 해당 세션에 jwt를 redis에 업데이트 합니다.\n    if (session) {\n      session.cookie = cookie;\n      session.data = {\n        jwt: accessToken,\n        uid: responseGuestSession.uid,\n      };\n    }\n    res.status(200).send(responseGuestSession);\n  } catch (e) {\n    res.status(500).send({ message: 'Internal server error' });\n    l.error(e);\n  }\n};\n\nconst handleGet = async (req, res) => {\n  let session = null;\n  try {\n    session = await fetchSession(req, res);\n  } catch (e) {\n    l.info({ session }, JSON.stringify(e));\n    await responseGuestToken(res, session);\n    return;\n  }\n\n  l.info({ session });\n  if (!session?.data) {\n    await responseGuestToken(res, session);\n    return;\n  }\n\n  const url = '/v3/auth/refresh';\n  let refreshedTokenData = null;\n  let refreshedJWT = null;\n  try {\n    const { data } = await httpClient.put(url, {}, {\n      headers: {\n        authorization: `Bearer ${session.data.jwt}`,\n      },\n    });\n    refreshedTokenData = data.data;\n    refreshedJWT = refreshedTokenData.access_token;\n  } catch (e) {\n    l.info({ session }, JSON.stringify(e));\n    await responseGuestToken(res, session);\n    return;\n  }\n\n  const sessionId = session.id;\n  // 회원 여부 상관없이 redis에서 가져온 token을 refresh한번 해서 넘겨준다.\n  await setSession(sessionId, {\n    ...session.data,\n    jwt: refreshedJWT,\n  });\n\n  const { isGuest } = extractAuthentication(refreshedJWT);\n\n  if (isGuest) {\n    const response = {\n      accessToken: refreshedJWT,\n      isGuest,\n      uid: nanoid(),\n      ...(session?.data?.login_fail_count && {\n        loginFailCount: session.data.login_fail_count ?? 0,\n      }),\n    };\n    res.status(200).send(response);\n    l.info({ session });\n    return;\n  }\n\n  const response = {\n    accessToken: refreshedJWT,\n    isGuest: !session.data.member,\n    uid: session.data.sess?.m_uuid ?? session.data.uid,\n    ...(session.data.code && {\n      code: session.data.code,\n    }),\n    ...(session?.data?.login_fail_count && {\n      loginFailCount: session.data.login_fail_count,\n    }),\n    ...(session.data.sess && session.data.member && {\n      userInfo: {\n        id: session.data.sess.m_id,\n        name: session.data.member.name,\n        grade: session.data.sess.user_grade_name,\n      },\n    }),\n  };\n  res.status(200).send(response);\n  l.info({ response });\n};\n\nconst handlePut = async (req, res) => {\n  try {\n    const jwt = req.headers.authorization.replace('Bearer ', '');\n    l.info(jwt);\n\n    const { isGuest } = extractAuthentication(jwt);\n    const session = await fetchSession(req, res);\n    l.info({ session });\n    if (!session.data) {\n      session.cookie = cookie;\n      session.data = {\n        jwt,\n        uid: nanoid(),\n      };\n    } else {\n      await setSession(session.id, {\n        ...session.data,\n        jwt,\n      });\n    }\n\n    const response = {\n      accessToken: jwt,\n      isGuest,\n      uid: session.data.sess?.m_uuid ?? session.data.uid,\n    };\n    res.status(200).send(response);\n    l.info({ response });\n  } catch (err) {\n    res.status(500).send({ message: 'Internal server error' });\n    l.error(err);\n  }\n};\n\nexport default async (req, res) => {\n  if (req.method === 'PUT') {\n    handlePut(req, res);\n    return;\n  }\n\n  handleGet(req, res);\n};\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/beauty-benefit/index.tsx","import { useScreenName } from '../../src/shared/hooks';\nimport { ScreenName } from '../../src/shared/amplitude';\n\nimport Header from '../../src/header/components/Header';\nimport EventBenefitContainer\n  from '../../src/event-benefit/shared/containers/EventBenefitContainer';\nimport Footer from '../../src/footer/components/Footer';\nimport MainSiteProvider\n  from '../../src/main/components/shared/MainSiteProvider';\nimport ScrollEventTopButton\n  from '../../src/shared/components/Scroll/ScrollEventTopButton';\n\nexport default function EventBenefitPage() {\n  useScreenName(ScreenName.BENEFIT_LIST);\n\n  return (\n    <MainSiteProvider site=\"BEAUTY\">\n      <Header />\n      <ScrollEventTopButton>\n        <EventBenefitContainer eventType=\"BEAUTY_BENEFIT\" />\n      </ScrollEventTopButton>\n      <Footer />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/beauty-event/index.tsx","import { useScreenName } from '../../src/shared/hooks';\nimport { ScreenName } from '../../src/shared/amplitude';\n\nimport Header from '../../src/header/components/Header';\nimport EventBenefitContainer\n  from '../../src/event-benefit/shared/containers/EventBenefitContainer';\nimport Footer from '../../src/footer/components/Footer';\nimport MainSiteProvider\n  from '../../src/main/components/shared/MainSiteProvider';\nimport ScrollEventTopButton\n  from '../../src/shared/components/Scroll/ScrollEventTopButton';\n\nexport default function EventBenefitPage() {\n  useScreenName(ScreenName.BRAND_LIST);\n\n  return (\n    <MainSiteProvider site=\"BEAUTY\">\n      <Header />\n      <ScrollEventTopButton>\n        <EventBenefitContainer eventType=\"BEAUTY_EVENT\" />\n      </ScrollEventTopButton>\n      <Footer />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/board/faq/index.tsx","import { InferGetStaticPropsType } from 'next';\n\nimport styled from '@emotion/styled';\n\nimport { useCallback, useState } from 'react';\n\nimport Header from '../../../src/header/components/Header';\nimport MypageLayout from '../../../src/mypage/common/Layout';\n\nimport Footer from '../../../src/footer/components/Footer';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nimport {\n  PagingContextProvider,\n} from '../../../src/board/context/PagingContext';\nimport FaqListContainer\n  from '../../../src/board/containers/pc/FaqListContainer';\nimport Dropdown, { Option } from '../../../src/shared/components/Input/Dropdown';\nimport { faqTypeList } from '../../../src/shared/api/board/faq';\n\nconst DropdownWrapper = styled.div`\n  width: 170px;\n  .MuiSelect-select {\n    font-family: 'Noto Sans';\n  }\n`;\n\nexport default function FaqBoardList(props: InferGetStaticPropsType<typeof getStaticProps>) {\n  useScreenName(ScreenName.FREQUENTLY_ASK_QUESTION);\n\n  const [selectedFilter, setSelectedFilter] = useState(faqTypeList[0]);\n\n  const { title, description } = props;\n\n  const handleChangeFilter = (option: Option) => {\n    setSelectedFilter(option);\n    window.scrollTo(0, 0);\n  };\n\n  const TypeFilterDropDown = useCallback(() => {\n    return (\n      <DropdownWrapper>\n        <Dropdown\n          selectedValue={selectedFilter}\n          options={faqTypeList}\n          onChange={handleChangeFilter}\n          direction='down'\n        />\n      </DropdownWrapper>\n    );\n  }, [selectedFilter]);\n\n  return (\n    <>\n      <Header />\n      <MypageLayout\n        title={title}\n        description={description}\n        sidebarType=\"customerService\"\n        headerAction={<TypeFilterDropDown />}\n      >\n        <PagingContextProvider>\n          <FaqListContainer selectedFilter={selectedFilter} />\n        </PagingContextProvider>\n      </MypageLayout>\n      <Footer />\n    </>\n  );\n}\n\nexport async function getStaticProps() {\n  return {\n    props: {\n      title: '자주하는 질문',\n      description: '고객님들께서 가장 자주하시는 질문을 모두 모았습니다.',\n    },\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/board/notice/detail.tsx","import { useRouter } from 'next/router';\n\nimport { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { ParsedUrlQuery } from 'querystring';\n\nimport Alert from '../../../src/shared/components/Alert/Alert';\nimport { BOARD_PATH } from '../../../src/shared/constant';\n\n// 레거시를 위한 도메인 이동 처리 로직 입니다.\nexport default function NoticeDetailGateway() {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const { no } = router.query as ParsedUrlQuery & { no: string; };\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (!no) {\n      Alert({\n        text: '존재하지 않거나, 열람 할 수 없는 게시물 입니다.',\n      }).then(() => {\n        router.back();\n      });\n    } else {\n      router.replace(`${BOARD_PATH.noticeDetail.uri}/[no]`, `${BOARD_PATH.noticeDetail.uri}/${no}`);\n    }\n  }, [dispatch, no, router]);\n\n  return null;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/board/notice/index.tsx","import { InferGetStaticPropsType } from 'next';\n\nimport Header from '../../../src/header/components/Header';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport Footer from '../../../src/footer/components/Footer';\nimport NoticeListContainer\n  from '../../../src/board/containers/pc/NoticeListContainer';\nimport {\n  PagingContextProvider,\n} from '../../../src/board/context/PagingContext';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nexport default function NoticeBoardList(props: InferGetStaticPropsType<typeof getStaticProps>) {\n  useScreenName(ScreenName.NOTICE_LIST);\n\n  const { title, description } = props;\n\n  return (\n    <>\n      <Header />\n      <MypageLayout\n        title={title}\n        description={description}\n        sidebarType=\"customerService\"\n      >\n        <PagingContextProvider>\n          <NoticeListContainer />\n        </PagingContextProvider>\n      </MypageLayout>\n      <Footer />\n    </>\n  );\n}\n\nexport async function getStaticProps() {\n  return {\n    props: {\n      title: '공지사항',\n      description: '컬리의 새로운 소식들과 유용한 정보들을 한곳에서 확인하세요.',\n    },\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/board/notice/detail/[no].tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { ParsedUrlQuery } from 'querystring';\n\nimport Header from '../../../../src/header/components/Header';\nimport Footer from '../../../../src/footer/components/Footer';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\nimport NoticeDetailContainer\n  from '../../../../src/board/containers/pc/NoticeDetailContainer';\nimport Alert from '../../../../src/shared/components/Alert/Alert';\n\nconst Wrapper = styled.div`\n  width: 1050px;\n  margin: 0 auto;\n`;\n\nconst TitleWrapper = styled.div`\n  width: 100%;\n  padding: 50px 0 50px;\n`;\n\nconst BoardTitle = styled.div`\n  font-weight: 700;\n  font-size: 28px;\n  color: ${COLOR.kurlyGray800};\n  line-height: 35px;\n  text-align: center;\n  letter-spacing: -1px;\n`;\n\nconst BoardSubText = styled.div`\n  margin-top: 5px;\n  color: ${COLOR.kurlyGray450};\n  line-height: 20px;\n  letter-spacing: -.1px;\n  text-align: center;\n`;\nexport default function NoticeBoardDetail() {\n  useScreenName(ScreenName.NOTICE_DETAIL);\n\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const { no } = router.query as ParsedUrlQuery & { no: string; };\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (!no) {\n      Alert({\n        text: '존재하지 않거나, 열람 할 수 없는 게시물 입니다.',\n      }).then(() => {\n        router.back();\n      });\n    }\n  }, [dispatch, no, router]);\n\n  return (\n    <>\n      <Header />\n      <Wrapper>\n        <TitleWrapper>\n          <BoardTitle>공지사항</BoardTitle>\n          <BoardSubText>컬리의 새로운 소식들과 유용한 정보들을 한곳에서 확인하세요.</BoardSubText>\n        </TitleWrapper>\n        {no && <NoticeDetailContainer noticeNo={no} />}\n      </Wrapper>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/broswerUpdate/index.tsx","import BrowserUpdate from '../../src/browser-update';\n\nexport default function BrowserUpdatePage() {\n  return (\n    <BrowserUpdate />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/cart/counter.tsx","import styled from '@emotion/styled';\n\nimport { useSubmitCounter } from '../../src/cart/shared/hooks/useSubmitCounter';\n\nimport Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\n\nimport Loading from '../../src/shared/components/Loading/Loading';\n\nconst Body = styled.div`\n  width: 1050px;\n  margin: 0 auto;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  height: 100vh;\n  display: flex;\n  justify-content: space-between;\n  letter-spacing: -0.5px;\n  > div:first-of-type {\n    position: absolute;\n  }\n`;\n\nexport default function CounterPage() {\n  useSubmitCounter();\n\n  return (\n    <>\n      <Header />\n      <Body>\n        <Container>\n          <Loading />\n        </Container>\n      </Body>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/cart/index.tsx","import styled from '@emotion/styled';\n\nimport { useSticky } from '../../src/cart/shared/hooks/useSticky';\nimport { PRODUCT_HEADER_HEIGHT } from '../../src/cart/shared/constants';\nimport useCartPage from '../../src/cart/shared/hooks/useCartPage';\nimport { useScreenName } from '../../src/shared/hooks';\nimport { ScreenName } from '../../src/shared/amplitude';\n\nimport Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\n\nimport DestinationContainer from '../../src/cart/pc/containers/DestinationContainer';\nimport ProductsContainer from '../../src/cart/pc/containers/ProductsContainer';\nimport CartControlContainer from '../../src/cart/pc/containers/CartControlContainer';\nimport PriceContainer from '../../src/cart/pc/containers/PriceContainer';\nimport SubmitContainer from '../../src/cart/pc/containers/SubmitContainer';\n\nconst Body = styled.div`\n  width: 1050px;\n  margin: 0 auto;\n  padding-bottom: 80px;\n`;\n\nconst Title = styled.h2`\n  padding: 50px 0 48px;\n  font-weight: 500;\n  font-size: 28px;\n  line-height: 35px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  letter-spacing: -0.5px;\n`;\n\nconst ProductWrapper = styled.div`\n  width: 742px;\n`;\n\nconst OrderWrapper = styled.div`\n  position: relative;\n  width: 284px;\n  min-height: 942px;\n`;\n\nconst ScrollWrapper = styled.div<{ sticky: boolean; }>`\n  position: absolute;\n  width: 284px;\n  padding-top: 60px;\n  ${({ sticky }) => sticky && `\n    position: sticky;\n    top: 60px;\n    right: 0;\n  `};\n`;\n\nexport default function CartPage() {\n  useScreenName(ScreenName.CART);\n\n  const {\n    isCartEmpty,\n    isGuest,\n    checkedCount,\n    price,\n    shipping,\n    pointBenefit,\n  } = useCartPage();\n\n  const { sticky, thresholdRef } = useSticky({\n    rootMarginTop: -PRODUCT_HEADER_HEIGHT,\n  });\n\n  return (\n    <>\n      <Header />\n      <Body>\n        <Title>장바구니</Title>\n        <div ref={thresholdRef} />\n        <Container>\n          <ProductWrapper>\n            <CartControlContainer>\n              <ProductsContainer isCartEmpty={isCartEmpty} />\n            </CartControlContainer>\n          </ProductWrapper>\n          <OrderWrapper>\n            <ScrollWrapper sticky={sticky}>\n              <DestinationContainer />\n              <PriceContainer\n                isGuest={isGuest}\n                price={price}\n                pointBenefit={pointBenefit}\n                shipping={shipping}\n                checkedCount={checkedCount}\n              />\n              <SubmitContainer\n                isCartEmpty={isCartEmpty}\n                checkedCount={checkedCount}\n                isGuest={isGuest}\n              />\n            </ScrollWrapper>\n          </OrderWrapper>\n        </Container>\n      </Body>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/categories/[categoryNo].tsx","import dynamic from 'next/dynamic';\n\nimport { useRouter } from 'next/router';\n\nimport styled from '@emotion/styled';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useEffect } from 'react';\n\nimport Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\n\nimport { useAppSelector } from '../../src/shared/store';\nimport ScrollEventTopButton from '../../src/shared/components/Scroll/ScrollEventTopButton';\nimport MainSiteProvider from '../../src/main/components/shared/MainSiteProvider';\n\nimport { useCategoriesPageQueryParams } from '../../src/product/list/categories/hook/useCategoriesPageQueryParams';\nimport CategoryListContainer from '../../src/product/list/categories/pc/containers/CategoryListContainer';\nimport { ListPageSkeleton } from '../../src/product/list/pc/components/ListPageSkeleton';\n\nimport { setFilterId, setQueryId } from '../../src/product/list/slice';\nimport { initializeFilterId } from '../../src/product/list/shared/util/initializeFilterId';\nimport { productListSetScreenName } from '../../src/product/list/shared/util/productListSetScreenName';\n\nconst FloatingNavigator = dynamic(\n  () => import('../../src/navigator/components/FloatingNavigator'),\n  { ssr: false },\n);\n\nconst Container = styled.div`\n  position: relative;\n  padding-bottom: 80px;\n`;\n\nexport default function CategoryList() {\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n  const { isReady } = useRouter();\n  const { site, categoryNo, filters: urlBasedFilter } = useCategoriesPageQueryParams();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isReady) {\n      return;\n    }\n\n    const filterId = initializeFilterId(urlBasedFilter);\n\n    dispatch(setFilterId(filterId));\n    dispatch(setQueryId(null));\n    productListSetScreenName(categoryNo, 'categories');\n  }, [categoryNo, urlBasedFilter, dispatch, isReady]);\n\n  return (\n    <MainSiteProvider site={site}>\n      <Header />\n      <Container>\n        <ScrollEventTopButton>\n          {isReady && hasSession ? (\n            <CategoryListContainer categoryNo={categoryNo} />\n          ) : (\n            <ListPageSkeleton pageType='categories' />\n          )}\n        </ScrollEventTopButton>\n        <FloatingNavigator isTopInitial={!isReady || !hasSession} />\n      </Container>\n      <Footer />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/categories/index.tsx","import styled from '@emotion/styled';\n\nimport Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\nimport MainSiteProvider\n  from '../../src/main/components/shared/MainSiteProvider';\nimport COLOR from '../../src/shared/constant/colorset';\n\nconst PageError = styled.div`\n  width: 1050px;\n  margin: 0 auto;\n  padding: 220px 0 200px;\n  color: ${COLOR.kurlyGray800};\n  text-align: center;\n`;\n\nconst Title = styled.div`\n  padding-bottom: 20px;\n  font-weight: bold;\n  font-size: 28px;\n  color: ${COLOR.kurlyGray600};\n  :before {\n    content: '';\n    display: block;\n    margin: 0 auto 22px;\n    width: 100px;\n    height: 100px;\n    background: url('https://res.kurly.com/kurly/ico/2021/error_100_100_gray.svg') 0 0 no-repeat;\n  }\n`;\n\nconst Empty = styled.div`\n  font-size: 16px;\n  line-height: 23px;\n  color: ${COLOR.kurlyGray400};\n  text-align: center;\n`;\n\nexport default function CategoriesPage() {\n  return (\n    <MainSiteProvider>\n      <Header />\n      <PageError>\n        <Title>찾으시는 페이지가 없습니다.</Title>\n        <Empty>카테고리 메뉴는 모바일웹 또는 현재 페이지 상단의 카테고리를 통해 확인 하실 수 있습니다.</Empty>\n      </PageError>\n      <Footer />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/category/index.tsx","import styled from '@emotion/styled';\n\nimport Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\nimport MainSiteProvider\n  from '../../src/main/components/shared/MainSiteProvider';\nimport COLOR from '../../src/shared/constant/colorset';\n\nconst PageError = styled.div`\n  width: 1050px;\n  margin: 0 auto;\n  padding: 220px 0 200px;\n  color: ${COLOR.kurlyGray800};\n  text-align: center;\n`;\n\nconst Title = styled.div`\n  padding-bottom: 20px;\n  font-weight: bold;\n  font-size: 28px;\n  color: ${COLOR.kurlyGray600};\n  :before {\n    content: '';\n    display: block;\n    margin: 0 auto 22px;\n    width: 100px;\n    height: 100px;\n    background: url('https://res.kurly.com/kurly/ico/2021/error_100_100_gray.svg') 0 0 no-repeat;\n  }\n`;\n\nconst Empty = styled.div`\n  font-size: 16px;\n  line-height: 23px;\n  color: ${COLOR.kurlyGray400};\n  text-align: center;\n`;\n\nexport default function category() {\n  return (\n    <MainSiteProvider>\n      <Header />\n      <PageError>\n        <Title>찾으시는 페이지가 없습니다.</Title>\n        <Empty>카테고리 메뉴는 모바일웹 또는 현재 페이지 상단의 카테고리를 통해 확인 하실 수 있습니다.</Empty>\n      </PageError>\n      <Footer />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/collection-groups/[collectionGroupsCode].tsx","import dynamic from 'next/dynamic';\n\nimport { useRouter } from 'next/router';\n\nimport styled from '@emotion/styled';\n\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { head, isEmpty } from 'lodash';\n\nimport { useAppSelector } from '../../src/shared/store';\nimport { useCollectionListPageQueryParams } from '../../src/product/list/collections/hook/useCollectionsPageQueryParams';\nimport { ListPageSkeleton } from '../../src/product/list/pc/components/ListPageSkeleton';\nimport { setFilterId } from '../../src/product/list/slice';\nimport { initializeFilterId } from '../../src/product/list/shared/util/initializeFilterId';\nimport { productListSetScreenName } from '../../src/product/list/shared/util/productListSetScreenName';\nimport { useCollectionGroups } from '../../src/product/list/collections/hook/useCollectionGroups';\nimport { getReplaceUrl } from '../../util/window/getDevice';\nimport Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\nimport ScrollEventTopButton from '../../src/shared/components/Scroll/ScrollEventTopButton';\nimport CollectionGroupsTopContainer from '../../src/product/list/collections/pc/containers/CollectionGroupsTopContainer';\nimport CollectionListContainer from '../../src/product/list/collections/pc/containers/CollectionListContainer';\nimport COLOR from '../../src/shared/constant/colorset';\n\nconst FloatingNavigator = dynamic(\n  () => import('../../src/navigator/components/FloatingNavigator'),\n  { ssr: false },\n);\n\nconst Container = styled.div`\n  position: relative;\n  padding-bottom: 80px;\n`;\n\nconst EmptyProduct = styled.div`\n  padding: 150px 0 175px;\n  width: 100%;\n  font-size: 16px;\n  color: ${COLOR.kurlyGray400};\n  text-align: center;\n`;\n\nexport default function CollectionList() {\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n  const router = useRouter();\n  const { isReady, pathname, query } = router;\n  const { site, filters: urlBasedFilter, collectionGroupsCode, collection } = useCollectionListPageQueryParams();\n  const titleRef = useRef<HTMLHeadingElement>(null);\n\n  const {\n    data: groupsData,\n    status: groupsStatus,\n  } = useCollectionGroups({ collectionGroupsCode });\n  const collectioGroups = useMemo(() => groupsData ? groupsData.collections : [], [groupsData]);\n  const handlePageChange = useCallback((groupCode: string) => {\n    router\n      .replace({\n        pathname: getReplaceUrl(pathname),\n        query: {\n          ...query,\n          page: 1,\n          collectionGroupsCode,\n          ...(groupCode && { collection: groupCode }),\n          ...(site === 'BEAUTY' && { site: 'beauty' }),\n        },\n      });\n  }, [collectionGroupsCode, pathname, query, router, site]);\n\n  useEffect(() => {\n    if (collection || isEmpty(collectioGroups)) {\n      return;\n    }\n\n    const groupFirstCode = head(collectioGroups);\n\n    if (groupFirstCode) {\n      handlePageChange(groupFirstCode.code);\n    }\n  }, [collectioGroups, collection, handlePageChange]);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isReady) {\n      return;\n    }\n\n    const filterId = initializeFilterId(urlBasedFilter);\n\n    dispatch(setFilterId(filterId));\n    productListSetScreenName(collectionGroupsCode, 'collections');\n  }, [collectionGroupsCode, urlBasedFilter, dispatch, isReady]);\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <ScrollEventTopButton>\n          {isReady && hasSession && groupsData &&\n            <CollectionGroupsTopContainer\n              groupsStatus={groupsStatus}\n              groupsData={groupsData}\n              collectionGroupsCode={collectionGroupsCode}\n              collection={collection}\n              collectioGroups={collectioGroups}\n              titleRef={titleRef}\n            />\n          }\n          {isReady && hasSession ? (\n            groupsStatus === 'error' ?\n              <EmptyProduct>등록된 상품이 없습니다.</EmptyProduct>\n              :\n              <CollectionListContainer\n                collectionName={collection}\n                isCollectionGroup={true}\n              />\n          ) : (\n            <ListPageSkeleton pageType='collections' />\n          )}\n        </ScrollEventTopButton>\n        <FloatingNavigator isTopInitial={!isReady || !hasSession} />\n      </Container>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/collection-groups/index.tsx","import { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nexport default function CollectionsPage() {\n  const router = useRouter();\n\n  useEffect(() => {\n    router.replace('/main');\n  }, [router]);\n  return null;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/collections/[collectionName].tsx","import dynamic from 'next/dynamic';\n\nimport { useRouter } from 'next/router';\n\nimport styled from '@emotion/styled';\n\nimport { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\n\nimport { useAppSelector } from '../../src/shared/store';\nimport ScrollEventTopButton\n  from '../../src/shared/components/Scroll/ScrollEventTopButton';\nimport MainSiteProvider\n  from '../../src/main/components/shared/MainSiteProvider';\nimport CollectionListContainer\n  from '../../src/product/list/collections/pc/containers/CollectionListContainer';\nimport {\n  useCollectionListPageQueryParams,\n} from '../../src/product/list/collections/hook/useCollectionsPageQueryParams';\n\nimport {\n  ListPageSkeleton,\n} from '../../src/product/list/pc/components/ListPageSkeleton';\n\nimport { setFilterId, setQueryId } from '../../src/product/list/slice';\nimport {\n  initializeFilterId,\n} from '../../src/product/list/shared/util/initializeFilterId';\nimport {\n  productListSetScreenName,\n} from '../../src/product/list/shared/util/productListSetScreenName';\n\nconst FloatingNavigator = dynamic(\n  () => import('../../src/navigator/components/FloatingNavigator'),\n  { ssr: false },\n);\n\nconst Container = styled.div`\n  position: relative;\n  padding-bottom: 80px;\n`;\n\nexport default function CollectionList() {\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n  const { isReady } = useRouter();\n  const { site, collectionName, filters: urlBasedFilter } = useCollectionListPageQueryParams();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isReady) {\n      return;\n    }\n\n    const filterId = initializeFilterId(urlBasedFilter);\n\n    dispatch(setFilterId(filterId));\n    dispatch(setQueryId(null));\n    productListSetScreenName(collectionName, 'collections');\n  }, [collectionName, urlBasedFilter, dispatch, isReady]);\n\n  return (\n    <MainSiteProvider site={site}>\n      <Header />\n      <Container>\n        <ScrollEventTopButton>\n          {isReady && hasSession ? (\n            <CollectionListContainer collectionName={collectionName} />\n          ) : (\n            <ListPageSkeleton pageType='collections' />\n          )}\n        </ScrollEventTopButton>\n        <FloatingNavigator isTopInitial={!isReady || !hasSession} />\n      </Container>\n      <Footer />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/collections/index.tsx","import { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nexport default function CollectionsPage() {\n  const router = useRouter();\n\n  useEffect(() => {\n    router.replace('/main');\n  }, [router]);\n  return null;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/goods/[productCode].tsx","import {\n  getServerSideProductProps,\n  ProductDetailServerSideProps,\n} from '../../src/shared/utils/server-side-props';\nimport useProductDetailPage\n  from '../../src/product/detail/hooks/useProductDetailPage';\n\nimport PageMetaData from '../../src/shared/components/PageMeta/PageMetaData';\n\nimport MainSiteProvider\n  from '../../src/main/components/shared/MainSiteProvider';\nimport ProductDetailContainer\n  from '../../src/product/detail/pc/containers/ProductDetailContainer';\nimport { useScreenName } from '../../src/shared/hooks';\nimport { ScreenName } from '../../src/shared/amplitude';\nimport Header from '../../src/header/components/Header';\nimport { DEFAULT_KEYWORD } from '../../src/shared/constant/page-meta';\nimport { useAppSelector } from '../../src/shared/store';\n\nexport default function ProductPage({ product, adultVerificationFailed, verificationEmployeeFailed, error }: ProductDetailServerSideProps) {\n  useScreenName(ScreenName.PRODUCT_DETAIL_DESCRIPTION);\n  useProductDetailPage({\n    product,\n    adultVerificationFailed,\n    verificationEmployeeFailed,\n    error,\n  });\n\n  const { site } = useAppSelector(({ main }) => main);\n\n  if (!product || adultVerificationFailed) {\n    return null;\n  }\n\n  const { no, name, shortDescription, shareImageUrl } = product;\n\n  return (\n    <>\n      <PageMetaData\n        title={name}\n        description={shortDescription}\n        image={shareImageUrl}\n        url={`/goods/${no}`}\n        keyword={DEFAULT_KEYWORD}\n        site={site}\n      />\n      <MainSiteProvider site={site}>\n        <div id='top'>\n          <Header />\n          <ProductDetailContainer product={product} />\n        </div>\n      </MainSiteProvider>\n    </>\n  );\n}\n\nexport const getServerSideProps = getServerSideProductProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/index.tsx","import { INTRODUCE_PATH } from '../../src/shared/constant';\n\nimport Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../src/introduce/containers/pc/IntroduceLayout';\nimport AboutKurlyContainer from '../../src/introduce/containers/pc/AboutKurlyContainer';\n\nexport default function IntroducePage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout menu={INTRODUCE_PATH.introduce.name}>\n        <AboutKurlyContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/customer-system/index.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport CustomerSystemContainer\n  from '../../../src/introduce/containers/pc/CustomerSystemContainer';\n\nexport default function CustomerSystemPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout menu={INTRODUCE_PATH.customerSystem.name}>\n        <CustomerSystemContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/kurly-fresh-solution/index.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport KurlyFreshSolutionContainer\n  from '../../../src/introduce/containers/pc/KurlyFreshSolutionContainer';\n\nexport default function KurlyFreshSolutionPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout menu={INTRODUCE_PATH.kurlyFreshSolution.name}>\n        <KurlyFreshSolutionContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/price-policy/index.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport PricePolicyContainer\n  from '../../../src/introduce/containers/pc/PricePolicyContainer';\n\nexport default function PricePolicyPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout menu={INTRODUCE_PATH.pricePolicy.name}>\n        <PricePolicyContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/area-producer.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport AreaProducerContainer\n  from '../../../src/introduce/containers/pc/AreaProducerContainer';\n\nexport default function AreaProducerPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.areaProducer.name}\n      >\n        <AreaProducerContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/eco-organic.tsx","import Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport { INTRODUCE_PATH } from '../../../src/shared/constant';\nimport EcoOrganicContainer\n  from '../../../src/introduce/containers/pc/EcoOrganicContainer';\n\nexport default function EcoOrganicPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.ecoOrganic.name}\n      >\n        <EcoOrganicContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/eco-plantation-breeding.tsx","import Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport { INTRODUCE_PATH } from '../../../src/shared/constant';\nimport EcoPlantationBreedingContainer\n  from '../../../src/introduce/containers/pc/EcoPlantationBreedingContainer';\n\nexport default function EcoPlantationBreedingPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.ecoPlantationBreeding.name}\n      >\n        <EcoPlantationBreedingContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/food-additive.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport FoodAdditiveContainer\n  from '../../../src/introduce/containers/pc/FoodAdditiveContainer';\n\nexport default function FoodAdditivePage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.foodAdditive.name}\n      >\n        <FoodAdditiveContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/gmo-food.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport GmoFoodContainer\n  from '../../../src/introduce/containers/pc/GmoFoodContainer';\n\nexport default function GmoFoodPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.gmoFood.name}\n      >\n        <GmoFoodContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/health-functional-food.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport HealthFunctionalFoodContainer\n  from '../../../src/introduce/containers/pc/HealthFunctionalFoodContainer';\n\nexport default function HealthFunctionalFoodPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.healthFunctionalFood.name}\n      >\n        <HealthFunctionalFoodContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/index.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport QualityStandardContainer\n  from '../../../src/introduce/containers/pc/QualityStandardContainer';\n\nexport default function qualityStandardPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout menu={INTRODUCE_PATH.qualityStandard.name}>\n        <QualityStandardContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/infant-food.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport InfantFoodContainer\n  from '../../../src/introduce/containers/pc/InfantFoodContainer';\n\nexport default function InfantFoodPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.infantFood.name}\n      >\n        <InfantFoodContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/japanese-food.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport JapaneseFoodContainer\n  from '../../../src/introduce/containers/pc/JapaneseFoodContainer';\n\nexport default function JapaneseFoodPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.japaneseFood.name}\n      >\n        <JapaneseFoodContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/pesticide-use.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport PesticideUseContainer\n  from '../../../src/introduce/containers/pc/PesticideUseContainer';\n\nexport default function PesticideUsePage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.pesticideUse.name}\n      >\n        <PesticideUseContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/pet-food.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport PetFoodContainer\n  from '../../../src/introduce/containers/pc/PetFoodContainer';\n\nexport default function PetFoodPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.petFood.name}\n      >\n        <PetFoodContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/production-process.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport ProductionProcessContainer\n  from '../../../src/introduce/containers/pc/ProductionProcessContainer';\n\nexport default function ProductionProcessPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.productionProcess.name}\n      >\n        <ProductionProcessContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/safety-hygiene.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport SafetyHygieneContainer\n  from '../../../src/introduce/containers/pc/SafetyHygieneContainer';\n\nexport default function SafetyHygienePage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.safetyHygiene.name}\n      >\n        <SafetyHygieneContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/quality-standard/special-product.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport SpecialProductContainer\n  from '../../../src/introduce/containers/pc/SpecialProductContainer';\n\nexport default function SpecialProductPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.specialProduct.name}\n      >\n        <SpecialProductContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/sustainable-distribution/index.tsx","import Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport { INTRODUCE_PATH } from '../../../src/shared/constant';\nimport SustainableDistributionContainer\n  from '../../../src/introduce/containers/pc/SustainableDistributionContainer';\n\nexport default function SustainableDistributionPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout menu={INTRODUCE_PATH.sustainableDistribution.name}>\n        <SustainableDistributionContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/sustainable-distribution/joint-growth.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport JointGrowthContainer\n  from '../../../src/introduce/containers/pc/JointGrowthContainer';\n\nexport default function JointGrowthPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.sustainableDistribution.name}\n        subMenu={INTRODUCE_PATH.jointGrowth.name}\n      >\n        <JointGrowthContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/sustainable-distribution/packaging-materials.tsx","import { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport PackagingMaterialsContainer\n  from '../../../src/introduce/containers/pc/PackagingMaterialsContainer';\n\nexport default function PackagingMaterialsPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.sustainableDistribution.name}\n        subMenu={INTRODUCE_PATH.packagingMaterials.name}\n      >\n        <PackagingMaterialsContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/sustainable-distribution/product-selection.tsx","import Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport { INTRODUCE_PATH } from '../../../src/shared/constant';\nimport ProductSelectionContainer\n  from '../../../src/introduce/containers/pc/ProductSelectionContainer';\n\nexport default function ProductSelectionPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.sustainableDistribution.name}\n        subMenu={INTRODUCE_PATH.productSelection.name}\n      >\n        <ProductSelectionContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/introduce/sustainable-distribution/social-contribution.tsx","import Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/pc/IntroduceLayout';\nimport { INTRODUCE_PATH } from '../../../src/shared/constant';\nimport SocialContributionContainer\n  from '../../../src/introduce/containers/pc/SocialContributionContainer';\n\nexport default function SocialContributionPage() {\n  return (\n    <>\n      <Header />\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.sustainableDistribution.name}\n        subMenu={INTRODUCE_PATH.socialContribution.name}\n      >\n        <SocialContributionContainer />\n      </IntroduceLayout>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/index.tsx","export default function Home() {\n  return (\n    <div>\n      <h1>모바일 홈</h1>\n    </div>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/address/index.tsx","import { useEffect, useState } from 'react';\n\nimport { AddressData } from 'react-daum-postcode';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\n\nimport styled from '@emotion/styled';\n\nimport Alert from '../../../src/shared/components/Alert/Alert';\nimport {\n  loadDeliveryPolicy, loadGiftInformation, setExternalOrderNo, updateAddress,\n} from '../../../src/gift/slice';\nimport CloseButton from '../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\n\nimport { AppState } from '../../../src/shared/store';\n\nimport { DeliveryProps, DeliveryType } from '../../../src/shared/interfaces';\nimport { refinementAddress } from '../../../src/shared/utils/shipping-address';\n\nconst DaumPostcode = dynamic(() => import('react-daum-postcode'), {\n  ssr: false,\n});\n\nconst Container = styled.div`\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nexport default function SearchAddressPage() {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const { externalOrderNo, policy } = useSelector(({ gift }: AppState) => gift);\n\n  const [isUpdatePolicy, setUpdatePolicy] = useState(false);\n\n  const handleSearchResult = () => {\n    const { deliveryType, deliveryUnavailableReason, addtionalDeliveryNotice } = policy;\n\n    if (deliveryUnavailableReason !== '' || addtionalDeliveryNotice !== '') {\n      Alert({ text: `${deliveryUnavailableReason}\\n${addtionalDeliveryNotice}` });\n    }\n\n    // 배송불가 지역일 때\n    if (deliveryType === 'disable' as DeliveryType) {\n      dispatch(updateAddress({\n        address: '',\n      }));\n      router.push(`/m/address/result?externalGroupOrderNo=${externalOrderNo}`, `/address/result?externalGroupOrderNo=${externalOrderNo}`);\n    } else {\n      router.push(`/m/gift?externalGroupOrderNo=${externalOrderNo}`, `/gift?externalGroupOrderNo=${externalOrderNo}`);\n    }\n  };\n\n  const onComplete = (data: AddressData) => {\n    const requestBody: DeliveryProps = refinementAddress(data);\n    const { roadAddress } = requestBody;\n    dispatch(updateAddress({\n      address: roadAddress,\n    }));\n    dispatch(loadDeliveryPolicy(requestBody));\n    setUpdatePolicy(true);\n  };\n\n  const moveGiftPage = () => {\n    router.replace(`/m/gift?externalGroupOrderNo=${externalOrderNo}`, `/gift?externalGroupOrderNo=${externalOrderNo}`);\n  };\n\n  useEffect(() => {\n    if (!isUpdatePolicy) {\n      return;\n    }\n    handleSearchResult();\n  }, [policy]);\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (!router.query.externalGroupOrderNo) {\n      router.push('/m2/error.php');\n    }\n\n    // 주소 검색 시 새로고침 했을 경우, 다시 정보를 조회합니다.\n    dispatch(setExternalOrderNo(router.query.externalGroupOrderNo));\n    dispatch(loadGiftInformation(String(router.query.externalGroupOrderNo)));\n  }, [router.isReady, dispatch]);\n\n  return (\n    <Container>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={moveGiftPage} />\n        </HeaderButtons>\n        <HeaderTitle>주소 검색</HeaderTitle>\n      </MobileHeader>\n\n      <DaumPostcode\n        height=\"calc(100vh - 44px)\"\n        onComplete={onComplete}\n      />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/address/result.tsx","import styled from '@emotion/styled';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SweetAlertResult } from 'sweetalert2';\n\nimport { AppState } from '../../../src/shared/store';\nimport { loadGiftInformation, postGiftReject, setExternalOrderNo } from '../../../src/gift/slice';\n\nimport CloseButton from '../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport GiftRefusal from '../../../src/shared/components/Address/SearchAddress/result/GiftRefusal';\nimport SearchAnotherAddress from '../../../src/shared/components/Address/SearchAddress/result/SearchAnotherAddress';\nimport Alert from '../../../src/shared/components/Alert/Alert';\n\nconst Wrapper = styled.div`\n  display: flex;\n  height: calc(100vh - 44px);\n  justify-content: center;\n  align-items: center;\n  padding: 0 20px;\n`;\n\nexport default function SearchAddressResultPage() {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const { externalOrderNo } = useSelector(({ gift }: AppState) => gift);\n  const {\n    ordererName,\n    status,\n  } = useSelector(({ gift }: AppState) => gift.receiver);\n\n  const handleRefusal = () => {\n    Alert({\n      text: `${ordererName}님이 보내신 선물을 거절하시겠습니까?`,\n      showCancelButton: true,\n    }).then(({ isConfirmed }: SweetAlertResult) => {\n      if (!isConfirmed) {\n        return;\n      }\n      dispatch(postGiftReject(externalOrderNo));\n    });\n  };\n\n  const moveGiftPage = () => {\n    router.back();\n  };\n\n  useEffect(() => {\n    if (status === 'REJECTED' || status === 'CANCELED') {\n      router.push(`/m/gift?externalGroupOrderNo=${externalOrderNo}`, `/gift?externalGroupOrderNo=${externalOrderNo}`);\n    }\n  }, [status]);\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n    if (!router.query.externalGroupOrderNo) {\n      router.push('/m2/error.php');\n\n      return;\n    }\n\n    // 주소 검색 시 새로고침 했을 경우, 다시 정보를 조회합니다.\n    dispatch(setExternalOrderNo(router.query.externalGroupOrderNo));\n    dispatch(loadGiftInformation(String(router.query.externalGroupOrderNo)));\n  }, [router.isReady, dispatch]);\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={moveGiftPage} />\n        </HeaderButtons>\n        <HeaderTitle>주소 검색</HeaderTitle>\n      </MobileHeader>\n      <Wrapper>\n        <SearchAnotherAddress handleSearchAddress={moveGiftPage} />\n        <GiftRefusal handleRefusal={handleRefusal} />\n      </Wrapper>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/address/shipping-address/index.tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport { useCallback, useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport SearchContainer from '../../../../src/shared/containers/SearchContainer';\n\nimport { ParsedUrlQuery } from 'querystring';\nimport { loadSession } from '../../../../src/shared/reducers/auth';\n\nconst Wrapper = styled.div`\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst Container = styled.div`\n  height: calc(100vh - 44px);\n`;\n\nexport default function ShippingAddressPage(){\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { isIframe } = router.query as ParsedUrlQuery & { isIframe?: string; };\n\n  const handleBackButton = useCallback(() => {\n    if (isIframe){\n      window.parent.postMessage({ source: 'closeAddressSearch' }, window.location.href);\n    } else {\n      window.history.back();\n    }\n  }, [isIframe]);\n\n  useEffect(() => {\n    if (isIframe) {\n      dispatch(loadSession());\n    }\n  }, [dispatch, isIframe]);\n\n  const SearchAddress = useCallback(() => (\n    <Wrapper>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton onClick={handleBackButton} />\n        </HeaderButtons>\n        <HeaderTitle>주소 검색</HeaderTitle>\n      </MobileHeader>\n      <Container>\n        <SearchContainer />\n      </Container>\n    </Wrapper>\n  ), [handleBackButton]);\n\n  return <SearchAddress />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/address/shipping-address/list.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\n\nimport { useAppSelector } from '../../../../src/shared/store';\nimport useShippingAddress from '../../../../src/cart/shared/hooks/useShippingAddress';\n\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport AddressList from '../../../../src/shared/components/Address/m/AddressList';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nconst Container = styled.div`\n  height: calc(100vh - 44px);\n`;\n\nconst AddAddressButton = styled.button`\n  padding: 0 20px;\n  font-size: 16px;\n  line-height: 44px;\n  color: ${COLOR.kurlyPurple};\n`;\n\nexport default function ShippingAddressListPage() {\n  useScreenName(ScreenName.SIMPLE_SHIPPING_ADDRESS_LIST);\n\n  const {\n    loading,\n    addressList,\n  } = useAppSelector(({ shippingAddress }) => shippingAddress);\n\n  const {\n    updateRecentAddress,\n    moveAddressModifyPage,\n    moveAddressAddPage,\n  } = useShippingAddress();\n\n  return (\n    <Wrapper>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>배송지 관리</HeaderTitle>\n        <HeaderButtons position=\"right\">\n          <AddAddressButton\n            type=\"button\"\n            onClick={moveAddressAddPage}\n          >\n            추가\n          </AddAddressButton>\n        </HeaderButtons>\n      </MobileHeader>\n      <Container>\n        <AddressList\n          loading={loading}\n          list={addressList}\n          handleChecked={updateRecentAddress}\n          handleUpdate={moveAddressModifyPage}\n        />\n      </Container>\n    </Wrapper>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/address/shipping-address/result.tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport { useCallback } from 'react';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport ResultContainer from '../../../../src/shared/containers/m/address/ResultContainer';\nimport { ParsedUrlQuery } from 'querystring';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nconst Container = styled.div`\n  padding: 0 20px;\n  height: calc(100vh - 44px);\n`;\n\nexport default function ShippingAddressResultPage() {\n  const router = useRouter();\n  const { isIframe } = router.query as ParsedUrlQuery & { isIframe?: string; };\n\n  const handleBackButton = useCallback(() => {\n    if (isIframe){\n      window.parent.postMessage({ source: 'closeAddressSearch' }, window.location.href);\n    } else {\n      window.history.back();\n    }\n  }, [isIframe]);\n\n  return (\n    <Wrapper>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton onClick={handleBackButton} />\n        </HeaderButtons>\n        <HeaderTitle>배송지</HeaderTitle>\n      </MobileHeader>\n      <Container>\n        <ResultContainer />\n      </Container>\n    </Wrapper>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/address/shipping-address/update.tsx","import { useCallback } from 'react';\n\nimport { useRouter } from 'next/router';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport UpdateContainer from '../../../../src/shared/containers/m/address/UpdateContainer';\nimport { ParsedUrlQuery } from 'querystring';\n\nexport default function ShippingAddressUpdatePage() {\n  const router = useRouter();\n  const { isMypage } = router.query as ParsedUrlQuery & { isMypage?: string; };\n\n  const handleBackButton = useCallback(() => {\n    if (isMypage){\n      window.parent.postMessage({ source: 'closeAddressSearch' }, window.location.href);\n    } else {\n      window.history.back();\n    }\n  }, [isMypage]);\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton onClick={handleBackButton} />\n        </HeaderButtons>\n        <HeaderTitle>배송지</HeaderTitle>\n      </MobileHeader>\n      <UpdateContainer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/beauty-benefit/index.tsx","import { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\nimport MainHeaderContainer\n  from '../../../src/shared/components/m/header/MainHeaderContainer';\nimport TopNavigationBar\n  from '../../../src/shared/components/navigation/TopNavigationBar';\n\nimport EventBenefitContainer\n  from '../../../src/event-benefit/shared/containers/EventBenefitContainer';\nimport { useAppSelector } from '../../../src/shared/store';\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport MainSiteProvider\n  from '../../../src/main/components/shared/MainSiteProvider';\nimport ScrollEventTopButton\n  from '../../../src/shared/components/Scroll/ScrollEventTopButton';\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\n\nexport default function EventBenefitPage() {\n  useScreenName(ScreenName.BENEFIT_LIST);\n  const { navigationOptions } = useAppSelector(({ main }) => main);\n\n  return (\n    <MainSiteProvider site=\"BEAUTY\">\n      <ScrollEventTopButton>\n        <MobileHeader visibleBanner>\n          <MainHeaderContainer/>\n          <TopNavigationBar activeId={3} options={navigationOptions}/>\n        </MobileHeader>\n        <EventBenefitContainer eventType=\"BEAUTY_BENEFIT\" />\n        <UserMenu/>\n      </ScrollEventTopButton>\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/beauty-event/index.tsx","import { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nimport MainHeaderContainer\n  from '../../../src/shared/components/m/header/MainHeaderContainer';\nimport TopNavigationBar\n  from '../../../src/shared/components/navigation/TopNavigationBar';\n\nimport EventBenefitContainer\n  from '../../../src/event-benefit/shared/containers/EventBenefitContainer';\nimport { useAppSelector } from '../../../src/shared/store';\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport MainSiteProvider\n  from '../../../src/main/components/shared/MainSiteProvider';\nimport ScrollEventTopButton\n  from '../../../src/shared/components/Scroll/ScrollEventTopButton';\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\n\nexport default function EventBenefitPage() {\n  useScreenName(ScreenName.BRAND_LIST);\n  const { navigationOptions } = useAppSelector(({ main }) => main);\n\n  return (\n    <MainSiteProvider site=\"BEAUTY\">\n      <ScrollEventTopButton>\n        <MobileHeader visibleBanner>\n          <MainHeaderContainer/>\n          <TopNavigationBar activeId={4} options={navigationOptions}/>\n        </MobileHeader>\n        <EventBenefitContainer eventType=\"BEAUTY_EVENT\" />\n        <UserMenu/>\n      </ScrollEventTopButton>\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/board/faq/index.tsx","import { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nexport default function FaqBoardList() {\n  const router = useRouter();\n\n  useEffect(() => {\n    void router.replace('/m/mypage/faq', '/mypage/faq');\n  }, [router]);\n\n  return <></>;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/board/notice/detail.tsx","import { useRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { ParsedUrlQuery } from 'querystring';\n\nimport Alert from '../../../../src/shared/components/Alert/Alert';\n\nimport { BOARD_PATH } from '../../../../src/shared/constant';\n\nexport default function NoticeDetailGateway() {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const { no } = router.query as ParsedUrlQuery & { no: string; };\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (!no) {\n      Alert({\n        text: '존재하지 않거나, 열람 할 수 없는 게시물 입니다.',\n      }).then(() => {\n        router.back();\n      });\n    } else {\n      router.replace(`${BOARD_PATH.noticeDetail.uri}/[no]`, `${BOARD_PATH.noticeDetail.uri}/${no}`);\n    }\n  }, [dispatch, no, router]);\n\n  return null;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/board/notice/index.tsx","import { useEffect } from 'react';\n\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer\n  from '../../../../src/shared/containers/m/CartButtonContainer';\nimport { isWebview } from '../../../../util/window/getDevice';\nimport appService from '../../../../src/shared/services/app.service';\nimport { useScreenName, useWebview } from '../../../../src/shared/hooks';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport { ScreenName } from '../../../../src/shared/amplitude';\nimport {\n  PagingContextProvider,\n} from '../../../../src/board/context/PagingContext';\nimport MobileNoticeListContainer\n  from '../../../../src/board/containers/m/NoticeListContainer';\n\nexport default function NoticeBoardList() {\n  useScreenName(ScreenName.NOTICE_LIST);\n\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('공지사항');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>공지사항</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n      <PagingContextProvider>\n        <MobileNoticeListContainer />\n      </PagingContextProvider>\n\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/board/notice/detail/[no].tsx","import { useRouter } from 'next/router';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useEffect } from 'react';\n\nimport { useScreenName, useWebview } from '../../../../../src/shared/hooks';\nimport { isWebview } from '../../../../../util/window/getDevice';\nimport { ParsedUrlQuery } from 'querystring';\nimport appService from '../../../../../src/shared/services/app.service';\nimport HeaderTitle\n  from '../../../../../src/shared/components/layouts/HeaderTitle';\n\nimport { ScreenName } from '../../../../../src/shared/amplitude';\n\nimport MobileHeader\n  from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons\n  from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport UserMenu from '../../../../../src/shared/components/layouts/UserMenu';\nimport Alert from '../../../../../src/shared/components/Alert/Alert';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport CartButtonContainer\n  from '../../../../../src/shared/containers/m/CartButtonContainer';\nimport NoticeDetailContainer\n  from '../../../../../src/board/containers/m/NoticeDetailContainer';\n\nexport default function NoticeBoardDetail() {\n  useScreenName(ScreenName.NOTICE_DETAIL);\n\n  const webview = useWebview();\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const { no } = router.query as ParsedUrlQuery & { no: string; };\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (!no) {\n      Alert({\n        text: '존재하지 않거나, 열람 할 수 없는 게시물 입니다.',\n      }).then(() => {\n        router.back();\n      });\n    }\n\n    if (isWebview()) {\n      appService.changeTitle('공지사항');\n    }\n  }, [dispatch, no, router]);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>공지사항</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      {no && <NoticeDetailContainer noticeNo={no} />}\n\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/cart/counter.tsx","import { useSubmitCounter } from '../../../src/cart/shared/hooks/useSubmitCounter';\n\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../src/shared/components/layouts/HeaderTitle';\nimport BackButton from '../../../src/shared/components/Button/BackButton';\nimport HeaderButtons from '../../../src/shared/components/layouts/HeaderButtons';\nimport Loading from '../../../src/shared/components/Loading/Loading';\n\nexport default function CounterPage() {\n  useSubmitCounter();\n  return (\n    <>\n      <MobileHeader visibleBanner>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>장바구니</HeaderTitle>\n      </MobileHeader>\n      <Loading />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/cart/index.tsx","import { useRouter } from 'next/router';\n\nimport { useAppSelector } from '../../../src/shared/store';\n\nimport useCartPage from '../../../src/cart/shared/hooks/useCartPage';\nimport { productCartLoading } from '../../../src/cart/shared/reducers/cart.slice';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../src/shared/components/layouts/HeaderTitle';\nimport HeaderButtons from '../../../src/shared/components/layouts/HeaderButtons';\nimport MobileFooter from '../../../src/shared/components/layouts/MobileFooter';\n\nimport DestinationContainer from '../../../src/cart/m/containers/DestinationContainer';\nimport ProductsContainer from '../../../src/cart/m/containers/ProductsContainer';\nimport SubmitContainer from '../../../src/cart/m/containers/SubmitContainer';\nimport PriceContainer from '../../../src/cart/m/containers/PriceContainer';\nimport CartControlContainer from '../../../src/cart/m/containers/CartControlContainer';\nimport CloseButton from '../../../src/shared/components/Button/CloseButton';\nimport LoadingCart from '../../../src/cart/m/components/LoadingCart';\nimport EmptyCart from '../../../src/cart/m/components/EmptyCart';\n\nexport default function CartPage() {\n  useScreenName(ScreenName.CART);\n\n  const {\n    isGuest,\n    isCartEmpty,\n    checkedCount,\n    price,\n    shipping,\n    pointBenefit,\n  } = useCartPage();\n\n  const router = useRouter();\n  const isLoading = useAppSelector(productCartLoading);\n\n  const moveBack = () => {\n    router.back();\n  };\n\n  return (\n    <>\n      <MobileHeader visibleBanner>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={moveBack} />\n        </HeaderButtons>\n        <HeaderTitle>장바구니</HeaderTitle>\n      </MobileHeader>\n      <DestinationContainer />\n      {isLoading && <LoadingCart />}\n      {isCartEmpty ? <EmptyCart />\n        : (\n          <CartControlContainer>\n            <ProductsContainer />\n          </CartControlContainer>\n        )}\n      {!isCartEmpty && (\n        <PriceContainer\n          isGuest={isGuest}\n          price={price}\n          pointBenefit={pointBenefit}\n          shipping={shipping}\n          checkedCount={checkedCount}\n        />\n      )}\n      <MobileFooter transparent height={52}>\n        <SubmitContainer\n          isCartEmpty={isCartEmpty}\n          checkedCount={checkedCount}\n          price={price}\n        />\n      </MobileFooter>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/categories/[categoryNo].tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport { useEffect, useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useInView } from 'react-intersection-observer';\n\nimport { isEmpty } from 'lodash';\n\nimport { useAppSelector } from '../../../src/shared/store';\n\nimport MainSiteProvider from '../../../src/main/components/shared/MainSiteProvider';\n\nimport { useCategoriesPageQueryParams } from '../../../src/product/list/categories/hook/useCategoriesPageQueryParams';\nimport { useCategory } from '../../../src/product/list/categories/hook/useCategory';\n\nimport ScrollEventTopButton from '../../../src/shared/components/Scroll/ScrollEventTopButton';\n\nimport CategoryListContainer from '../../../src/product/list/categories/m/CategoryListContainer';\n\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../src/shared/components/layouts/HeaderTitle';\nimport DeliveryLocationContainer from '../../../src/header/containers/m/DeliveryLocationContainer';\nimport CartButtonContainer from '../../../src/shared/containers/m/CartButtonContainer';\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\n\nimport COLOR from '../../../src/shared/constant/colorset';\nimport { initializeFilterId } from '../../../src/product/list/shared/util/initializeFilterId';\nimport { setFilterId, setQueryId } from '../../../src/product/list/slice';\nimport { productListSetScreenName } from '../../../src/product/list/shared/util/productListSetScreenName';\nimport Loading from '../../../src/shared/components/Loading/Loading';\nimport SkeletonLoading from '../../../src/shared/components/Loading/SkeletonLoading';\nimport Menu from '../../../src/product/list/m/components/Menu';\nimport { useSiblingCategory } from '../../../src/product/list/categories/hook/useSiblingCategory';\n\nimport { amplitudeService } from '../../../src/shared/amplitude';\nimport { SelectCategoryMenu } from '../../../src/shared/amplitude/events';\n\nconst MenuArea = styled.div`\n  height: 44px;\n`;\n\nconst Line = styled.div<{ isShow: boolean; }>`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: 1px;\n  opacity: ${({ isShow }) => (isShow ? 1 : 0)};\n  background-image: linear-gradient(\n    to top,\n    ${COLOR.lightGray} 0%,\n    ${COLOR.lightGray} 51%,\n    transparent 51%\n  );\n  transition: opacity 1s;\n`;\n\nexport default function CategoryList() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { pathname, query } = router;\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n  const { isReady } = useRouter();\n  const {\n    site,\n    categoryNo,\n    filters: urlBasedFilter,\n  } = useCategoriesPageQueryParams();\n  const { data: categoryData, status: categoryQueryStatus } = useCategory({ categoryNo });\n\n  const [isMenuLine, setIsMenuLine] = useState(false);\n  const { ref, entry } = useInView();\n\n  useEffect(() => {\n    if (!entry) {\n      return;\n    }\n\n    setIsMenuLine(!entry.isIntersecting);\n  }, [entry]);\n\n  useEffect(() => {\n    if (!isReady) {\n      return;\n    }\n\n    const filterId = initializeFilterId(urlBasedFilter);\n\n    dispatch(setFilterId(filterId));\n    dispatch(setQueryId(null));\n    productListSetScreenName(categoryNo, 'categories');\n  }, [categoryNo, dispatch, isReady, urlBasedFilter]);\n\n  const handleMenuChange = (code: string, name: string) => {\n    router.replace({\n      pathname,\n      query: {\n        ...query,\n        page: 1,\n        categoryNo: code,\n        filters: null,\n        ...(site === 'BEAUTY' && { site: 'beauty' }),\n      },\n    }).then(() =>\n      amplitudeService.logEvent(\n        new SelectCategoryMenu({\n          rootCategory: {\n            code: categoryData?.rootCategory.code ?? '',\n            name: categoryData?.rootCategory.name ?? '',\n          },\n          siblingCategory: {\n            code,\n            name,\n          },\n        }),\n      ),\n    );\n  };\n\n  const rootCategoryCode = categoryData?.rootCategory.code;\n\n  const { data: siblingCategoriesData } = useSiblingCategory({\n    categoryNo: rootCategoryCode,\n    options: { enabled: !!rootCategoryCode },\n  });\n\n  return (\n    <MainSiteProvider site={site}>\n      <ScrollEventTopButton>\n        <MobileHeader>\n          <>\n            <HeaderButtons position='left'>\n              <BackButton />\n            </HeaderButtons>\n            <HeaderTitle>\n              {categoryQueryStatus === 'loading' && (\n                <SkeletonLoading width={180} height={20} />\n              )}\n              {categoryQueryStatus === 'success' &&\n                !!categoryData &&\n                categoryData.rootCategory.name}\n            </HeaderTitle>\n            <HeaderButtons position='right'>\n              <DeliveryLocationContainer />\n              <CartButtonContainer />\n            </HeaderButtons>\n            {categoryQueryStatus === 'success' &&\n              !!categoryData && (\n              <Menu\n                code={categoryNo}\n                rootCategoryCode={rootCategoryCode ?? categoryNo}\n                isShowAll={categoryData.isShowAll}\n                onMenuChange={handleMenuChange}\n              />\n            )}\n            <Line isShow={isMenuLine && isEmpty(siblingCategoriesData) && !categoryData?.isShowAll} />\n          </>\n        </MobileHeader>\n        {!isEmpty(siblingCategoriesData) || categoryData?.isShowAll ? <MenuArea /> : null}\n        <div ref={ref} />\n        {isReady && hasSession ? (\n          <CategoryListContainer\n            categoryNo={categoryNo}\n            extraHeight={!isEmpty(siblingCategoriesData) || categoryData?.isShowAll ? 44 : 0}\n          />\n        ) : (\n          <Loading />\n        )}\n      </ScrollEventTopButton>\n      <UserMenu />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/category/index.tsx","import { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport styled from '@emotion/styled';\n\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName, amplitudeService } from '../../../src/shared/amplitude';\nimport { SelectCategory } from '../../../src/shared/amplitude/events';\nimport { AmplitudeCateogryMenu } from '../../../src/shared/interfaces/CategoryManu';\n\nimport HeaderButtons\n  from '../../../src/shared/components/layouts/HeaderButtons';\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport DeliveryLocationContainer\n  from '../../../src/header/containers/m/DeliveryLocationContainer';\nimport CartButtonContainer\n  from '../../../src/shared/containers/m/CartButtonContainer';\n\nimport { AppState, useAppSelector } from '../../../src/shared/store';\nimport { loadCategories } from '../../../src/shared/reducers/category';\nimport CategoryMenuContainer\n  from '../../../src/category/containers/CategoryMenuContainer';\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\nimport COLOR from '../../../src/shared/constant/colorset';\nimport HeaderTitle from '../../../src/shared/components/layouts/HeaderTitle';\nimport MainSiteProvider from '../../../src/main/components/shared/MainSiteProvider';\nimport { getMainSiteFromQueryString } from '../../../src/product/list/shared/util/getMainSiteFromQueryString';\n\nconst Container = styled.div();\n\nconst Title = styled.div`\n  width: 100%;\n  height: 100%;\n  padding-left: unset;\n  padding-right: unset;\n  padding-inline: 49px;\n  left: 0;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  transform: translateZ(0px);\n  font-size: 16px;\n  font-weight: 600;\n  line-height: normal;\n  text-align: center;\n  color: ${COLOR.kurlyWhite};\n`;\n\nexport default function Menu() {\n  useScreenName(ScreenName.CATEGORY);\n  const router = useRouter();\n  const { query } = router;\n  const { site } = query as { site: string; };\n  const { site: mainApp } = useAppSelector(({ main }) => main);\n  const mainSite = mainApp === 'BEAUTY' ? mainApp : getMainSiteFromQueryString(site);\n\n  const dispatch = useDispatch();\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n\n  const {\n    categories,\n    recommend,\n    categoriesMeta,\n  } = useSelector(({ category }: AppState) => category);\n\n  useEffect(() => {\n    if (!hasSession) {\n      return;\n    }\n\n    dispatch(loadCategories());\n  }, [hasSession, dispatch]);\n\n  const selectCategory = (selectMenu: AmplitudeCateogryMenu) => {\n    amplitudeService.logEvent(new SelectCategory({ selectMenu }));\n  };\n\n  return (\n    <MainSiteProvider site={mainSite}>\n      <Container>\n        <MobileHeader color={mainSite === 'MARKET' ? 'purple' : 'white'}>\n          {mainSite === 'MARKET'\n            ? <Title>카테고리</Title>\n            : <HeaderTitle>카테고리</HeaderTitle>\n          }\n          <HeaderButtons position=\"right\">\n            <DeliveryLocationContainer color={mainSite === 'MARKET' ? 'white' : 'black'} />\n            <CartButtonContainer color={mainSite === 'MARKET' ? 'white' : 'black'} />\n          </HeaderButtons>\n        </MobileHeader>\n        <CategoryMenuContainer\n          categories={categories}\n          recommend={recommend}\n          categoriesMeta={categoriesMeta}\n          mainSite={mainSite}\n          onSelectCategory={selectCategory}\n        />\n      </Container>\n      <UserMenu />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/collection-groups/[collectionGroupsCode].tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport { useEffect, useState, useCallback, useMemo } from 'react';\n\nimport { useInView } from 'react-intersection-observer';\n\nimport { useDispatch } from 'react-redux';\n\nimport { head, isEmpty } from 'lodash';\n\nimport { useAppSelector } from '../../../src/shared/store';\n\nimport { useCollectionListPageQueryParams } from '../../../src/product/list/collections/hook/useCollectionsPageQueryParams';\n\nimport ScrollEventTopButton from '../../../src/shared/components/Scroll/ScrollEventTopButton';\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../src/shared/components/Button/BackButton';\nimport DeliveryLocationContainer from '../../../src/header/containers/m/DeliveryLocationContainer';\nimport CartButtonContainer from '../../../src/shared/containers/m/CartButtonContainer';\n\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\nimport CollectionListContainer from '../../../src/product/list/collections/m/containers/CollectionListContainer';\nimport { useCollectionGroups } from '../../../src/product/list/collections/hook/useCollectionGroups';\nimport HeaderTitle from '../../../src/shared/components/layouts/HeaderTitle';\nimport Loading from '../../../src/shared/components/Loading/Loading';\n\nimport COLOR from '../../../src/shared/constant/colorset';\nimport { initializeFilterId } from '../../../src/product/list/shared/util/initializeFilterId';\nimport { setFilterId } from '../../../src/product/list/slice';\nimport { productListSetScreenName } from '../../../src/product/list/shared/util/productListSetScreenName';\nimport SkeletonLoading from '../../../src/shared/components/Loading/SkeletonLoading';\nimport MenuCollections from '../../../src/product/list/m/components/MenuCollections';\nimport { amplitudeService } from '../../../src/shared/amplitude';\nimport { SelectCollectionMenu, SelectCollectionBanner } from '../../../src/shared/amplitude/events';\n\nconst MenuArea = styled.div`\n  height: 44px;\n`;\n\nconst WrapperEmptyProduct = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nconst EmptyProduct = styled.div`\n  position: fixed;\n  top: 50%;\n  width: 100%;\n  margin-top: -10px;\n  font-size: 16px;\n  color: ${COLOR.kurlyGray400};\n  line-height: 21px;\n  text-align: center;\n`;\n\nconst Line = styled.div<{ isShown: boolean; }>`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: 1px;\n  opacity: ${({ isShown }) => (isShown ? 1 : 0)};\n  background-image: linear-gradient(\n    to top,\n    ${COLOR.lightGray} 0%,\n    ${COLOR.lightGray} 51%,\n    transparent 51%\n  );\n  transition: opacity 1s;\n`;\n\nexport default function CollectionList() {\n  const dispatch = useDispatch();\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n  const router = useRouter();\n  const { isReady, pathname, query } = router;\n\n  const {\n    site,\n    collectionGroupsCode,\n    collection,\n    filters: urlBasedFilter,\n  } = useCollectionListPageQueryParams();\n\n  const {\n    data: groupsData,\n    status,\n  } = useCollectionGroups({ collectionGroupsCode });\n  const collectioGroups = useMemo(() => groupsData ? groupsData.collections : [], [groupsData]);\n\n  const handlePageChange = useCallback((groupCode: string) => {\n    router.replace({\n      pathname,\n      query: {\n        ...query,\n        page: 1,\n        filters: null,\n        collectionGroupsCode,\n        ...(groupCode && { collection: groupCode }),\n        ...(site === 'BEAUTY' && { site: 'beauty' }),\n      },\n    });\n  }, [collectionGroupsCode, pathname, query, router, site]);\n\n  const [isMenuLine, setIsMenuLine] = useState(false);\n  const { ref, entry } = useInView();\n\n  useEffect(() => {\n    if (!entry) {\n      return;\n    }\n\n    setIsMenuLine(!entry.isIntersecting);\n  }, [entry]);\n\n  useEffect(() => {\n    if (collection || isEmpty(collectioGroups)) {\n      return;\n    }\n\n    const groupFirstCode = head(collectioGroups);\n\n    if (groupFirstCode) {\n      handlePageChange(groupFirstCode.code);\n    }\n  }, [collectioGroups, collection, handlePageChange]);\n\n  useEffect(() => {\n    if (!isReady) {\n      return;\n    }\n\n    const filterId = initializeFilterId(urlBasedFilter);\n\n    dispatch(setFilterId(filterId));\n    productListSetScreenName(collectionGroupsCode, 'collections');\n  }, [collectionGroupsCode, urlBasedFilter, dispatch, isReady, collection]);\n\n  const handleMenuAmplitude = (groupCode: string) => {\n    amplitudeService.logEvent(\n      new SelectCollectionMenu({\n        groupCode,\n      }),\n    );\n  };\n\n  const handleBannerAmplitude = (url: string) => {\n    amplitudeService.logEvent(\n      new SelectCollectionBanner({\n        url,\n        groupCollectionId: collectionGroupsCode,\n        selectCode: collection,\n        groups: collectioGroups,\n      }),\n    );\n  };\n\n  return (\n    <>\n      <ScrollEventTopButton>\n        <MobileHeader>\n          {isReady && (\n            <>\n              <HeaderButtons position='left'>\n                <BackButton />\n              </HeaderButtons>\n              <HeaderTitle>\n                {status === 'loading' && (\n                  <SkeletonLoading width={180} height={20} />\n                )}\n                {status === 'success' && groupsData &&\n                  groupsData.title}\n              </HeaderTitle>\n              <HeaderButtons position='right'>\n                <DeliveryLocationContainer />\n                <CartButtonContainer />\n              </HeaderButtons>\n              {status === 'success' && (\n                <MenuCollections\n                  code={collection}\n                  groups={collectioGroups}\n                  onAmplitude={handleMenuAmplitude}\n                  onPageChange={handlePageChange}\n                />\n              )}\n              <Line isShown={isMenuLine && isEmpty(collectioGroups)} />\n            </>\n          )}\n        </MobileHeader>\n        {status === 'success' && !isEmpty(collectioGroups) && <MenuArea />}\n        <div ref={ref} />\n        {isReady && hasSession ? (\n          status === 'error' ?\n            <WrapperEmptyProduct>\n              <EmptyProduct>등록된 상품이 없습니다.</EmptyProduct>\n            </WrapperEmptyProduct>\n            : <CollectionListContainer collectionName={collection} bannerAmplitude={handleBannerAmplitude} isCollectionGroup={true} />\n        ) : (\n          <Loading />\n        )}\n      </ScrollEventTopButton>\n      <UserMenu />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/collections/[collectionName].tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport { useEffect, useState } from 'react';\n\nimport { useInView } from 'react-intersection-observer';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useAppSelector } from '../../../src/shared/store';\n\nimport MainSiteProvider from '../../../src/main/components/shared/MainSiteProvider';\nimport { useCollectionListPageQueryParams } from '../../../src/product/list/collections/hook/useCollectionsPageQueryParams';\n\nimport ScrollEventTopButton from '../../../src/shared/components/Scroll/ScrollEventTopButton';\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../src/shared/components/Button/BackButton';\nimport DeliveryLocationContainer from '../../../src/header/containers/m/DeliveryLocationContainer';\nimport CartButtonContainer from '../../../src/shared/containers/m/CartButtonContainer';\n\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\nimport CollectionListContainer from '../../../src/product/list/collections/m/containers/CollectionListContainer';\nimport { useCollection } from '../../../src/product/list/collections/hook/useCollection';\nimport HeaderTitle from '../../../src/shared/components/layouts/HeaderTitle';\nimport Loading from '../../../src/shared/components/Loading/Loading';\n\nimport COLOR from '../../../src/shared/constant/colorset';\nimport { initializeFilterId } from '../../../src/product/list/shared/util/initializeFilterId';\nimport { setFilterId, setQueryId } from '../../../src/product/list/slice';\nimport { productListSetScreenName } from '../../../src/product/list/shared/util/productListSetScreenName';\nimport MainHeaderContainer from '../../../src/shared/components/m/header/MainHeaderContainer';\nimport TopNavigationBar from '../../../src/shared/components/navigation/TopNavigationBar';\nimport SkeletonLoading from '../../../src/shared/components/Loading/SkeletonLoading';\n\nconst MenuArea = styled.div`\n  height: 44px;\n`;\n\nconst Line = styled.div<{ isShown: boolean; }>`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: 1px;\n  opacity: ${({ isShown }) => (isShown ? 1 : 0)};\n  background-image: linear-gradient(\n    to top,\n    ${COLOR.lightGray} 0%,\n    ${COLOR.lightGray} 51%,\n    transparent 51%\n  );\n  transition: opacity 1s;\n`;\n\nexport default function CollectionList() {\n  const dispatch = useDispatch();\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n  const router = useRouter();\n  const { isReady } = router;\n  const {\n    site,\n    collectionName,\n    filters: urlBasedFilter,\n  } = useCollectionListPageQueryParams();\n  const {\n    data: collectionData,\n    status,\n  } = useCollection({ collectionName });\n  const { navigationOptions } = useAppSelector(({ main }) => main);\n  const [isMenuLine, setIsMenuLine] = useState(false);\n  const [activeId, setActiveId] = useState(0);\n  const { ref, entry } = useInView();\n\n  useEffect(() => {\n    if (!entry) {\n      return;\n    }\n\n    setIsMenuLine(!entry.isIntersecting);\n  }, [entry]);\n\n  useEffect(() => {\n    if (!isReady) {\n      return;\n    }\n\n    const filterId = initializeFilterId(urlBasedFilter);\n\n    dispatch(setFilterId(filterId));\n    dispatch(setQueryId(null));\n    productListSetScreenName(collectionName, 'collections');\n\n    const main = navigationOptions.find((it) => it.link.includes(`/collections/${collectionName}`));\n    setActiveId(main ? main.id : 0);\n  }, [\n    collectionName,\n    urlBasedFilter,\n    dispatch,\n    isReady,\n    navigationOptions,\n  ]);\n\n  return (\n    <>\n      <MainSiteProvider site={site}>\n        <ScrollEventTopButton>\n          <MobileHeader>\n            {!activeId && isReady ? (\n              <>\n                <HeaderButtons position='left'>\n                  <BackButton />\n                </HeaderButtons>\n                <HeaderTitle>\n                  {status === 'loading' && <SkeletonLoading width={180} height={20} />}\n                  {status === 'success' && !!collectionData && collectionData.title}\n                </HeaderTitle>\n                <HeaderButtons position='right'>\n                  <DeliveryLocationContainer />\n                  <CartButtonContainer />\n                </HeaderButtons>\n                <Line isShown={isMenuLine} />\n              </>\n            ) : (\n              <>\n                <MainHeaderContainer />\n                <TopNavigationBar\n                  activeId={activeId}\n                  options={navigationOptions}\n                />\n              </>\n            )}\n          </MobileHeader>\n          {activeId ? <MenuArea /> : null}\n          <div ref={ref} />\n          {isReady && hasSession ? (\n            <CollectionListContainer collectionName={collectionName} />\n          ) : (\n            <Loading />\n          )}\n        </ScrollEventTopButton>\n        <UserMenu />\n      </MainSiteProvider>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/gift/index.tsx","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { isEmpty } from 'lodash';\nimport { isAfter } from 'date-fns';\n\nimport { useRouter } from 'next/router';\n\nimport { AppState } from '../../../src/shared/store';\nimport {\n  loadGiftInformation,\n  postGiftApproved,\n  postGiftReject,\n  setExternalOrderNo,\n} from '../../../src/gift/slice';\n\nimport InformationContainer from '../../../src/gift/containers/InformationContainer';\nimport DecisionContainer from '../../../src/gift/containers/DecisionContainer';\nimport ShippingContainer from '../../../src/gift/containers/ShippingContainer';\n\nimport Alert from '../../../src/shared/components/Alert/Alert';\nimport Loading from '../../../src/shared/components/Loading/Loading';\n\nimport ReceivedContainer from '../../../src/gift/containers/ReceivedContainer';\nimport PolicyContainer from '../../../src/gift/containers/PolicyContainer';\nimport DeliveryResultContainer from '../../../src/gift/containers/DeliveryResultContainer';\n\nimport { notify, notifyAndFocus, notifyAndScroll } from '../../../src/shared/reducers/page';\n\nimport { phoneValidate, findNotAllowText, formatMobileNumber } from '../../../src/shared/utils';\nimport { removeHyphen } from '../../../src/shared/services';\nimport Footer from '../../../src/footer/components/m/Footer';\nimport { Divider } from '../../../src/shared/components/Divider/Divider';\n\nexport default function GiftReceivePage() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  const {\n    externalOrderNo,\n    acceptInfo,\n    loading,\n    receiver: {\n      orderNo,\n      status,\n      availableDate,\n      ordererName,\n    },\n  } = useSelector(({ gift }: AppState) => gift);\n\n  // isNoticeTime : 고객 인지 및 CC 대응을 위한 기존 유효기간 노출 처리 시간\n  const isNoticeTime = isAfter(new Date(), new Date(availableDate));\n\n  const validation = async () => {\n    const {\n      address, addressDetail, phoneNumber, memo, termsAgreements,\n    } = acceptInfo;\n\n    const removeHyphenPhoneNumber = removeHyphen(phoneNumber.trim());\n\n    if (isEmpty(removeHyphenPhoneNumber)) {\n      dispatch(notifyAndFocus({\n        message: '휴대폰 번호를 입력해주세요.',\n        documentId: 'receiver-phone-number',\n      }));\n      return false;\n    }\n\n    if (!phoneValidate(removeHyphenPhoneNumber)) {\n      dispatch(notifyAndFocus({\n        message: '정확한 휴대폰 번호를 입력해주세요.',\n        documentId: 'receiver-phone-number',\n      }));\n      return false;\n    }\n\n    if (isEmpty(address)) {\n      dispatch(notifyAndScroll({\n        message: '주소를 입력해주세요.',\n        scrollId: 'receiver-adress-area',\n      }));\n      return false;\n    }\n\n    if (isEmpty(addressDetail)) {\n      const { isConfirmed } = await Alert({\n        text: '나머지 주소를 입력하지 않으셨습니다. 이대로 저장하시겠습니까?',\n        showConfirmButton: true,\n        showCancelButton: true,\n        returnFocus: false,\n      });\n      if (!isConfirmed) {\n        document.getElementById('receiver-sub-address')?.focus();\n        return false;\n      }\n    } else {\n      const isNotAllowAddr = findNotAllowText(addressDetail);\n      if (!isEmpty(isNotAllowAddr)) {\n        dispatch(notifyAndFocus({\n          message: `주소에 사용할 수 없는 문자가 있습니다. 다시 확인해주세요. \\n${isNotAllowAddr?.join(' ')}`,\n          documentId: 'receiver-sub-address',\n        }));\n        return false;\n      }\n    }\n\n    // 미지원 문자열 판별\n    if (!isEmpty(memo)) {\n      const isNotAllowMemo = findNotAllowText(memo || '');\n\n      if (!isEmpty(isNotAllowMemo)) {\n        dispatch(notifyAndFocus({\n          message: `배송기사 요청사항에 사용할 수 없는 문자가 있습니다. 다시 확인해주세요. \\n${isNotAllowMemo?.join(' ')}`,\n          documentId: 'receiver-delivery-request',\n        }));\n        return false;\n      }\n    }\n\n    if (!termsAgreements.every(({ agreed }) => agreed)) {\n      dispatch(notify('선물 수락을 위해 필수 동의를 체크해주세요.'));\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleAccepted = async () => {\n    const validated = await validation();\n    if (!validated) {\n      return;\n    }\n\n    const { isConfirmed } = await Alert({\n      text: `${ordererName}님이 보내신 선물을 수락하시겠습니까?`,\n      showCancelButton: true,\n    });\n    if (!isConfirmed) {\n      return;\n    }\n\n    dispatch(postGiftApproved({\n      orderNo: externalOrderNo,\n      requestBody: {\n        ...acceptInfo,\n        phoneNumber: formatMobileNumber(acceptInfo.phoneNumber),\n      },\n    }));\n  };\n\n  const handleRejected = async () => {\n    const { isConfirmed } = await Alert({\n      text: `${ordererName}님이 보내신 선물을 거절하시겠습니까?`,\n      showCancelButton: true,\n    });\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    dispatch(postGiftReject(externalOrderNo));\n  };\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (!router.query.externalGroupOrderNo) {\n      router.push('/m2/error.php');\n      return;\n    }\n\n    dispatch(setExternalOrderNo(router.query.externalGroupOrderNo));\n    dispatch(loadGiftInformation(String(router.query.externalGroupOrderNo)));\n  }, [router.isReady, dispatch]);\n\n  return (\n    <>\n      {loading && <Loading />}\n      {orderNo !== 0 && status === 'READY_FOR_ACCEPT' && (\n        <>\n          <InformationContainer />\n          <Divider />\n          <ShippingContainer\n            isNoticeTime={isNoticeTime}\n          />\n          <Divider />\n          {!isNoticeTime && (\n            <DecisionContainer\n              handleAccepted={handleAccepted}\n              handleRejected={handleRejected}\n            />\n          )}\n          <Footer />\n        </>\n      )}\n      {orderNo !== 0 && status !== 'READY_FOR_ACCEPT' && (\n        <>\n          <ReceivedContainer />\n          <Divider />\n          <PolicyContainer />\n          <DeliveryResultContainer />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/goods/[productCode]/index.tsx","import { useRouter } from 'next/router';\n\nimport useProductDetailPage\n  from '../../../../src/product/detail/hooks/useProductDetailPage';\nimport {\n  getServerSideProductProps,\n  ProductDetailServerSideProps,\n} from '../../../../src/shared/utils/server-side-props';\n\nimport PageMetaData\n  from '../../../../src/shared/components/PageMeta/PageMetaData';\nimport ProductDetailContainer\n  from '../../../../src/product/detail/m/containers/ProductDetailContainer';\nimport ProductDetailHeaderContainer\n  from '../../../../src/product/detail/m/containers/ProductDetailHeaderContainer';\nimport MainSiteProvider\n  from '../../../../src/main/components/shared/MainSiteProvider';\nimport { ProductDetailContentType } from '../../../../src/product/detail/types';\nimport BuyFooterContainer\n  from '../../../../src/product/detail/m/containers/BuyFooterContainer';\n\nimport Navigator\n  from '../../../../src/product/detail/m/components/navigator/Navigator';\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\nimport { DEFAULT_KEYWORD } from '../../../../src/shared/constant/page-meta';\nimport { useAppSelector } from '../../../../src/shared/store';\n\nexport default function ProductPage({\n  product, adultVerificationFailed, verificationEmployeeFailed, error,\n}: ProductDetailServerSideProps) {\n  useScreenName(ScreenName.PRODUCT_DETAIL_DESCRIPTION);\n  useProductDetailPage({\n    product,\n    adultVerificationFailed,\n    verificationEmployeeFailed,\n    error,\n  });\n\n  const { site } = useAppSelector(({ main }) => main);\n\n  const { query: { tab } } = useRouter();\n  const tabContent = tab as ProductDetailContentType;\n\n  if (!product || adultVerificationFailed) {\n    return null;\n  }\n\n  const {\n    no, name, shortDescription, shareImageUrl, reviewCount, isReviewWritable,\n    isInquiryWritable,\n  } = product;\n\n  return (\n    <>\n      <PageMetaData\n        title={name}\n        description={shortDescription}\n        image={shareImageUrl}\n        url={`/goods/${no}`}\n        keyword={DEFAULT_KEYWORD}\n        site={site}\n      />\n      <MainSiteProvider site={site}>\n        <ProductDetailHeaderContainer>\n          <Navigator\n            reviewCount={reviewCount}\n            selectedContent={tabContent || ProductDetailContentType.DESCRIPTION}\n            isReviewWritable={isReviewWritable}\n            isInquiryWritable={isInquiryWritable}\n          />\n        </ProductDetailHeaderContainer>\n        <ProductDetailContainer\n          product={product}\n          selectedContent={tabContent || ProductDetailContentType.DESCRIPTION}\n        />\n        <BuyFooterContainer />\n      </MainSiteProvider>\n    </>\n  );\n}\n\nexport const getServerSideProps = getServerSideProductProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/goods/[productCode]/review/[reviewId].tsx","import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { format, parseISO } from 'date-fns';\nimport { isEmpty, isUndefined } from 'lodash';\n\n// eslint-disable-next-line import/no-unresolved\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Swiper as SwiperClass } from 'swiper/types';\n\nimport { AxiosError } from 'axios';\n\nimport type { BaseResponse } from '../../../../../src/shared/interfaces';\nimport httpClient from '../../../../../src/shared/configs/http-client';\nimport {\n  amplitudeService,\n  ScreenName,\n} from '../../../../../src/shared/amplitude';\nimport {\n  RemoveReviewIsHelpful,\n  SelectReviewIsHelpful,\n} from '../../../../../src/shared/amplitude/events/review';\nimport { useAppSelector } from '../../../../../src/shared/store';\nimport applyImageUrlFormat from '../../../../../src/shared/utils/image/imaegUrlformatter';\nimport rgbDataUrl from '../../../../../src/shared/utils/image/rgbDataUrl';\nimport Alert from '../../../../../src/shared/components/Alert/Alert';\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport Loading from '../../../../../src/shared/components/Loading/Loading';\nimport {\n  ThumbsUpActiveIcon,\n  ThumbsUpIcon,\n  arrow40x73Cfff,\n} from '../../../../../src/shared/images';\nimport { Check, QuestionMark, Close } from '../../../../../src/shared/icons';\nimport { COMMON_PATH } from '../../../../../src/shared/constant';\nimport COLOR from '../../../../../src/shared/constant/colorset';\n\nimport type { ProductReviewData } from '../../../../../src/product/board/review/types';\nimport { createProductReview } from '../../../../../src/product/board/review/ProductReview.service';\nimport {\n  getBadgeColors,\n  getReviewPagination,\n} from '../../../../../src/product/board/review/utils';\n\nimport EnlargedImageFrame from '../../../../../src/product/board/review/m/EnlargedImageFrame';\nimport { multiMaxLineText } from '../../../../../src/shared/utils';\nimport {\n  AboutReview,\n  Badge,\n  Footer,\n  Contents,\n  RegistrationDate,\n  Reviewer,\n} from '../../../../../src/product/board/review/m/ReviewItem/styled-components';\nimport NextImage from '../../../../../src/shared/components/NextImage';\n\nconst BeautyProfile = styled.span`\n  display: block;\n  margin-bottom: 2px;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 16px;\n  color: ${COLOR.kurlyGray800};\n`;\n\nconst DealProductName = styled.h3`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  color: ${COLOR.kurlyGray450};\n  ${multiMaxLineText(1)}\n`;\n\nconst Dim = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  border-radius: 3px;\n  background-color: hsla(0, 0%, 0%, 0.4);\n`;\n\nconst ImageFrame = styled.div`\n  width: 100vw;\n  display: flex;\n  overflow-x: scroll;\n`;\n\nconst ImageWrapper = styled.div`\n  height: 100vw;\n  aspect-ratio: 1;\n`;\n\nconst PaginationButton = styled.button<{ position: string; }>`\n  position: absolute;\n  z-index: 1;\n  left: 7px;\n  top: 50%;\n  width: 40px;\n  height: 73px;\n  margin-top: -38px;\n  background: url(${arrow40x73Cfff}) no-repeat 50% 50%;\n  background-size: cover;\n  ${({ position }) =>\n    position === 'right' &&\n    css`\n      left: auto;\n      right: 7px;\n      transform: rotate(180deg);\n    `}\n`;\n\nconst ImageGallery = styled.div<{ imageCount: number; }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 2px;\n  width: ${({ imageCount }) =>\n    imageCount > 0 ? `${42 * imageCount - 2}px` : '100%'};\n  max-width: 100%;\n  height: 40px;\n  margin-bottom: 20px;\n  overflow: hidden;\n`;\n\nconst Main = styled.main`\n  padding: 20px 16px 16px;\n`;\n\nconst LikeButton = styled.button<{ checked: boolean; }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 88px;\n  height: 32px;\n  padding: 0 12px;\n  border: 1px solid ${COLOR.kurlyGray250};\n  border-radius: 20px;\n  font-size: 12px;\n  line-height: 20px;\n  color: ${({ checked }) => (checked ? COLOR.kurlyPurple : COLOR.kurlyGray450)};\n`;\n\nconst LikeIcon = styled.div<{ checked: boolean; }>`\n  width: 15px;\n  height: 15px;\n  margin-right: 4px;\n  background: url(${({ checked }) =>\n    checked ? ThumbsUpActiveIcon : ThumbsUpIcon})\n    no-repeat center;\n`;\n\nconst ReviewImage = styled.div<{ width?: number; }>`\n  position: relative;\n  width: 40px;\n  height: 40px;\n\n  span {\n    border-radius: 3px;\n  }\n`;\n\nconst DealProductNameWrapper = styled.div`\n  display: flex;\n  position: relative;\n`;\n\nconst LayerMsg = styled.div`\n  width: 14px;\n  height: 14px;\n  padding-left: 5px;\n`;\n\nconst QuestionButton = styled.button`\n  vertical-align: -2px;\n`;\n\nconst Text = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: self-start;\n  position: absolute;\n  left: 0;\n  top: 21px;\n  width: 100%;\n  gap: 10px;\n  padding: 11px 10px 11px 12px;\n  border: 1px solid ${COLOR.kurlyGray800};\n  border-radius: 4px;\n  background-color: ${COLOR.kurlyWhite};\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  color: ${COLOR.kurlyGray450};\n`;\n\nconst blurDataUrl = rgbDataUrl(\n  parseInt('ee', 16),\n  parseInt('ee', 16),\n  parseInt('ee', 16),\n);\n\nexport default function ReviewPage() {\n  const router = useRouter();\n  const { isReady } = router;\n  const { productCode, reviewId, reviewList } = router.query;\n  const contentsProductNo = Number(productCode);\n  const reviewNo = Number(reviewId);\n\n  const [swiper, setSwiper] = useState<SwiperClass>();\n  const [selectedSlideIndex, setSelectedSlideIndex] = useState(0);\n  const [isEnlargedImage, setIsEnlargedImage] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const queryKey = isReady\n    ? ['product', contentsProductNo, 'review', reviewId]\n    : [];\n  const queryFn = async () => {\n    const url = `/product-review/v1/contents-products/${contentsProductNo}/reviews/${reviewId}`;\n    const response = await httpClient.get<BaseResponse<ProductReviewData>>(url);\n    return createProductReview(response.data.data);\n  };\n  const { data, status } = useQuery(queryKey, queryFn, {\n    keepPreviousData: true,\n    refetchOnMount: 'always',\n  });\n\n  const buttonText =\n    !!data && data?.likeCount > 0 ? `도움돼요 ${data?.likeCount}` : '도움돼요';\n  const selectedImageUrl = data?.images.find(\n    (_, imageIndex) => imageIndex === selectedSlideIndex,\n  )?.url;\n\n  const queryClient = useQueryClient();\n  const { productSites } = useAppSelector(({ productDetail }) => productDetail);\n  const { isGuest } = useAppSelector(({ auth }) => auth);\n\n  const mutationKey = ['product', contentsProductNo, 'review', reviewId];\n  const mutationFn = ({ isChecked }: { isChecked: boolean; }) => {\n    const url = `/product-review/v1/reviews/${reviewId}/like`;\n    const method = isChecked ? 'delete' : 'post';\n\n    return httpClient[method]<null>(url);\n  };\n\n  const { mutate } = useMutation(mutationFn, {\n    onMutate: async () => {\n      await queryClient.cancelQueries(mutationKey);\n\n      const previousData =\n        queryClient.getQueryData<ReturnType<typeof createProductReview>>(\n          mutationKey,\n        );\n\n      if (isGuest || isUndefined(previousData)) {\n        return;\n      }\n\n      queryClient.setQueryData(queryKey, () => ({\n        ...previousData,\n        hasLiked: !previousData.hasLiked,\n        likeCount: previousData.hasLiked\n          ? Math.max(0, previousData.likeCount - 1)\n          : previousData.likeCount + 1,\n      }));\n\n      return { previousData };\n    },\n    onSuccess: (_, { isChecked }) => {\n      const AmplitudeEvent = isChecked\n        ? RemoveReviewIsHelpful\n        : SelectReviewIsHelpful;\n\n      if (!contentsProductNo) {\n        return;\n      }\n\n      amplitudeService\n        .setScreenName(ScreenName.PRODUCT_DETAIL_REVIEW)\n        .then(() =>\n          amplitudeService.logEvent(\n            new AmplitudeEvent({ contentsProductNo: Number(contentsProductNo) }),\n          ),\n        );\n    },\n    onError: async (error: AxiosError, _variables, context) => {\n      const { message } = error.response?.data;\n\n      if (message) {\n        await Alert({ text: message });\n      }\n\n      queryClient.setQueryData(mutationKey, context?.previousData);\n    },\n    onSettled: async () => {\n      await queryClient.refetchQueries(\n        ['product', contentsProductNo, 'review', reviewNo],\n        { exact: false },\n      );\n    },\n  });\n\n  useEffect(() => {\n    addEventListener('contextmenu', (event) => event.preventDefault());\n  }, []);\n\n  function handleClick() {\n    const text = '회원전용 서비스입니다. 로그인 페이지로 이동하시겠습니까?';\n    const loginUrl = `${COMMON_PATH.login.uri}?return_url=${router.asPath}`;\n\n    if (!isGuest) {\n      mutate({ isChecked: Boolean(data?.hasLiked) });\n      return;\n    }\n\n    Alert({\n      text,\n      showCancelButton: true,\n    }).then(async ({ isDismissed }) => {\n      if (isDismissed) {\n        return;\n      }\n\n      await router.replace(loginUrl);\n    });\n  }\n\n  useEffect(() => {\n    if (!contentsProductNo || !reviewId) {\n      return;\n    }\n  }, [contentsProductNo, reviewId]);\n\n  const handleClickPaging = async (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    if (isUndefined(contentsProductNo) || isUndefined(reviewNo)) {\n      return;\n    }\n\n    const { value: pagingDirection } = event.target as HTMLButtonElement;\n    const { before: previousReviewNo, after: nextReviewNo } =\n      await getReviewPagination(\n        contentsProductNo,\n        reviewNo,\n        pagingDirection === 'prev' ? 'PREVIOUS' : 'NEXT',\n      );\n    const isNewestReview = !previousReviewNo || previousReviewNo === reviewNo;\n    const isOldestReview = !nextReviewNo || nextReviewNo === reviewNo;\n\n    if (\n      (isNewestReview && pagingDirection === 'prev') ||\n      (isOldestReview && pagingDirection === 'next')\n    ) {\n      const text = isNewestReview ? '첫번째 후기입니다.' : '마지막 후기입니다.';\n      await Alert({ text });\n      return;\n    }\n\n    const replacedReviewNo =\n      pagingDirection === 'prev' ? previousReviewNo : nextReviewNo;\n    const url = `/goods/${contentsProductNo}/review/${replacedReviewNo}?reviewList=true`;\n    await router.replace(url);\n  };\n\n  const handleSlideChange = (event: { activeIndex: number; }) => {\n    setSelectedSlideIndex(event.activeIndex);\n  };\n\n  const handleChangeImageSlide = (thumbIndex: number) => {\n    if (!swiper) {\n      return;\n    }\n\n    setSelectedSlideIndex(thumbIndex);\n    swiper.slideTo(thumbIndex);\n  };\n\n  useEffect(() => {\n    if (!swiper) {\n      return;\n    }\n\n    swiper.activeIndex = selectedSlideIndex;\n  }, [selectedSlideIndex, swiper]);\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton onClick={router.back} />\n        </HeaderButtons>\n        <HeaderTitle>사진 후기</HeaderTitle>\n      </MobileHeader>\n      {status === 'loading' && <Loading />}\n      {status === 'success' && !!data && (\n        <>\n          <ImageFrame>\n            <Swiper\n              loop={false}\n              onSwiper={(s) => setSwiper(s)}\n              onSlideChange={handleSlideChange}\n            >\n              {data.images.map(({ id, url }) => (\n                <SwiperSlide key={id}>\n                  <ImageWrapper>\n                    <NextImage\n                      src={url ?? blurDataUrl}\n                      alt={data.contents}\n                      layout=\"fill\"\n                      objectFit=\"cover\"\n                      placeholder=\"blur\"\n                      blurDataURL={blurDataUrl}\n                      onClick={() => setIsEnlargedImage(true)}\n                    />\n                  </ImageWrapper>\n                </SwiperSlide>\n              ))}\n              {reviewList && (\n                <>\n                  <PaginationButton\n                    position=\"left\"\n                    type=\"button\"\n                    value=\"prev\"\n                    onClick={handleClickPaging}\n                  />\n                  <PaginationButton\n                    position=\"right\"\n                    type=\"button\"\n                    value=\"next\"\n                    onClick={handleClickPaging}\n                  />\n                </>\n              )}\n            </Swiper>\n          </ImageFrame>\n          <Main>\n            {data.images.length > 1 && (\n              <ImageGallery imageCount={data.images.length}>\n                {data.images.map(\n                  ({ id: imageId, url: imageSrc }, thumbIndex) => (\n                    <ReviewImage\n                      key={imageId}\n                      aria-hidden\n                      tabIndex={0}\n                      className=\"review-image\"\n                      onClick={() => handleChangeImageSlide(thumbIndex)}\n                    >\n                      <NextImage\n                        src={applyImageUrlFormat(imageSrc, {\n                          width: 640,\n                          format: 'auto',\n                        })}\n                        alt=\"review-image\"\n                        layout=\"fill\"\n                        objectFit=\"cover\"\n                        placeholder=\"blur\"\n                        blurDataURL={blurDataUrl}\n                      />\n                      {thumbIndex === selectedSlideIndex ? (\n                        <Dim>\n                          <Check />\n                        </Dim>\n                      ) : null}\n                    </ReviewImage>\n                  ),\n                )}\n              </ImageGallery>\n            )}\n            <AboutReview>\n              {data.type !== '일반' && (\n                <Badge colorSet={getBadgeColors(data.type)}>{data.type}</Badge>\n              )}\n              {!!data.reviewerGrade && (\n                <Badge colorSet={getBadgeColors()}>{data.reviewerGrade}</Badge>\n              )}\n              <Reviewer>{data.reviewer}</Reviewer>\n            </AboutReview>\n            {!isEmpty(data.profiles.beautyProfile) &&\n            productSites.includes('BEAUTY') ? (\n                <BeautyProfile>{data.profiles.beautyProfile}</BeautyProfile>\n              ) : null}\n            <DealProductNameWrapper>\n              <DealProductName>{data.dealProductName}</DealProductName>\n              {Number(router.query.productCode) !== data.contentsProductNo && (\n                <LayerMsg>\n                  <QuestionButton onClick={() => setIsOpen(true)}>\n                    <QuestionMark\n                      stroke={COLOR.kurlyGray350}\n                      fill={COLOR.kurlyGray350}\n                    />\n                  </QuestionButton>\n                  {isOpen && (\n                    <Text>\n                      <p>\n                        이 후기는 판매구성이 다르지만 본품이 동일한 상품을 구매\n                        후 작성된 후기입니다. 판매구성에 따라 용량, 구성, 상품명\n                        등 일부 정보가 상이할 수 있습니다.\n                      </p>\n                      <button type=\"button\" onClick={() => setIsOpen(false)}>\n                        <Close\n                          width={16}\n                          height={16}\n                          fill={COLOR.kurlyGray800}\n                          stroke={COLOR.kurlyGray800}\n                        />\n                      </button>\n                    </Text>\n                  )}\n                </LayerMsg>\n              )}\n            </DealProductNameWrapper>\n            <Contents>{data.contents}</Contents>\n            <Footer>\n              {data.registrationDate ? (\n                <RegistrationDate>\n                  {format(parseISO(data.registrationDate), 'yyyy.MM.dd')}\n                </RegistrationDate>\n              ) : (\n                <span />\n              )}\n              <LikeButton checked={data.hasLiked} onClick={handleClick}>\n                <LikeIcon checked={data.hasLiked} />\n                <span>{buttonText}</span>\n              </LikeButton>\n            </Footer>\n          </Main>\n        </>\n      )}\n      <EnlargedImageFrame\n        src={selectedImageUrl ?? blurDataUrl}\n        isOpen={isEnlargedImage}\n        onDismiss={() => setIsEnlargedImage(false)}\n      />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/goods/[productCode]/review/index.tsx","import { useEffect, useMemo, useState, Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport type { InfiniteData } from '@tanstack/react-query';\nimport { useQueryClient } from '@tanstack/react-query';\nimport styled from '@emotion/styled';\nimport { useInView } from 'react-intersection-observer';\nimport { flatten, map } from 'lodash';\n\nimport { amplitudeService, ScreenName } from '../../../../../src/shared/amplitude';\nimport { ViewReviewDetail } from '../../../../../src/shared/amplitude/events/review';\nimport { useAppSelector } from '../../../../../src/shared/store';\nimport applyImageUrlFormat from '../../../../../src/shared/utils/image/imaegUrlformatter';\n\nimport type { ProductReview, ProductReviewList } from '../../../../../src/product/board/review/ProductReview.service';\nimport { useReviewList } from '../../../../../src/product/board/review/hooks';\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport CloseButton from '../../../../../src/shared/components/Button/CloseButton';\nimport rgbDataUrl from '../../../../../src/shared/utils/image/rgbDataUrl';\nimport COLOR from '../../../../../src/shared/constant/colorset';\nimport { ReviewKeys } from '../../../../../src/product/board/review/queries';\nimport ReviewDetailLayer from '../../../../../src/product/board/review/m/ReviewDetailLayer/ReviewDetailLayer';\nimport Alert from '../../../../../src/shared/components/Alert/Alert';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport NextImage from '../../../../../src/shared/components/NextImage';\n\nconst PAGE_SIZE = 40;\n\nconst ImageCount = styled.p`\n  display: inline-block;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 22px;\n  height: 22px;\n  border-top-left-radius: 4px;\n  background-color: hsla(0, 0%, 0%, 0.4);\n  text-align: center;\n  align-items: center;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 22px;\n  color: ${COLOR.kurlyWhite};\n  vertical-align: top;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  place-content: start;\n  gap: 3px;\n  width: 100%;\n  height: 100%;\n`;\n\nconst GridItem = styled.div`\n  position: relative;\n  overflow: hidden;\n  aspect-ratio: 1 / 1;\n\n  a {\n    display: inline-block;\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst ObservingBlock = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 1px;\n`;\n\nconst blurDataUrl = rgbDataUrl(\n  parseInt('ee', 16),\n  parseInt('ee', 16),\n  parseInt('ee', 16),\n);\n\nconst CONTENT_TYPE = {\n  LIST: 'LIST',\n  DETAIL: 'DETAIL',\n};\n\nexport default function ReviewListPage() {\n  const [currentContent, setCurrentContent] = useState(CONTENT_TYPE.LIST);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const router = useRouter();\n  const { isReady, query } = router;\n  const { productCode } = query;\n  const contentsProductNo = Number(productCode);\n\n  const { ref, inView } = useInView();\n  const productData = useAppSelector(({ productDetail }) => productDetail);\n\n  const queryClient = useQueryClient();\n  const { status, fetchNextPage, hasNextPage } = useReviewList(isReady ? contentsProductNo : 0, { reviewType: 'IMAGE' });\n\n  const data = queryClient.getQueryData<InfiniteData<ProductReviewList>>(ReviewKeys.image(contentsProductNo));\n  const flatPages = useMemo(\n    () => flatten(map(data?.pages, ({ reviews }) => reviews)) ?? [],\n    [data],\n  );\n  const selectedReview = useMemo(\n    () => flatPages[selectedIndex],\n    [selectedIndex, flatPages],\n  );\n\n  const logAmplitudeEvent = async (reviewData: ProductReview) => {\n    await amplitudeService.setScreenName(ScreenName.PRODUCT_DETAIL_REVIEW);\n    await amplitudeService.logEvent(\n      new ViewReviewDetail({\n        reviewData,\n        sortType: 'RECENTLY',\n        productData,\n      }),\n    );\n  };\n\n  useEffect(() => {\n    const { reviewNo } = router.query;\n\n    if (reviewNo) {\n\n    }\n  }, [router.isReady]);\n\n  useEffect(() => {\n    if (inView && hasNextPage) {\n      fetchNextPage();\n    }\n  }, [inView, hasNextPage]);\n\n  async function handleClick(review: ProductReview, index: number) {\n    try {\n      await logAmplitudeEvent(review);\n      setSelectedIndex(index);\n      setCurrentContent(CONTENT_TYPE.DETAIL);\n    } catch {}\n    await router.replace(`/goods/${contentsProductNo}/review?reviewNo=${review.id}`);\n  }\n\n  function handleClickBack() {\n    if (currentContent === CONTENT_TYPE.LIST) {\n      router.back();\n      return;\n    }\n    setCurrentContent(CONTENT_TYPE.LIST);\n  }\n\n  async function handleClickPrev() {\n    if (selectedIndex === 0) {\n      await Alert({ text: '첫번째 후기입니다.' });\n      return;\n    }\n    setSelectedIndex(selectedIndex - 1);\n  }\n\n  async function handleClickNext() {\n    const isLastItem = flatPages.length === selectedIndex + 1;\n    const threshold = 20;\n\n    if (isLastItem && !hasNextPage) {\n      await Alert({ text: '마지막 후기입니다.' });\n      return;\n    }\n\n    if (hasNextPage && (flatPages.length - selectedIndex < threshold)) {\n      fetchNextPage();\n    }\n\n    setSelectedIndex(selectedIndex + 1);\n  }\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          {currentContent === CONTENT_TYPE.LIST ? (\n            <CloseButton onClick={handleClickBack} />\n          ) : (\n            <BackButton onClick={() => setCurrentContent(CONTENT_TYPE.LIST)} />\n          )}\n        </HeaderButtons>\n        <HeaderTitle>\n          {currentContent === CONTENT_TYPE.LIST\n            ? '사진 후기 전체보기'\n            : '사진 후기'}\n        </HeaderTitle>\n      </MobileHeader>\n      {currentContent === 'LIST' ? (\n        <Grid>\n          {status === 'loading'\n            ? Array.from({ length: 30 }).map((_, index) => (\n              <GridItem key={`loading-${index}`} />\n            ))\n            : null}\n          {status === 'success' && !!data\n            ? data.pages.map((page, pageIndex) => (\n              <Fragment key={`page-${pageIndex}`}>\n                {page.reviews.filter(review => review.images?.length > 0).map((review, itemIndex) => (\n                  <GridItem key={review.id}>\n                    <button\n                      type=\"button\"\n                      onClick={() => handleClick(review, pageIndex * PAGE_SIZE + itemIndex)}\n                    >\n                      <NextImage\n                        src={applyImageUrlFormat(review.images[0].url, {\n                          width: 246,\n                          format: 'auto',\n                        })}\n                        alt={`${review.dealProductName} 후기`}\n                        layout=\"fill\"\n                        placeholder=\"blur\"\n                        blurDataURL={blurDataUrl}\n                        objectFit=\"cover\"\n                        loading=\"lazy\"\n                      />\n                      {review.images.length > 1 ? (\n                        <ImageCount>{review.images.length}</ImageCount>\n                      ) : null}\n                    </button>\n                    {data.pages.length === pageIndex + 1 &&\n                      page.reviews.length === itemIndex + 1 ? (\n                        <ObservingBlock ref={ref} />\n                      ) : null}\n                  </GridItem>\n                ))}\n              </Fragment>\n            ))\n            : null}\n        </Grid>\n      ) : (\n        <ReviewDetailLayer\n          review={selectedReview}\n          contentsProductNo={contentsProductNo}\n          onClickPrev={handleClickPrev}\n          onClickNext={handleClickNext}\n        />\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/goods/inquiry/form.tsx","import { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport ProductInquiryFormContainer\n  from '../../../../src/product/board/inquiry/m/form/ProductInquiryFormContainer';\nimport { useAppSelector } from '../../../../src/shared/store';\nimport { notify, redirectToLogin } from '../../../../src/shared/reducers/page';\nimport { amplitudeService } from '../../../../src/shared/amplitude';\nimport {\n  SelectBackButton,\n} from '../../../../src/shared/amplitude/events/product/SelectBackButton';\n\nexport default function ProductInquiryFormPage() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  const { no, name } = router.query;\n\n  const { isGuest, hasSession } = useAppSelector(({ auth }) => auth);\n  const productDetailState = useAppSelector(({ productDetail }) => productDetail);\n\n  useEffect(() => {\n    if (hasSession && isGuest) {\n      dispatch(redirectToLogin());\n    }\n  }, [isGuest, hasSession, dispatch]);\n\n  const productNo = Number(no);\n  const productName = name?.toString() ?? '';\n\n  useEffect(() => {\n    if (!productNo) {\n      dispatch(notify('잘못된 접근입니다.'));\n      router.back();\n    }\n  }, [productNo, router, dispatch]);\n\n  if (!productNo) {\n    return null;\n  }\n\n  const onClickBackButton = async () => {\n    try {\n      await amplitudeService\n        .logEvent(new SelectBackButton({\n          productDetailState,\n          cancelType: 'back_button',\n        }));\n    } catch (e) {\n    } finally {\n      window.history.back();\n    }\n  };\n\n  return (\n    <>\n      <MobileHeader visibleBanner={false}>\n        <HeaderButtons position=\"left\">\n          <BackButton onClick={onClickBackButton} />\n        </HeaderButtons>\n        <HeaderTitle>상품문의</HeaderTitle>\n      </MobileHeader>\n      <ProductInquiryFormContainer\n        productNo={productNo}\n        productName={productName}\n      />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/index.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../src/shared/hooks';\nimport { isWebview } from '../../../util/window/getDevice';\n\nimport appService from '../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../src/shared/constant';\n\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../src/introduce/containers/m/IntroduceLayout';\nimport AboutKurlyContainer from '../../../src/introduce/containers/m/AboutKurlyContainer';\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../src/footer/components/m/Footer';\n\nexport default function IntroducePage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout menu={INTRODUCE_PATH.introduce.name}>\n        <AboutKurlyContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/customer-system/index.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer\n  from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport CustomerSystemContainer\n  from '../../../../src/introduce/containers/m/CustomerSystemContainer';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\n\nexport default function CustomerSystemPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout menu={INTRODUCE_PATH.customerSystem.name}>\n        <CustomerSystemContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/kurly-fresh-solution/index.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport KurlyFreshSolutionContainer\n  from '../../../../src/introduce/containers/m/KurlyFreshSolutionContainer';\nimport Footer from '../../../../src/footer/components/m/Footer';\n\nexport default function QualityStandardPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout menu={INTRODUCE_PATH.kurlyFreshSolution.name}>\n        <KurlyFreshSolutionContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/price-policy/index.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport PricePolicyContainer\n  from '../../../../src/introduce/containers/m/PricePolicyContainer';\nimport Footer from '../../../../src/footer/components/m/Footer';\n\nexport default function PricePolicyPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout menu={INTRODUCE_PATH.pricePolicy.name}>\n        <PricePolicyContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/area-producer.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport AreaProducerContainer\n  from '../../../../src/introduce/containers/m/AreaProducerContainer';\n\nexport default function AreaProducerPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.areaProducer.name}\n      >\n        <AreaProducerContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/eco-organic.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport EcoOrganicContainer\n  from '../../../../src/introduce/containers/m/EcoOrganicContainer';\n\nexport default function EcoOrganicPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.ecoOrganic.name}\n      >\n        <EcoOrganicContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/eco-plantation-breeding.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport EcoPlantationBreedingContainer\n  from '../../../../src/introduce/containers/m/EcoPlantationBreedingContainer';\n\nexport default function EcoPlantationBreedingPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.ecoPlantationBreeding.name}\n      >\n        <EcoPlantationBreedingContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/food-additive.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport FoodAdditiveContainer\n  from '../../../../src/introduce/containers/m/FoodAdditiveContainer';\n\nexport default function FoodAdditivePage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.foodAdditive.name}\n      >\n        <FoodAdditiveContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/gmo-food.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport GmoFoodContainer\n  from '../../../../src/introduce/containers/m/GmoFoodContainer';\n\nexport default function GmoFoodPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.gmoFood.name}\n      >\n        <GmoFoodContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/health-functional-food.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport HealthFunctionalFoodContainer\n  from '../../../../src/introduce/containers/m/HealthFunctionalFoodContainer';\n\nexport default function HealthFunctionalFoodPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.healthFunctionalFood.name}\n      >\n        <HealthFunctionalFoodContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/index.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport QualityStandardContainer\n  from '../../../../src/introduce/containers/m/QualityStandardContainer';\n\nexport default function QualityStandardPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout menu={INTRODUCE_PATH.qualityStandard.name}>\n        <QualityStandardContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/infant-food.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\n\nimport InfantFoodContainer\n  from '../../../../src/introduce/containers/m/InfantFoodContainer';\n\nexport default function InfantFoodPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.infantFood.name}\n      >\n        <InfantFoodContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/japanese-food.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport JapaneseFoodContainer\n  from '../../../../src/introduce/containers/m/JapaneseFoodContainer';\n\nexport default function JapaneseFoodPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.japaneseFood.name}\n      >\n        <JapaneseFoodContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/pesticide-use.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\n\nimport PesticideUseContainer\n  from '../../../../src/introduce/containers/m/PesticideUseContainer';\n\nexport default function PesticideUsePage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.pesticideUse.name}\n      >\n        <PesticideUseContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/pet-food.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\n\nimport PetFoodContainer\n  from '../../../../src/introduce/containers/m/PetFoodContainer';\n\nexport default function PetFoodPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.petFood.name}\n      >\n        <PetFoodContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/production-process.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport ProductionProcessContainer\n  from '../../../../src/introduce/containers/m/ProductionProcessContainer';\n\nexport default function ProductionProcessPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.productionProcess.name}\n      >\n        <ProductionProcessContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/safety-hygiene.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport SafetyHygieneContainer\n  from '../../../../src/introduce/containers/m/SafetyHygieneContainer';\n\nexport default function SafetyHygienePage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.safetyHygiene.name}\n      >\n        <SafetyHygieneContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/quality-standard/special-product.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport SpecialProductContainer\n  from '../../../../src/introduce/containers/m/SpecialProductContainer';\n\nexport default function SpecialProductPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.qualityStandard.name}\n        subMenu={INTRODUCE_PATH.specialProduct.name}\n      >\n        <SpecialProductContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/sustainable-distribution/index.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport SustainableDistributionContainer\n  from '../../../../src/introduce/containers/m/SustainableDistributionContainer';\n\nexport default function SustainableDistributionPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout menu={INTRODUCE_PATH.sustainableDistribution.name}>\n        <SustainableDistributionContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/sustainable-distribution/joint-growth.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport JointGrowthContainer\n  from '../../../../src/introduce/containers/m/JointGrowthContainer';\n\nexport default function JointGrowthPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.sustainableDistribution.name}\n        subMenu={INTRODUCE_PATH.jointGrowth.name}\n      >\n        <JointGrowthContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/sustainable-distribution/packaging-materials.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport PackagingMaterialsContainer\n  from '../../../../src/introduce/containers/m/PackagingMaterialsContainer';\n\nexport default function PackagingMaterialsPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.sustainableDistribution.name}\n        subMenu={INTRODUCE_PATH.packagingMaterials.name}\n      >\n        <PackagingMaterialsContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/sustainable-distribution/product-selection.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\nimport ProductSelectionContainer\n  from '../../../../src/introduce/containers/m/ProductSelectionContainer';\n\nexport default function ProductSelectionPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.sustainableDistribution.name}\n        subMenu={INTRODUCE_PATH.productSelection.name}\n      >\n        <ProductSelectionContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/introduce/sustainable-distribution/social-contribution.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\n\nimport { INTRODUCE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport IntroduceLayout\n  from '../../../../src/introduce/containers/m/IntroduceLayout';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Footer from '../../../../src/footer/components/m/Footer';\n\nimport SocialContributionContainer\n  from '../../../../src/introduce/containers/m/SocialContributionContainer';\n\nexport default function SocialContributionPage() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('About Kurly');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>About Kurly</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <IntroduceLayout\n        menu={INTRODUCE_PATH.sustainableDistribution.name}\n        subMenu={INTRODUCE_PATH.socialContribution.name}\n      >\n        <SocialContributionContainer />\n      </IntroduceLayout>\n\n      {!webview && (\n        <>\n          <Footer />\n          <UserMenu />\n        </>\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/main/beauty.tsx","import styled from '@emotion/styled';\n\nimport MainHeaderContainer\n  from '../../../src/shared/components/m/header/MainHeaderContainer';\nimport TopNavigationBar\n  from '../../../src/shared/components/navigation/TopNavigationBar';\nimport { useAppSelector } from '../../../src/shared/store';\nimport MainContainer\n  from '../../../src/main/components/m/container/MainContainer';\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\nimport MainSiteProvider\n  from '../../../src/main/components/shared/MainSiteProvider';\nimport Footer from '../../../src/footer/components/m/Footer';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\nimport useMainPage from '../../../src/main/hooks/useMainPage';\n\nconst Gutter = styled.div`\n  height: 44px;\n`;\n\nexport default function MainBeautyPage() {\n  const { navigationOptions } = useAppSelector(({ main }) => main);\n  useScreenName(ScreenName.RECOMMENDATION);\n  useMainPage();\n\n  return (\n    <MainSiteProvider site=\"BEAUTY\">\n      <MobileHeader visibleBanner>\n        <MainHeaderContainer/>\n        <TopNavigationBar activeId={0} options={navigationOptions}/>\n      </MobileHeader>\n      <Gutter/>\n      <MainContainer/>\n      <Footer />\n      <UserMenu/>\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/main/index.tsx","import styled from '@emotion/styled';\n\nimport MainHeaderContainer\n  from '../../../src/shared/components/m/header/MainHeaderContainer';\nimport TopNavigationBar\n  from '../../../src/shared/components/navigation/TopNavigationBar';\nimport { useAppSelector } from '../../../src/shared/store';\nimport MainContainer\n  from '../../../src/main/components/m/container/MainContainer';\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\nimport MainSiteProvider\n  from '../../../src/main/components/shared/MainSiteProvider';\nimport Footer from '../../../src/footer/components/m/Footer';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\nimport useMainPage from '../../../src/main/hooks/useMainPage';\nimport useLoadKakao from '../../../src/shared/hooks/useLoadKakao';\n\nconst Gutter = styled.div`\n  height: 44px;\n`;\n\nexport default function MainMarketPage() {\n  const { navigationOptions } = useAppSelector(({ main }) => main);\n  useScreenName(ScreenName.RECOMMENDATION);\n  useMainPage();\n  useLoadKakao();\n\n  return (\n    <MainSiteProvider site=\"MARKET\">\n      <MobileHeader visibleBanner>\n        <MainHeaderContainer/>\n        <TopNavigationBar activeId={0} options={navigationOptions}/>\n      </MobileHeader>\n      <Gutter/>\n      <MainContainer/>\n      <Footer />\n      <UserMenu/>\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/market-benefit/index.tsx","import { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nimport MainHeaderContainer\n  from '../../../src/shared/components/m/header/MainHeaderContainer';\nimport TopNavigationBar\n  from '../../../src/shared/components/navigation/TopNavigationBar';\n\nimport EventBenefitContainer\n  from '../../../src/event-benefit/shared/containers/EventBenefitContainer';\nimport { useAppSelector } from '../../../src/shared/store';\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport MainSiteProvider\n  from '../../../src/main/components/shared/MainSiteProvider';\nimport ScrollEventTopButton\n  from '../../../src/shared/components/Scroll/ScrollEventTopButton';\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\n\nexport default function EventBenefitPage() {\n  useScreenName(ScreenName.EVENT_LIST);\n  const { navigationOptions } = useAppSelector(({ main }) => main);\n\n  return (\n    <MainSiteProvider site=\"MARKET\">\n      <ScrollEventTopButton>\n        <MobileHeader visibleBanner>\n          <MainHeaderContainer/>\n          <TopNavigationBar activeId={4} options={navigationOptions}/>\n        </MobileHeader>\n        <EventBenefitContainer />\n      </ScrollEventTopButton>\n      <UserMenu/>\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/adult-verification/index.tsx","import { useEffect } from 'react';\n\nimport { GetServerSideProps } from 'next';\n\nimport AuthContainer\n  from '../../../../src/shared/components/Auth/AuthContainer';\nimport AdultVerificationContainer\n  from '../../../../src/member/adult-verification/AdultVerificationContainer';\n\nimport { isWebview } from '../../../../util/window/getDevice';\nimport appService from '../../../../src/shared/services/app.service';\n\ninterface Props {\n  appToken: string;\n}\n\nexport default function AdultVerificationPage({ appToken }: Props) {\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('성인인증');\n    }\n  }, []);\n\n  return (\n    <AuthContainer loginRequired appToken={appToken}>\n      <AdultVerificationContainer />\n    </AuthContainer>\n  );\n}\n\ninterface Context extends GetServerSideProps {\n  req: {\n    headers: {\n      authorization: string;\n    };\n  };\n}\n\nexport async function getServerSideProps(context: Context) {\n  const { req } = context;\n\n  const { authorization } = req.headers;\n\n  const props = {\n    appToken: authorization?.replace('Bearer ', '') ?? '',\n  };\n\n  return {\n    props,\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/change-password/index.tsx","import { useEffect } from 'react';\n\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport CartButtonContainer\n  from '../../../../src/shared/containers/m/CartButtonContainer';\n\nimport AuthContainer\n  from '../../../../src/shared/components/Auth/AuthContainer';\nimport ChangePasswordContainer\n  from '../../../../src/member/change-password/shared/containers/ChangePassword';\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\nimport appService from '../../../../src/shared/services/app.service';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\n\nexport default function ChangePassword() {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('비밀번호 변경');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>비밀번호 변경</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <AuthContainer loginRequired>\n        <ChangePasswordContainer />\n      </AuthContainer>\n\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/find/id/index.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport FindIdByEmailFormContainer from '../../../../../src/member/find/id/containers/FindIdByEmailFormContainer';\nimport FindByPhoneFormContainer from '../../../../../src/member/find/id/containers/FindIdByPhoneFormContainer';\n\nimport TabsContainer from '../../../../../src/member/find/containers/TabsContainer';\n\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\n\nimport { useWebview, useScreenName } from '../../../../../src/shared/hooks';\n\nimport { AppState } from '../../../../../src/shared/store';\nimport { clear, clearStatus } from '../../../../../src/member/find/reducers/find.slice';\nimport { notifyAndFocus } from '../../../../../src/shared/reducers/page';\n\nimport { isWebview } from '../../../../../util/window/getDevice';\nimport appService from '../../../../../src/shared/services/app.service';\n\nimport { FIND_METHOD_EMAIL, FIND_METHOD_PHONE } from '../../../../../src/member/find/constants';\n\nimport { ScreenName } from '../../../../../src/shared/amplitude';\n\nexport default function FindIdPage() {\n  useScreenName(ScreenName.FIND_ID);\n\n  const webview = useWebview();\n  const router = useRouter();\n\n  const dispatch = useDispatch();\n  const {\n    idByEmail, idByPhone, selectedTab,\n  } = useSelector(({ find }: AppState) => find);\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (idByEmail.status === 'SUCCESS') {\n      router.push(\n        '/m/member/find/id/success?by=email',\n        '/member/find/id/success?by=email',\n      );\n    }\n\n    if (idByPhone.status === 'SUCCESS') {\n      router.push(\n        '/m/member/find/id/success?by=mobile',\n        '/member/find/id/success?by=mobile',\n      );\n    }\n  }, [router.isReady, idByEmail.status, idByPhone.status]);\n\n  useEffect(() => {\n    if (idByPhone.status === 'SENT' && idByPhone.endTime) {\n      dispatch(notifyAndFocus({\n        message: `인증번호가 발송되었습니다. 3분 안에 인증번호를 입력해 주세요.\n\n카카오톡이 설치된 경우 카카오 알림톡으로 발송됩니다.`,\n        documentId: 'verification-number',\n      }));\n    }\n  }, [idByPhone.status, idByPhone.endTime, dispatch]);\n\n  useEffect(() => {\n    dispatch(clear());\n\n    return (() => {\n      dispatch(clearStatus());\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('아이디 찾기');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (selectedTab === FIND_METHOD_PHONE) {\n      dispatch(clear());\n    }\n  }, [selectedTab, dispatch]);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>아이디 찾기</HeaderTitle>\n        </MobileHeader>\n      )}\n\n      <TabsContainer hasHeader={!webview} />\n\n      {selectedTab === FIND_METHOD_PHONE && (\n        <FindByPhoneFormContainer />\n      )}\n      {selectedTab === FIND_METHOD_EMAIL && (\n        <FindIdByEmailFormContainer />\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/find/id/success.tsx","import { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { isEmpty } from 'lodash';\n\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nimport { useRouter } from 'next/router';\n\nimport MembersContainer from '../../../../../src/member/find/id/success/containers/MembersContainer';\n\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport Button from '../../../../../src/shared/components/Button/Button';\nimport MobileFooter from '../../../../../src/shared/components/layouts/MobileFooter';\n\nimport { useWebview, useScreenName } from '../../../../../src/shared/hooks';\n\nimport { AppState } from '../../../../../src/shared/store';\nimport { requestToSendMembersByEmail } from '../../../../../src/member/find/reducers/find.slice';\n\nimport { isWebview } from '../../../../../util/window/getDevice';\nimport appService from '../../../../../src/shared/services/app.service';\n\nimport COLOR from '../../../../../src/shared/constant/colorset';\n\nimport { amplitudeService, ScreenName } from '../../../../../src/shared/amplitude';\nimport { SelectFindPassword, SelectViewAllId } from '../../../../../src/shared/amplitude/events';\nimport { redirectTo } from '../../../../../src/shared/reducers/page';\nimport { COMMON_PATH, getPageUrl } from '../../../../../src/shared/constant';\n\nconst SuccessContent = styled.div`\n  height: 100%;\n  padding: 0 20px 0;\n`;\n\nconst Title = styled.div`\n  padding-top: 30px;\n  font-weight: 600;\n  font-size: 17px;\n  line-height: 23px;\n`;\n\nconst SubTitle = styled.div`\n  display: block;\n  padding-top: 4px;\n  font-weight: 400;\n  font-size: 13px;\n  color: ${COLOR.kurlyGray450};\n  line-height: 18px;\n`;\n\nconst ButtonWrap = styled.div({\n  width: '100%',\n  paddingBottom: 'calc(42px + constant(safe-area-inset-bottom))',\n  backgroundColor: `${COLOR.kurlyWhite}`,\n  '> button:first-of-type': {\n    marginBottom: '10px',\n  },\n});\n\nconst footer = css`\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport default function IdByEmailSuccessPage() {\n  useScreenName(ScreenName.FIND_ID);\n\n  const webview = useWebview();\n  const dispatch = useDispatch();\n  const { members } = useSelector((state: AppState) => state.find);\n\n  const router = useRouter();\n  const { by } = router.query;\n\n  const handleClickFindPassword = () => {\n    amplitudeService.logEvent(new SelectFindPassword());\n\n    router.push('/m/member/find/password', '/member/find/password');\n  };\n\n  const handleClickFindIdDetails = () => {\n    amplitudeService.logEvent(new SelectViewAllId());\n\n    dispatch(requestToSendMembersByEmail());\n  };\n\n  const handleClickLogin = () => {\n    if (isWebview()) {\n      appService.closeWebview();\n      return;\n    }\n\n    dispatch(redirectTo({ url: getPageUrl(COMMON_PATH.login) }));\n  };\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (isEmpty(members)) {\n      router.back();\n    }\n  }, [router.isReady]);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>아이디 찾기</HeaderTitle>\n        </MobileHeader>\n      )}\n\n      <SuccessContent>\n        <Title>\n          고객님의 마켓컬리 계정을 찾았습니다.\n          <SubTitle>아이디 확인 후 로그인해 주세요.</SubTitle>\n        </Title>\n\n        <MembersContainer />\n      </SuccessContent>\n      <MobileFooter css={footer} height={130}>\n        <ButtonWrap>\n          {by === 'email' && (\n            <Button\n              text=\"아이디 전체보기\"\n              theme=\"secondary\"\n              onClick={handleClickFindIdDetails}\n            />\n          )}\n          {by === 'mobile' && (\n            <Button\n              text=\"비밀번호 찾기\"\n              theme=\"secondary\"\n              onClick={handleClickFindPassword}\n            />\n          )}\n          <Button\n            text=\"로그인\"\n            onClick={handleClickLogin}\n          />\n        </ButtonWrap>\n      </MobileFooter>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/find/password/fail.tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport CloseButton from '../../../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport MobileFooter from '../../../../../src/shared/components/layouts/MobileFooter';\nimport Button from '../../../../../src/shared/components/Button/Button';\n\nimport { useWebview, useScreenName } from '../../../../../src/shared/hooks';\n\nimport { ErrorIconImg } from '../../../../../src/shared/images';\n\nimport { ScreenName } from '../../../../../src/shared/amplitude';\n\nconst Content = styled.div`\n  width: 100%;\n  position: absolute;\n  top: 50%;\n  width: 100%;\n  transform: translateY(-50%);\n  text-align: center;\n`;\n\nconst styles = {\n  message: {\n    fontSize: '16px',\n    lineHeight: '24px',\n    color: '#666666',\n    ':before': {\n      content: '\"\"',\n      display: 'block',\n      width: '54px',\n      height: '54px',\n      margin: '0 auto 20px',\n      background: `url(${ErrorIconImg}) no-repeat 50% 50%`,\n    },\n  },\n  notice: {\n    paddingTop: '14px',\n    fontSize: '14px',\n    color: '#b5b5b5',\n    lineHeight: '19px',\n  },\n};\n\nexport default function PasswordFailPage() {\n  useScreenName(ScreenName.FIND_PASSWORD);\n\n  const webview = useWebview();\n  const router = useRouter();\n\n  const handleClickClose = () => {\n    window.location.assign('/');\n  };\n\n  const handleClick = () => {\n    router.push('/m/member/find/password', '/member/find/password');\n  };\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <CloseButton onClick={handleClickClose} />\n          </HeaderButtons>\n          <HeaderTitle>비밀번호 찾기 실패</HeaderTitle>\n        </MobileHeader>\n      )}\n\n      <Content>\n        <p css={styles.message}>\n          유효하지 않은 URL\n        </p>\n        <p css={styles.notice}>\n          유효하지 않은 URL입니다.\n          <br />\n          메일함을 확인하시거나 비밀번호 찾기를 다시 시도해 주세요.\n        </p>\n      </Content>\n\n      <MobileFooter>\n        <Button\n          text=\"다시 비밀번호 찾기\"\n          onClick={handleClick}\n        />\n      </MobileFooter>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/find/password/index.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport TabsContainer from '../../../../../src/member/find/containers/TabsContainer';\nimport FindPasswordByPhoneFormContainer from '../../../../../src/member/find/password/containers/FindPasswordByPhoneFormContainer';\nimport FindPasswordByEmailFormContainer from '../../../../../src/member/find/password/containers/FindPasswordByEmailFormContainer';\n\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\n\nimport { useWebview, useScreenName } from '../../../../../src/shared/hooks';\n\nimport { AppState } from '../../../../../src/shared/store';\nimport { clear, clearStatus } from '../../../../../src/member/find/reducers/find.slice';\nimport { notifyAndFocus } from '../../../../../src/shared/reducers/page';\n\nimport appService from '../../../../../src/shared/services/app.service';\nimport { isWebview } from '../../../../../util/window/getDevice';\n\nimport { FIND_METHOD_EMAIL, FIND_METHOD_PHONE } from '../../../../../src/member/find/constants';\n\nimport { ScreenName } from '../../../../../src/shared/amplitude';\n\nexport default function FindPasswordPage() {\n  useScreenName(ScreenName.FIND_PASSWORD);\n\n  const webview = useWebview();\n  const dispatch = useDispatch();\n  const {\n    selectedTab, passwordByPhone, passwordByEmail,\n  } = useSelector(({ find }: AppState) => find);\n\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (passwordByPhone.token) {\n      router.push(\n        `/m/member/find/password/reset?token=${passwordByPhone.token}&by=mobile`,\n        `/member/find/password/reset?token=${passwordByPhone.token}&by=mobile`,\n      );\n    }\n\n    if (passwordByEmail.status === 'SUCCESS') {\n      router.push(\n        '/m/member/find/password/success',\n        '/member/find/password/success',\n      );\n    }\n  }, [router.isReady, passwordByPhone.token, passwordByEmail.status]);\n\n  useEffect(() => {\n    if (passwordByPhone.status === 'SENT' && passwordByPhone.endTime) {\n      dispatch(notifyAndFocus({\n        message: `인증번호가 발송되었습니다. 3분 안에 인증번호를 입력해 주세요.\n\n카카오톡이 설치된 경우 카카오 알림톡으로 발송됩니다.`,\n        documentId: 'verification-number',\n      }));\n    }\n  }, [passwordByPhone.status, passwordByPhone.endTime, dispatch]);\n\n  useEffect(() => {\n    dispatch(clear());\n\n    return (() => {\n      dispatch(clearStatus());\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('비밀번호 찾기');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (selectedTab === FIND_METHOD_PHONE) {\n      dispatch(clear());\n    }\n  }, [selectedTab, dispatch]);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>비밀번호 찾기</HeaderTitle>\n        </MobileHeader>\n      )}\n\n      <TabsContainer hasHeader={!webview} />\n\n      {selectedTab === FIND_METHOD_PHONE && (\n        <FindPasswordByPhoneFormContainer />\n      )}\n      {selectedTab === FIND_METHOD_EMAIL && (\n        <FindPasswordByEmailFormContainer />\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/find/password/reset.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport { NextPageContext } from 'next';\n\nimport PasswordResetFormContainer from '../../../../../src/member/find/password/containers/PasswordResetFormContainer';\n\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\n\nimport { useWebview, useScreenName } from '../../../../../src/shared/hooks';\n\nimport {\n  clearTokenStatus, updateToken,\n} from '../../../../../src/member/find/reducers/find.slice';\nimport { AppState } from '../../../../../src/shared/store';\n\nimport Alert from '../../../../../src/shared/components/Alert/Alert';\nimport { isWebview } from '../../../../../util/window/getDevice';\nimport appService from '../../../../../src/shared/services/app.service';\nimport { verifyToken } from '../../../../../src/member/find/services';\n\nimport { amplitudeService, ScreenName } from '../../../../../src/shared/amplitude';\nimport { SetNewPasswordSuccess } from '../../../../../src/shared/amplitude/events';\nimport { redirectTo } from '../../../../../src/shared/reducers/page';\nimport { COMMON_PATH, getPageUrl } from '../../../../../src/shared/constant';\n\nexport default function PasswordResetPage() {\n  useScreenName(ScreenName.FIND_PASSWORD);\n\n  const webview = useWebview();\n  const dispatch = useDispatch();\n  const {\n    passwordResetForm,\n    tokenStatus,\n  } = useSelector((state: AppState) => state.find);\n\n  const router = useRouter();\n\n  const { token = '', by = '' } = router.query;\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    dispatch(updateToken(token));\n  }, [router.isReady, dispatch]);\n\n  useEffect(() => {\n    if (tokenStatus === 'EXPIRED') {\n      Alert({\n        text: `유효 시간이 만료되었습니다.\n비밀번호 찾기를 다시 시도해 주세요.`,\n        allowOutsideClick: false,\n      }).then(({ isConfirmed }) => {\n        if (isConfirmed) {\n          router.push(\n            '/m/member/find/password',\n            '/member/find/password',\n          );\n        }\n\n        dispatch(clearTokenStatus());\n      });\n    }\n  }, [tokenStatus, dispatch]);\n\n  useEffect(() => {\n    if (passwordResetForm.status === 'SUCCESS') {\n      amplitudeService.logEvent(new SetNewPasswordSuccess({\n        authenticationMethod: by === 'mobile' ? 'mobile' : 'email',\n      }));\n      Alert({\n        text: '비밀번호 변경이 완료되었습니다.',\n        allowOutsideClick: false,\n      }).then(({ isConfirmed }) => {\n        if (isConfirmed) {\n          if (isWebview()) {\n            appService.closeWebview();\n            return;\n          }\n\n          dispatch(redirectTo({ url: getPageUrl(COMMON_PATH.login) }));\n\n          dispatch(clearTokenStatus());\n        }\n      });\n    }\n  }, [passwordResetForm.status, dispatch]);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>비밀번호 재설정</HeaderTitle>\n        </MobileHeader>\n      )}\n\n      <PasswordResetFormContainer />\n    </>\n  );\n}\n\nexport async function getServerSideProps(context: NextPageContext) {\n  const redirect = {\n    redirect: {\n      destination: '/member/find/password/fail',\n      permanent: false,\n    },\n  };\n\n  const { token } = context.query;\n  if (!token) {\n    return redirect;\n  }\n\n  try {\n    const valid = await verifyToken(token as string);\n    if (!valid) {\n      return redirect;\n    }\n  } catch {\n    return redirect;\n  }\n\n  return {\n    props: {},\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/find/password/success.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport styled from '@emotion/styled';\n\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport CloseButton from '../../../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\n\nimport { useWebview, useScreenName } from '../../../../../src/shared/hooks';\n\nimport { AppState } from '../../../../../src/shared/store';\n\nimport { MailSendIcon } from '../../../../../src/shared/images';\nimport COLOR from '../../../../../src/shared/constant/colorset';\n\nimport { ScreenName } from '../../../../../src/shared/amplitude';\nimport { COMMON_PATH, getPageUrl } from '../../../../../src/shared/constant';\nimport { redirectTo } from '../../../../../src/shared/reducers/page';\n\nconst SuccessContent = styled.div`\n  position: absolute;\n  left: 0;\n  top: 50%;\n  width: 100%;\n  padding: 0 20px;\n  text-align: center;\n  -webkit-transform:translate(0,-50%);\n  transform:translate(0,-50%);\n`;\n\nconst styles = {\n  message: {\n    fontWeight: 500,\n    fontSize: '17px',\n    lineHeight: '24px',\n    ':before': {\n      content: '\"\"',\n      display: 'block',\n      width: '54px',\n      height: '54px',\n      margin: '0 auto 20px',\n      background: `url(${MailSendIcon}) no-repeat 50% 50%`,\n    },\n  },\n  mail: {\n    fontWeight: 700,\n    color: `${COLOR.kurlyPurple}`,\n    wordBreak: 'break-all' as const,\n  },\n  notice: {\n    paddingTop: '14px',\n    fontSize: '14px',\n    color: `${COLOR.kurlyGray450}`,\n    lineHeight: '19px',\n  },\n};\n\nexport default function EmailSendSuccessPage() {\n  useScreenName(ScreenName.FIND_PASSWORD);\n\n  const dispatch = useDispatch();\n  const webview = useWebview();\n  const router = useRouter();\n  const { passwordByEmail } = useSelector((state: AppState) => state.find);\n\n  const handleClickClose = () => {\n    dispatch(redirectTo({ url: getPageUrl(COMMON_PATH.login) }));\n  };\n\n  useEffect(() => {\n    if (router.isReady && !passwordByEmail.email) {\n      window.location.assign('/');\n    }\n  }, [router.isReady, passwordByEmail.email]);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <CloseButton onClick={handleClickClose} />\n          </HeaderButtons>\n          <HeaderTitle>비밀번호 찾기</HeaderTitle>\n        </MobileHeader>\n      )}\n\n      <SuccessContent>\n        <p css={styles.message}>\n          <span css={styles.mail}>{passwordByEmail.email}</span>\n          으로\n          <br />\n          비밀번호 재설정 메일이 발송되었어요.\n        </p>\n        <p css={styles.notice}>\n          5분 후에도 메일이 오지 않는다면\n          <br />\n          스팸함을 확인해 주세요.\n        </p>\n      </SuccessContent>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/login/index.tsx","import styled from '@emotion/styled';\n\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport CloseButton from '../../../../src/shared/components/Button/CloseButton';\n\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\nimport LoginMobileForm\n  from '../../../../src/member/login/m/components/LoginMobileForm';\nimport {\n  useInitLogin,\n} from '../../../../src/member/login/shared/hooks/useInitLogin';\n\nconst FormWrapper = styled.div`\n  width: 100%;\n  padding: 40px 20px;\n`;\n\nexport default function LoginPage() {\n  useScreenName(ScreenName.LOGIN);\n  useInitLogin();\n\n  const handleCloseButton = () => {\n    window.history.back();\n  };\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={handleCloseButton} />\n        </HeaderButtons>\n        <HeaderTitle>로그인</HeaderTitle>\n      </MobileHeader>\n      <FormWrapper>\n        <LoginMobileForm />\n      </FormWrapper>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/logout/index.tsx","import LogoutPage from '../../../member/logout';\n\nexport default LogoutPage;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/signup/index.tsx","import { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useAppSelector } from '../../../../src/shared/store';\nimport { USER_MENU_PATH } from '../../../../src/shared/constant';\n\nimport Alert from '../../../../src/shared/components/Alert/Alert';\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer\n  from '../../../../src/shared/containers/m/CartButtonContainer';\nimport SignupContainer\n  from '../../../../src/member/signup/shared/containers/SignupContainer';\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\nimport appService from '../../../../src/shared/services/app.service';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport { loadSession } from '../../../../src/shared/reducers/auth';\nimport { deleteCookie } from '../../../../src/shared/services';\n\nexport default function SignupPage() {\n  const dispatch = useDispatch();\n\n  const webview = useWebview();\n  const { isGuest } = useAppSelector(({ auth }) => auth);\n\n  useEffect(() => {\n    if (!isGuest) {\n      Alert({ text: '이미 로그인 상태 입니다.' })\n        .then(() => {\n          window.location.assign(USER_MENU_PATH.home.uri);\n        });\n    }\n  }, [isGuest]);\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('회원가입');\n      // 앱에서는 로그아웃 하고 접근하여도 쿠키가 존재하여, 해당 쿠키를 강제로 제거 합니다.\n      deleteCookie('DEVSTG_PHPSESSID', 'PHPSESSID');\n      dispatch(loadSession());\n    }\n  }, [dispatch]);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>회원가입</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <SignupContainer />\n\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/signup/success.tsx","import MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer\n  from '../../../../src/shared/containers/m/CartButtonContainer';\nimport SuccessContainer\n  from '../../../../src/member/signup/m/containers/SuccessContainer';\nimport AuthContainer\n  from '../../../../src/shared/components/Auth/AuthContainer';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\n\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nexport default function SignupSuccessPage() {\n  useScreenName(ScreenName.SIGN_UP_SUCCESS);\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>회원가입 완료</HeaderTitle>\n        <HeaderButtons position=\"right\">\n          <CartButtonContainer />\n        </HeaderButtons>\n      </MobileHeader>\n\n      <AuthContainer loginRequired>\n        <SuccessContainer />\n      </AuthContainer>\n\n      <UserMenu />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/signup/link/index.tsx","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport styled from '@emotion/styled';\n\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\n\nimport LinkAccountFormContainer from '../../../../../src/member/signup/link/containers/LinkAccountFormContainer';\n\nimport { iconInfo } from '../../../../../src/shared/images';\n\nimport { AppState } from '../../../../../src/shared/store';\n\nimport { loadLinkableAccounts, setValue } from '../../../../../src/member/signup/reducers/slice';\nimport Alert from '../../../../../src/shared/components/Alert/Alert';\nimport { redirectTo } from '../../../../../src/shared/reducers/page';\n\nimport { useScreenName } from '../../../../../src/shared/hooks';\nimport { SnsSyncSuccess, ViewSnsSync } from '../../../../../src/shared/amplitude/events';\nimport { amplitudeService, ScreenName } from '../../../../../src/shared/amplitude';\n\nconst MainContent = styled.div`\n  height: 100%;\n  padding: 36px 20px 40px 20px;\n`;\n\nconst Title = styled.div`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 30px;\n  margin-bottom: 12px;\n  > span {\n    color: #5f0080;\n  }\n`;\n\nconst SubTitle = styled.div`\n  font-size: 14px;\n  line-height: 20px;\n  color: #666666;\n  margin-bottom: 18px;\n`;\n\nconst InquiryBox = styled.div`\n  padding: 16px;\n  background-color: #fafafa;\n  border-radius: 6px;\n  display: flex;\n`;\n\nconst InquiryText = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n  color: #999999;\n  > a {\n    color: #5f0080;\n  }\n`;\n\nconst IconInfo = styled.div`\n  margin-top: 2px;\n  margin-right: 6px;\n  width: 14px;\n  height: 14px;\n  background: url('${iconInfo}') 0 0 no-repeat;\n  vertical-align: top;\n  background-size: cover;\n  flex-shrink: 0;\n`;\n\nconst LoginSearch = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 20px;\n  color: #999999;\n  padding: 11px 0px 9px 0;\n  margin-bottom: 20px;\n  span {\n    width: 1px;\n    height: 12px;\n    background-color: #dddddd;\n    margin: 0 8px;\n  }\n`;\n\nexport default function LinkPage() {\n  useScreenName(ScreenName.SNS_SYNC);\n\n  const dispatch = useDispatch();\n\n  const { link } = useSelector(({ social }: AppState) => social);\n\n  const router = useRouter();\n\n  useEffect(() => {\n    void amplitudeService.logEvent(new ViewSnsSync());\n    dispatch(setValue({\n      socialLoginToken: window.sessionStorage.getItem('socialLoginToken')!,\n    }));\n    dispatch(loadLinkableAccounts({ provider: 'kakao' }));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (link.status === 'SUCCESS') {\n      amplitudeService.logEvent(new SnsSyncSuccess({\n        joinPath: 'kakao',\n      }));\n      Alert({\n        text: '카카오 계정이 연결되었습니다.',\n      }).then(() => {\n        if (router.isReady) {\n          const { return_url: returnUrl, authAdult, no } = router.query;\n\n          if (returnUrl) {\n            dispatch(redirectTo({ url: returnUrl, isExternal: true }));\n            return;\n          }\n\n          if (authAdult && no) {\n            dispatch(redirectTo({ url: `/shop/goods/goods_view.php?goodsno=${no}`, isExternal: true }));\n            return;\n          }\n        }\n        dispatch(redirectTo({ url: '/', isExternal: true }));\n      });\n    }\n  }, [link.status, dispatch]);\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>SNS 계정 연결</HeaderTitle>\n      </MobileHeader>\n\n      <MainContent>\n        <Title>\n          <span>{link.matchingData}</span>\n          {' '}\n          으로\n          <br />\n          {' '}\n          가입된 회원 정보가 있습니다.\n        </Title>\n        <SubTitle>\n          아이디를 선택 후 비밀번호를 입력하시면 기존 회원으로 서비스 사용이 가능합니다.\n        </SubTitle>\n\n        <LinkAccountFormContainer />\n\n        <LoginSearch>\n          <a href=\"/member/find/id\">아이디 찾기</a>\n          <span />\n          <a href=\"/member/find/password\">비밀번호 찾기</a>\n        </LoginSearch>\n\n        <InquiryBox>\n          <IconInfo />\n          <InquiryText>\n            아이디가 다르거나 가입한 적이 없을 경우 고객센터\n            {' '}\n            <a href=\"tel:16441107\">1644-1107</a>\n            로 문의주세요.\n          </InquiryText>\n        </InquiryBox>\n      </MainContent>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/signup/simple/index.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport styled from '@emotion/styled';\n\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\n\nimport SimpleSignupFormContainer from '../../../../../src/member/signup/simple/containers/SimpeSignupFormContainer';\n\nimport { useWebview, useScreenName, useLoadEvent } from '../../../../../src/shared/hooks';\n\nimport { AppState } from '../../../../../src/shared/store';\nimport { requestKakaoAccountInfomation, setValue, changeSignupForm } from '../../../../../src/member/signup/reducers/slice';\nimport { syncSession } from '../../../../../src/shared/reducers/auth';\n\nimport appService from '../../../../../src/shared/services/app.service';\nimport { isWebview } from '../../../../../util/window/getDevice';\nimport Alert from '../../../../../src/shared/components/Alert/Alert';\nimport { ActionProps } from '../../../../../src/shared/services/serviceCode';\nimport { branchService } from '../../../../../src/shared/branch';\nimport { CompleteRegistration } from '../../../../../src/shared/branch/events';\n\nimport { SignUpSuccess, ViewSignUp } from '../../../../../src/shared/amplitude/events';\nimport { amplitudeService, ScreenName } from '../../../../../src/shared/amplitude';\n\nimport { Crypto } from '../../../../../util/security/crypto';\n\nconst Container = styled.div`\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst MainContent = styled.div`\n  overflow: auto;\n`;\n\ninterface Props {\n  socialLoginToken: string;\n  appToken: string;\n  recommenderId: string;\n}\n\nexport default function SimpleSignUpPage({\n  socialLoginToken,\n  appToken,\n  recommenderId,\n}: Props) {\n  useScreenName(ScreenName.SIGN_UP);\n  useLoadEvent(new ViewSignUp({ joinPath: 'kakao' }));\n\n  const dispatch = useDispatch();\n\n  const router = useRouter();\n\n  const { signup } = useSelector(({ social }: AppState) => social);\n  const { accessToken } = useSelector(({ auth }: AppState) => auth);\n\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (!router.isReady || !accessToken) {\n      return;\n    }\n\n    if (signup.status === 'INITIAL' && recommenderId) {\n      dispatch(changeSignupForm({\n        name: 'recommender', value: recommenderId,\n      }));\n      return;\n    }\n\n    if (signup.status === 'SUCCESS') {\n      Alert({\n        text: `회원가입을 축하드립니다!\n        당신의 일상에 컬리를 더해 보세요.`,\n      }).then(async () => {\n        if (isWebview()) {\n          const sendData: ActionProps = {\n            code: 'WV3000',\n            message: '',\n            data: accessToken,\n          };\n          appService.postMessage(sendData);\n          return;\n        }\n\n        await branchService.logEvent(\n          new CompleteRegistration({\n            description: 'KAKAOSYNC',\n          }),\n        );\n        await amplitudeService.logEvent(\n          new SignUpSuccess({ joinPath: 'kakao' }),\n        );\n        router.push(\n          '/m/member/signup/simple/success',\n          '/member/signup/simple/success',\n        );\n      });\n    }\n  }, [router.isReady, signup.status, dispatch, accessToken]);\n\n  const checkout = () => {\n    dispatch(setValue({\n      socialLoginToken: window.sessionStorage.getItem('socialLoginToken')!,\n    }));\n    dispatch(requestKakaoAccountInfomation({ provider: 'kakao' }));\n  };\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('간편 회원가입');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (socialLoginToken) {\n      window.sessionStorage.setItem('socialLoginToken', socialLoginToken);\n    }\n    checkout();\n  }, []);\n\n  useEffect(() => {\n    if (appToken) {\n      dispatch(syncSession(appToken));\n    }\n  }, [appToken, dispatch]);\n\n  return (\n    <Container>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>간편 회원가입</HeaderTitle>\n        </MobileHeader>\n      )}\n\n      <MainContent>\n        <SimpleSignupFormContainer />\n      </MainContent>\n    </Container>\n  );\n}\n\nexport async function getServerSideProps(context: any) {\n  const { req, query } = context;\n  const { authorization } = req.headers;\n\n  const crypto = new Crypto();\n\n  const props = {\n    socialLoginToken: req.headers['social-login-token'] ?? '',\n    appToken: authorization?.replace('Bearer ', '') ?? '',\n    recommenderId: query.recommid ? crypto.decrypt(query.recommid, 'utf8') : '',\n  };\n\n  return {\n    props,\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/signup/simple/success.tsx","import { useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nimport { useRouter } from 'next/router';\n\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport Button from '../../../../../src/shared/components/Button/Button';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport MobileFooter from '../../../../../src/shared/components/layouts/MobileFooter';\nimport CartButtonContainer from '../../../../../src/shared/containers/m/CartButtonContainer';\n\nimport { JoinEvent01, JoinEvent02, JoinEvent03 } from '../../../../../src/shared/images';\n\nimport { useWebview, useScreenName } from '../../../../../src/shared/hooks';\nimport { AppState } from '../../../../../src/shared/store';\n\nimport { isWebview } from '../../../../../util/window/getDevice';\n\nimport appService from '../../../../../src/shared/services/app.service';\nimport { wrongApproach } from '../../../../../src/shared/reducers/page';\nimport { ScreenName } from '../../../../../src/shared/amplitude';\nimport { getTimeFromDate } from '../../../../../src/shared/utils/date';\n\nconst Container = styled.div`\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst SuccessContent = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  flex-direction: column;\n`;\n\nconst WelcomeMessage = styled.div`\n  font-size: 24px;\n  font-weight: 500;\n  text-align: center;\n  line-height: 30px;\n\n  p:first-of-type {\n    color: #5f0080;\n  }\n`;\n\nconst BenefitTitle = styled.p`\n  font-size: 15px;\n  color: #666666;\n  line-height: 22px;\n  margin-top: 8px;\n`;\n\nconst BenefitList = styled.ul`\n  position: relative;\n  margin-top: 36px;\n`;\n\nconst BenefitItem = styled.li`\n  display: flex;\n  align-items: center;\n  width: 275px;\n  height: 60px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n  border-radius: 6px;\n  background-color: #f7f7f7;\n  padding: 18px 20px 18px 24px;\n\n  :not(:first-of-type) {\n    margin-top: 8px;\n  }\n`;\n\nconst EventIcon = styled.span<{ icon: string; }>(({ icon }) => ({\n  display: 'inline-block',\n  width: '30px',\n  height: '30px',\n  background: `url(${icon}) 0 0 no-repeat`,\n  verticalAlign: 'top',\n  backgroundSize: 'cover',\n  marginLeft: 'auto',\n}));\n\nconst Badge = styled.span`\n  position: absolute;\n  padding: 0 6px;\n  height: 17px;\n  top: -7px;\n  left: 24px;\n  font-size: 10px;\n  line-height: 15px;\n  font-weight: 600;\n  text-align: center;\n  border: 1px solid #fa622f;\n  border-radius: 9px;\n  background-color: #fff;\n  color: #fa622f;\n`;\n\nconst button = css`\n  font-weight: 500;\n`;\n\nconst benefitContents = [\n  { text: '인기상품이 100원', icon: JoinEvent01 },\n  { text: '무조건 무료배송', icon: JoinEvent02 },\n  { text: '한달 동안 5% 적립', icon: JoinEvent03 },\n];\ninterface Props {\n  serverTime: number;\n}\n\nexport default function SimpleSignupSuccessPage({ serverTime }: Props) {\n  useScreenName(ScreenName.SIGN_UP);\n  const webview = useWebview();\n\n  const dispatch = useDispatch();\n\n  const router = useRouter();\n  const { form, status } = useSelector(({ social }: AppState) => social.signup);\n\n  const [isSignupEvent, setIsSignupEvent] = useState(false);\n\n  const isEventTime = (time: number) => {\n    const year = 2022;\n    const month = 2;\n    const hours = 11;\n    const eventStartTime = getTimeFromDate(year, month, 21, hours);\n    const eventEndTime = getTimeFromDate(year, month, 23, hours);\n\n    return (time >= eventStartTime && time <= eventEndTime);\n  };\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (status !== 'SUCCESS') {\n      dispatch(wrongApproach('잘못된 접근입니다'));\n    }\n  }, [dispatch, router.isReady, status]);\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('회원가입 완료');\n    }\n\n    if (isEventTime(serverTime)) {\n      setIsSignupEvent(true);\n      benefitContents[0].text = '인기상품 50% 페이백';\n    } else {\n      setIsSignupEvent(false);\n      benefitContents[0].text = '인기상품이 100원';\n    }\n  }, [serverTime, dispatch]);\n\n  const handleClick = () => (isSignupEvent ? router.push('/categories/719')\n    : router.push('/categories/077'));\n\n  const handleClickBack = () => {\n    router.push('/m2/index.php');\n  };\n\n  return (\n    <Container>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton onClick={handleClickBack} />\n          </HeaderButtons>\n          <HeaderTitle>회원가입 완료</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <SuccessContent>\n        <WelcomeMessage>\n          <p>{`${form.id}님,`}</p>\n          <p>마켓컬리의 회원이 되셨습니다.</p>\n        </WelcomeMessage>\n        <BenefitTitle>첫 구매 시 드리는 놀라운 혜택</BenefitTitle>\n        <BenefitList>\n          <Badge>{isSignupEvent ? '28일까지' : '3일 후 만료'}</Badge>\n          {benefitContents.map(({ text, icon }) => (\n            <BenefitItem key={text}>\n              {text}\n              <EventIcon icon={icon} />\n            </BenefitItem>\n          ))}\n        </BenefitList>\n      </SuccessContent>\n\n      <MobileFooter>\n        <Button\n          css={button}\n          text=\"지금 사러가기\"\n          onClick={handleClick}\n        />\n      </MobileFooter>\n    </Container>\n  );\n}\n\nexport async function getServerSideProps() {\n  const currentTime = new Date().getTime();\n\n  return {\n    props: { serverTime: currentTime },\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/signup/terms/privacy-policy-optional.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport dynamic from 'next/dynamic';\n\nimport styled from '@emotion/styled';\n\nimport { AppState } from '../../../../../src/shared/store';\nimport { loadPrivacyPolicyOptionalHTML } from '../../../../../src/shared/reducers/terms';\n\nconst Terms = dynamic(\n  () => import('../../../../../src/shared/components/layouts/Terms'),\n  { ssr: false },\n);\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.div`\n  padding: 16px 0;\n  font-weight: 600;\n  font-size: 18px;\n  color: #333;\n  line-height: 20px;\n  text-align: center;\n`;\n\nconst Sub = styled.span`\n  color: #999;\n`;\n\nexport default function PrivacyPolicyOptionalPage() {\n  const dispatch = useDispatch();\n  const { privacyPolicyOptionalHTML } = useSelector(({ terms }: AppState) => terms);\n\n  useEffect(() => {\n    dispatch(loadPrivacyPolicyOptionalHTML());\n  }, [dispatch]);\n\n  if (!privacyPolicyOptionalHTML) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Title>\n        개인정보 수집·이용 동의\n        {' '}\n        <Sub>(선택)</Sub>\n      </Title>\n      <Terms html={privacyPolicyOptionalHTML} />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/signup/terms/privacy-policy.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport dynamic from 'next/dynamic';\n\nimport styled from '@emotion/styled';\n\nimport { AppState } from '../../../../../src/shared/store';\nimport { loadPrivacyPolicyHTML } from '../../../../../src/shared/reducers/terms';\n\nconst Terms = dynamic(\n  () => import('../../../../../src/shared/components/layouts/Terms'),\n  { ssr: false },\n);\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.div`\n  padding: 16px 0;\n  font-weight: 600;\n  font-size: 18px;\n  color: #333;\n  line-height: 20px;\n  text-align: center;\n`;\n\nconst Sub = styled.span`\n  color: #999;\n`;\n\nexport default function PrivacyPolicyPage() {\n  const dispatch = useDispatch();\n  const { privacyPolicyHTML } = useSelector(({ terms }: AppState) => terms);\n\n  useEffect(() => {\n    dispatch(loadPrivacyPolicyHTML());\n  }, [dispatch]);\n\n  if (!privacyPolicyHTML) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Title>\n        개인정보 수집·이용 동의\n        {' '}\n        <Sub>(필수)</Sub>\n      </Title>\n      <Terms html={privacyPolicyHTML} />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/member/signup/terms/terms-of-use.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport dynamic from 'next/dynamic';\n\nimport styled from '@emotion/styled';\n\nimport { AppState } from '../../../../../src/shared/store';\nimport { loadTermsOfUseHTML } from '../../../../../src/shared/reducers/terms';\n\nconst Terms = dynamic(\n  () => import('../../../../../src/shared/components/layouts/Terms'),\n  { ssr: false },\n);\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.div`\n  padding-top: 16px;\n  font-weight: 600;\n  font-size: 18px;\n  color: #333;\n  line-height: 20px;\n  text-align: center;\n`;\n\nexport default function TermsOfUsePage() {\n  const dispatch = useDispatch();\n  const { termsOfUseHTML } = useSelector(({ terms }: AppState) => terms);\n\n  useEffect(() => {\n    dispatch(loadTermsOfUseHTML());\n  }, [dispatch]);\n\n  if (!termsOfUseHTML) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Title>이용약관</Title>\n      <Terms html={termsOfUseHTML} />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/index.tsx","import { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport TopHeader from '../../../src/header/components/m/TopHeader';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport UserInfoContainer from '../../../src/mypage/info-section/containers/m/UserInfoContainer';\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\n\nexport default function MyKurly() {\n  useScreenName(ScreenName.MY_KURLY);\n\n  return (\n    <>\n      <MobileHeader color=\"purple\">\n        <TopHeader title=\"마이컬리\" color=\"white\" />\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <UserInfoContainer />\n      </AuthContainer>\n      <UserMenu />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/address/index.tsx","import type { InferGetStaticPropsType } from 'next';\n\nimport {\n  AddressContextProvider,\n} from '../../../../src/mypage/address/context/addressContext';\nimport MypageAddressContainer\n  from '../../../../src/mypage/address/containers/m/Container';\n\nexport default function MypageMobileAddress({ page: { title } }: InferGetStaticPropsType<typeof getStaticProps>) {\n  return (\n    <AddressContextProvider>\n      <MypageAddressContainer title={title} />\n    </AddressContextProvider>\n  );\n}\n\nexport async function getStaticProps() {\n  return {\n    props: {\n      page: {\n        title: '배송지 관리',\n      },\n    },\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/coupon/index.tsx","import { useRouter } from 'next/router';\n\nimport { useEffect } from 'react';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\n\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport CouponContainer from '../../../../src/mypage/coupon/m/containers/CouponContainer';\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\nimport { useScreenName, useWebview } from '../../../../src/shared/hooks';\nimport { getWebviewServerSideProps } from '../../../../src/server/webview';\nimport appService from '../../../../src/shared/services/app.service';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport { isWebview } from '../../../../util/window/getDevice';\nimport { ScreenName } from '../../../../src/shared/amplitude';\nimport { useAppSelector } from '../../../../src/shared/store';\nimport { BADGE_KEY, updateReadBadge } from '../../../../src/shared/api';\n\ninterface Props {\n  accessToken: string;\n}\n\nexport default function CouponListPage({ accessToken }: Props) {\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n  const { userNotification: { badge } } = useAppSelector(({ header }) => header);\n\n  useScreenName(ScreenName.COUPON_LIST);\n\n  const router = useRouter();\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('쿠폰 내역');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isWebview() || !hasSession || !badge.coupon) {\n      return;\n    }\n\n    updateReadBadge(BADGE_KEY.coupon_badge);\n  }, [badge.coupon, hasSession]);\n\n  return (router.isReady && (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>쿠폰 내역</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n      <AuthContainer loginRequired appToken={accessToken}>\n        <CouponContainer />\n      </AuthContainer>\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  ));\n}\n\nexport const getServerSideProps = getWebviewServerSideProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/emoney/index.tsx","import type { InferGetStaticPropsType } from 'next';\nimport styled from '@emotion/styled';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\n\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport { PagingContextProvider } from '../../../../src/mypage/emoney/context/m/PagingContext';\nimport PageContainer from '../../../../src/mypage/emoney/containers/m/PageContainer';\n\nconst Container = styled.main`\n  min-height: 100vh;\n  background-color: ${COLOR.bg};\n`;\n\nconst MyPageEMoneyPage = ({ page: { title } }: InferGetStaticPropsType<typeof getStaticProps>) => {\n  return (\n    <Container>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>{title}</HeaderTitle>\n        <HeaderButtons position=\"right\">\n          <CartButtonContainer />\n        </HeaderButtons>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <PagingContextProvider>\n          <PageContainer />\n        </PagingContextProvider>\n      </AuthContainer>\n      <UserMenu />\n    </Container>\n  );\n};\n\nexport default MyPageEMoneyPage;\n\nexport async function getStaticProps() {\n  return {\n    props: {\n      page: {\n        title: '적립금 내역',\n      },\n    },\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/faq/index.tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport { useEffect } from 'react';\n\nimport FaqCategoryContainer\n  from '../../../../src/mypage/faq/container/FaqCategoryContainer';\nimport FaqsContainer from '../../../../src/mypage/faq/container/FaqsContainer';\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport CloseButton from '../../../../src/shared/components/Button/CloseButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport { useScreenName, useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\nimport appService from '../../../../src/shared/services/app.service';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nconst Container = styled.div({\n  padding: '10px 20px 0 20px',\n});\n\nexport default function FQA() {\n  useScreenName(ScreenName.FREQUENTLY_ASK_QUESTION);\n\n  const router = useRouter();\n  const webview = useWebview();\n\n  const handleClickCloseButton = () => router.back();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('자주하는 질문');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview\n        && (\n          <MobileHeader visibleBanner={false}>\n            <HeaderButtons position=\"left\">\n              <CloseButton onClick={handleClickCloseButton} />\n            </HeaderButtons>\n            <HeaderTitle>자주하는 질문</HeaderTitle>\n          </MobileHeader>\n        )}\n      <Container>\n        <FaqCategoryContainer />\n      </Container>\n      <FaqsContainer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/gift/detail.tsx","import CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport GiftOrderDetailContainer from '../../../../src/mypage/gift/m/detail/containers/GiftOrderDetailContainer';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\n\nexport default function MypageGiftOrderDetailPage() {\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>선물 내역 상세</HeaderTitle>\n        <HeaderButtons position=\"right\">\n          <CartButtonContainer />\n        </HeaderButtons>\n      </MobileHeader>\n\n      <GiftOrderDetailContainer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/gift/index.tsx","import useLoadKakao from '../../../../src/shared/hooks/useLoadKakao';\nimport { useGiftRelease } from '../../../../src/mypage/gift/shared/hooks/useGiftRelease';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButton from '../../../../src/shared/components/Button/CartButton';\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\nimport GiftOrderListContainer from '../../../../src/mypage/gift/m/list/containers/GiftOrderListContainer';\nimport { useCartButton } from '../../../../src/shared/hooks/useCartButton';\nimport Loading from '../../../../src/shared/components/Loading/Loading';\n\nexport default function MypageGiftOrderPage() {\n  useLoadKakao();\n  const { moveCart, basketCount } = useCartButton();\n  const { isReleased } = useGiftRelease();\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>선물 내역</HeaderTitle>\n        <HeaderButtons position=\"right\">\n          <CartButton count={basketCount} onClick={moveCart} color=\"black\" />\n        </HeaderButtons>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        {isReleased\n          ? <GiftOrderListContainer />\n          : <Loading />\n        }\n      </AuthContainer>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/gift/cancel/fail.tsx","import { useRouter } from 'next/router';\nimport { isEmpty } from 'lodash';\n\nimport { useAppSelector } from '../../../../../src/shared/store';\nimport { GIFT_PATH } from '../../../../../src/shared/constant';\n\nimport CloseButton from '../../../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport CancelFailContainer from '../../../../../src/mypage/gift/m/cancel/containers/CancelFailContainer';\n\nexport default function MypageGiftCancelFailPage() {\n  const router = useRouter();\n  const { failMessage } = useAppSelector(({ mypageGiftCancel }) => mypageGiftCancel);\n\n  const moveBack = () => {\n    if (isEmpty(failMessage)) {\n      router.push(`/m${GIFT_PATH.list.uri}`, GIFT_PATH.list.uri);\n      return;\n    }\n    router.back();\n  };\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={moveBack} />\n        </HeaderButtons>\n        <HeaderTitle>주문 취소 실패</HeaderTitle>\n      </MobileHeader>\n      <CancelFailContainer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/gift/cancel/index.tsx","import { useRouter } from 'next/router';\n\nimport CloseButton from '../../../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport AuthContainer from '../../../../../src/shared/components/Auth/AuthContainer';\nimport CancelContainer from '../../../../../src/mypage/gift/m/cancel/containers/CancelContainer';\n\nexport default function MypageGiftCancelPage() {\n  const router = useRouter();\n\n  const moveBack = () => {\n    router.back();\n  };\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={moveBack} />\n        </HeaderButtons>\n        <HeaderTitle>주문 취소</HeaderTitle>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <CancelContainer />\n      </AuthContainer>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/gift/cancel/success.tsx","import { useRouter } from 'next/router';\n\nimport CloseButton from '../../../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport CancelSuccessContainer from '../../../../../src/mypage/gift/m/cancel/containers/CancelSuccessContainer';\n\nexport default function MypageGiftCancelSuccessPage() {\n  const router = useRouter();\n\n  const moveBack = () => {\n    router.back();\n  };\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={moveBack} />\n        </HeaderButtons>\n        <HeaderTitle>주문 취소 완료</HeaderTitle>\n      </MobileHeader>\n      <CancelSuccessContainer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/info/index.tsx","import { useEffect } from 'react';\n\nimport { useRouter } from 'next/router';\n\nimport { useDispatch } from 'react-redux';\n\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer\n  from '../../../../src/shared/containers/m/CartButtonContainer';\nimport AuthContainer\n  from '../../../../src/shared/components/Auth/AuthContainer';\nimport PasswordConfirmContainer\n  from '../../../../src/mypage/myinfo/shared/containers/PasswordConfirmContainer';\nimport { useScreenName, useWebview } from '../../../../src/shared/hooks';\nimport { isWebview } from '../../../../util/window/getDevice';\nimport appService from '../../../../src/shared/services/app.service';\nimport {\n  getWebviewServerSideProps,\n  WebviewServerSideProps,\n} from '../../../../src/server/webview';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nexport default function MyInfoPasswordPage({ accessToken }: WebviewServerSideProps) {\n  useScreenName(ScreenName.ACCOUNT_EDIT);\n\n  const webview = useWebview();\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('개인정보 수정');\n    }\n  }, [dispatch]);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>개인정보수정</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <AuthContainer loginRequired appToken={accessToken}>\n        {router.isReady && (\n          <PasswordConfirmContainer />\n        )}\n      </AuthContainer>\n\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n\nexport const getServerSideProps = getWebviewServerSideProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/info/modify/index.tsx","import { useEffect } from 'react';\n\nimport MobileHeader\n  from '../../../../../src/shared/components/layouts/MobileHeader';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons\n  from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer\n  from '../../../../../src/shared/containers/m/CartButtonContainer';\nimport AuthContainer\n  from '../../../../../src/shared/components/Auth/AuthContainer';\nimport MyInfoModifyContainer\n  from '../../../../../src/mypage/myinfo/shared/containers/MyInfoModifyContainer';\nimport { useScreenName, useWebview } from '../../../../../src/shared/hooks';\nimport { isWebview } from '../../../../../util/window/getDevice';\nimport appService from '../../../../../src/shared/services/app.service';\nimport {\n  getWebviewServerSideProps,\n  WebviewServerSideProps,\n} from '../../../../../src/server/webview';\nimport UserMenu from '../../../../../src/shared/components/layouts/UserMenu';\nimport { ScreenName } from '../../../../../src/shared/amplitude';\n\nexport default function MyInfoModifyPage({ accessToken }: WebviewServerSideProps) {\n  useScreenName(ScreenName.ACCOUNT_EDIT);\n\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('개인정보 수정');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>개인정보수정</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <AuthContainer loginRequired appToken={accessToken}>\n        <MyInfoModifyContainer />\n      </AuthContainer>\n\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n\nexport const getServerSideProps = getWebviewServerSideProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/inquiry/form.tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport PersonalInquiryFormContainer\n  from '../../../../src/mypage/personal-inquiry/form/container/PersonalInquiryFormContainer';\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport AuthContainer\n  from '../../../../src/shared/components/Auth/AuthContainer';\nimport PersonalInquiryForm\n  from '../../../../src/mypage/personal-inquiry/form/components/mo/PersonalInquiryForm';\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nconst Container = styled.div`\n  padding: 0 0.75rem;\n`;\n\nconst ORDER_PRODUCT_PAGE_SIZE = 15;\n\nexport default function Form() {\n  useScreenName(ScreenName.PERSONAL_INQUIRY_WRITING);\n\n  const { query, isReady } = useRouter();\n\n  const { id }: { id?: string; } = query;\n\n  return (\n    <Container>\n      <MobileHeader visibleBanner={false}>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>1:1 문의 작성</HeaderTitle>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <PersonalInquiryFormContainer\n          id={Number(id)}\n          orderProductPageSize={ORDER_PRODUCT_PAGE_SIZE}\n        >\n          {isReady && <PersonalInquiryForm />}\n        </PersonalInquiryFormContainer>\n      </AuthContainer>\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/inquiry/list.tsx","import styled from '@emotion/styled';\n\nimport PersonalInquiryListContainer\n  from '../../../../src/mypage/personal-inquiry/list/container/PersonalInquiryListContainer';\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport AuthContainer\n  from '../../../../src/shared/components/Auth/AuthContainer';\nimport PersonalInquiryList\n  from '../../../../src/mypage/personal-inquiry/list/component/mo/PersonalInquiryList';\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nexport default function PersonalInquiryListPage() {\n  useScreenName(ScreenName.PERSONAL_INQUIRY_HISTORY);\n\n  return (\n    <Container>\n      <MobileHeader visibleBanner={false}>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>1:1 문의</HeaderTitle>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <PersonalInquiryListContainer>\n          <PersonalInquiryList />\n        </PersonalInquiryListContainer>\n      </AuthContainer>\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/inquiry/notice.tsx","import styled from '@emotion/styled';\n\nimport PersonalInquiryAgreeTermContent\n  from '../../../../src/mypage/personal-inquiry/form/components/mo/PersonalInquiryAgreeTermContent';\n\nconst Container = styled.div`padding: 1.234rem`;\n\nexport default function Notice() {\n  return (\n    <Container>\n      <PersonalInquiryAgreeTermContent />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/inquiry/bulk-order/index.tsx","import { useEffect } from 'react';\n\nimport { useScreenName, useWebview } from '../../../../../src/shared/hooks';\n\nimport { isWebview } from '../../../../../util/window/getDevice';\nimport appService from '../../../../../src/shared/services/app.service';\n\nimport MobileHeader\n  from '../../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons\n  from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer\n  from '../../../../../src/shared/containers/m/CartButtonContainer';\nimport AuthContainer\n  from '../../../../../src/shared/components/Auth/AuthContainer';\nimport BulkOrderContainer\n  from '../../../../../src/mypage/bulk-order/shared/container/BulkOrderContainer';\nimport {\n  getWebviewServerSideProps,\n  WebviewServerSideProps,\n} from '../../../../../src/server/webview';\nimport UserMenu from '../../../../../src/shared/components/layouts/UserMenu';\nimport { ScreenName } from '../../../../../src/shared/amplitude';\n\nexport default function BulkOrderInquiryPage({ accessToken }: WebviewServerSideProps) {\n  useScreenName(ScreenName.BULK_ORDER_INQUIRY);\n\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('대량주문 문의');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>대량주문 문의</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <AuthContainer loginRequired appToken={accessToken}>\n        <BulkOrderContainer />\n      </AuthContainer>\n\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n\nexport const getServerSideProps = getWebviewServerSideProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/kurly-purple-box/index.tsx","import { useRouter } from 'next/router';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport KurlyPurpleBoxContainer from '../../../../src/mypage/kurly-purple-box/m/containers/KurlyPurpleBoxContainer';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport { useWebview } from '../../../../src/shared/hooks';\n\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\n\nexport default function KurlyPurpleBoxPage() {\n  const router = useRouter();\n  const webview = useWebview();\n\n  const clickBackButton = () => {\n    router.back();\n  };\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton onClick={clickBackButton}/>\n        </HeaderButtons>\n        <HeaderTitle>컬리 퍼플 박스</HeaderTitle>\n        <HeaderButtons position=\"right\">\n          <CartButtonContainer />\n        </HeaderButtons>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <KurlyPurpleBoxContainer />\n      </AuthContainer>\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/kurly-purple-box/request.tsx","import { useDispatch } from 'react-redux';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\n\nimport { redirectTo } from '../../../../src/shared/reducers/page';\nimport { KURLY_PURPLE_BOX_PATH, getPageUrl } from '../../../../src/shared/constant';\nimport CloseButton from '../../../../src/shared/components/Button/CloseButton';\n\nimport RequestForm from '../../../../src/mypage/kurly-purple-box/m/components/RequestForm';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport { useWebview } from '../../../../src/shared/hooks';\n\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\n\nexport default function PersonalBoxRequestFormPage() {\n  const webview = useWebview();\n  const dispatch = useDispatch();\n\n  const clickCloseButton = () => {\n    dispatch(redirectTo({ url: getPageUrl(KURLY_PURPLE_BOX_PATH.kurlyPurpleBox) }));\n  };\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={clickCloseButton} />\n        </HeaderButtons>\n        <HeaderTitle>개인 보냉 박스 이용 신청</HeaderTitle>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <RequestForm />\n      </AuthContainer>\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/kurly-purple-box/result.tsx","import { useDispatch } from 'react-redux';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\n\nimport { redirectTo } from '../../../../src/shared/reducers/page';\nimport { KURLY_PURPLE_BOX_PATH, getPageUrl } from '../../../../src/shared/constant';\nimport CloseButton from '../../../../src/shared/components/Button/CloseButton';\n\nimport ResultForm\n  from '../../../../src/mypage/kurly-purple-box/m/components/ResultForm';\n\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { useCompleteRequest } from '../../../../src/mypage/kurly-purple-box/shared/hooks/usePersonalBoxQuery';\n\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\n\nexport default function PersonalBoxRequestFormPage() {\n  const webview = useWebview();\n  const dispatch = useDispatch();\n  const { data: completeRequest } = useCompleteRequest();\n\n  const clickCloseButton = () => {\n    dispatch(redirectTo({ url: getPageUrl(KURLY_PURPLE_BOX_PATH.kurlyPurpleBox) }));\n  };\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={clickCloseButton} />\n        </HeaderButtons>\n        <HeaderTitle>{completeRequest ? '신청완료' : '개인 보냉 박스'}</HeaderTitle>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <ResultForm />\n      </AuthContainer>\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/kurlypass/index.tsx","import { useState } from 'react';\nimport styled from '@emotion/styled';\n\n// eslint-disable-next-line import/no-unresolved\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Swiper as SwiperClass } from 'swiper/types';\n\nimport { useWebview } from '../../../../src/shared/hooks';\nimport useKurlyPass from '../../../../src/kurlypass/shared/hooks/useKurlyPass';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport Tabs from '../../../../src/shared/components/layouts/Tabs';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport KurlyPassProductsContainer from '../../../../src/kurlypass/m/containers/KurlyPassProductsContainer';\nimport KurlyPassReceiptContainer from '../../../../src/kurlypass/m/containers/KurlyPassReceiptContainer';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst HeaderWrapper = styled.div();\n\nconst ContentsWrapper = styled.div`\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n`;\n\nconst Inner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: calc(100% - 45px);\n  > .swiper {\n    height: 100%;\n    background: ${COLOR.bg};\n    .swiper-slide {\n      background: ${COLOR.kurlyWhite};\n    }\n  }\n`;\n\nexport default function KurlyPassPage() {\n  const webview = useWebview();\n  const tabs = ['컬리패스', '결제내역'];\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const [swiper, setSwiper] = useState<SwiperClass>();\n\n  const {\n    list,\n    loading,\n    currentKurlyPass,\n    terminateKurlyPass,\n    loadKurlyPassHistory,\n  } = useKurlyPass();\n\n  const handleNextPage = () => {\n    if (tabs[selectedTabIndex] === '컬리패스') {\n      return;\n    }\n\n    loadKurlyPassHistory();\n  };\n\n  const handleSlideChange = (event: { activeIndex: number; }) => {\n    setSelectedTabIndex(event.activeIndex);\n  };\n\n  const handleChange = (tabName: string) => {\n    const tabIndex = tabs.findIndex((value) => value === tabName);\n\n    setSelectedTabIndex(tabIndex);\n    swiper?.slideTo(tabIndex);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <HeaderWrapper>\n          {!webview && (\n            <MobileHeader>\n              <HeaderButtons position=\"left\">\n                <BackButton />\n              </HeaderButtons>\n              <HeaderTitle>컬리패스</HeaderTitle>\n              <HeaderButtons position=\"right\">\n                <CartButtonContainer />\n              </HeaderButtons>\n            </MobileHeader>\n          )}\n          <Tabs\n            hasHeader={!webview}\n            selectedTab={tabs[selectedTabIndex]}\n            tabs={tabs}\n            onChange={handleChange}\n          />\n        </HeaderWrapper>\n        <ContentsWrapper>\n          <Inner>\n            <Swiper\n              loop={false}\n              onSwiper={(s) => setSwiper(s)}\n              onSlideChange={handleSlideChange}\n            >\n              <SwiperSlide\n                key={'kurly-pass-product-detail'}\n              >\n                <KurlyPassProductsContainer\n                  currentKurlyPass={currentKurlyPass}\n                  onClickTerminate={terminateKurlyPass}\n                />\n              </SwiperSlide>\n              <SwiperSlide\n                key={'kurly-pass-receipt-detail'}\n              >\n                <KurlyPassReceiptContainer\n                  loading={loading}\n                  currentKurlyPass={currentKurlyPass}\n                  list={list}\n                  onClickTerminate={terminateKurlyPass}\n                  onNextPage={handleNextPage}\n                />\n              </SwiperSlide>\n            </Swiper>\n          </Inner>\n          <UserMenu />\n        </ContentsWrapper>\n      </Wrapper>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/leave/index.tsx","import { useEffect } from 'react';\n\nimport { useWebview } from '../../../../src/shared/hooks';\n\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer\n  from '../../../../src/shared/containers/m/CartButtonContainer';\nimport AuthContainer\n  from '../../../../src/shared/components/Auth/AuthContainer';\nimport LeaveContainer\n  from '../../../../src/mypage/leave/shared/containers/LeaveContainer';\nimport { isWebview } from '../../../../util/window/getDevice';\nimport appService from '../../../../src/shared/services/app.service';\nimport {\n  getWebviewServerSideProps,\n  WebviewServerSideProps,\n} from '../../../../src/server/webview';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\n\nexport default function LeavePage({ accessToken }: WebviewServerSideProps) {\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('개인정보 수정');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>회원탈퇴</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <AuthContainer loginRequired appToken={accessToken}>\n        <LeaveContainer />\n      </AuthContainer>\n\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n\nexport const getServerSideProps = getWebviewServerSideProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/my-kurly-style/index.tsx","import { useRouter } from 'next/router';\n\nimport { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport MyKurlyStyle from '../../../../src/mypage/my-kurly-style/shared/containers/MyKurlyStyle';\nimport { redirectTo } from '../../../../src/shared/reducers/page';\nimport {\n  getPageUrl,\n  USER_MENU_PATH,\n} from '../../../../src/shared/constant';\nimport { clearRecommendProduct } from '../../../../src/mypage/my-kurly-style/slice';\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { amplitudeService, ScreenName } from '../../../../src/shared/amplitude';\nimport { BADGE_KEY, updateReadBadge } from '../../../../src/shared/api';\nimport { useAppSelector } from '../../../../src/shared/store';\nimport {\n  SelectBackButton,\n} from '../../../../src/shared/amplitude/events/mykurly-style/SelectBackButton';\n\nexport default function MyKurlyStylePage() {\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n  const { userNotification: { badge } } = useAppSelector(({ header }) => header);\n\n  useScreenName(ScreenName.MY_KURLY_STYLE);\n\n  const router = useRouter();\n\n  const dispatch  = useDispatch();\n\n  useEffect(() => {\n    dispatch(clearRecommendProduct());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!hasSession || !badge.profile) {\n      return;\n    }\n\n    updateReadBadge(BADGE_KEY.profile_badge);\n  }, [badge.profile, hasSession]);\n\n  const clickCloseButton = () => {\n    void amplitudeService.logEvent(new SelectBackButton({ selectionType: 'back_button' }));\n    dispatch(redirectTo({ url: getPageUrl(USER_MENU_PATH.mykurly) }));\n  };\n\n  return (router.isReady && (\n    <AuthContainer loginRequired>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton onClick={clickCloseButton}/>\n        </HeaderButtons>\n        <HeaderTitle>나의 컬리 스타일</HeaderTitle>\n      </MobileHeader>\n      <MyKurlyStyle />\n    </AuthContainer>\n  ));\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/my-kurly-style/profile.tsx","import { useRouter } from 'next/router';\n\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\n\nimport ProfileContainer from '../../../../src/mypage/my-kurly-style/m/containers/ProfileContainer';\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nexport default function MyKurlyStyleProfilePage() {\n  useScreenName(ScreenName.MY_KURLY_STYLE);\n  const router = useRouter();\n\n  return (router.isReady && (\n    <AuthContainer loginRequired>\n      <ProfileContainer />\n    </AuthContainer>\n  ));\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/my-kurly-style/success.tsx","import { useRouter } from 'next/router';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useEffect } from 'react';\n\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport SaveSuccessful from '../../../../src/mypage/my-kurly-style/shared/containers/SaveSuccessful';\nimport CloseButton from '../../../../src/shared/components/Button/CloseButton';\nimport { redirectTo } from '../../../../src/shared/reducers/page';\nimport { getPageUrl, USER_MENU_PATH } from '../../../../src/shared/constant';\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { amplitudeService, ScreenName } from '../../../../src/shared/amplitude';\nimport {\n  SubmitProfileSuccess,\n} from '../../../../src/shared/amplitude/events/mykurly-style';\n\nexport default function MyKurlyStyleSuccessPage() {\n  useScreenName(ScreenName.PROFILE_SETTING_SUCCESS);\n\n  const router = useRouter();\n\n  const dispatch  = useDispatch();\n\n  const clickCloseButton = () => {\n    dispatch(redirectTo({ url: getPageUrl(USER_MENU_PATH.mykurly) }));\n  };\n\n  useEffect(() => {\n    void amplitudeService.logEvent(new SubmitProfileSuccess());\n  }, []);\n\n  return ( router.isReady && (\n    <AuthContainer loginRequired>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={clickCloseButton} />\n        </HeaderButtons>\n        <HeaderTitle>나의 컬리 스타일</HeaderTitle>\n      </MobileHeader>\n      <SaveSuccessful />\n    </AuthContainer>\n  ));\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/next-grade/index.tsx","import { useEffect } from 'react';\n\nimport { useRouter } from 'next/router';\n\nimport {\n  getWebviewServerSideProps,\n  WebviewServerSideProps,\n} from '../../../../src/server/webview';\nimport { useScreenName, useWebview } from '../../../../src/shared/hooks';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport AuthContainer\n  from '../../../../src/shared/components/Auth/AuthContainer';\nimport NextGradeContainer\n  from '../../../../src/mypage/next-grade/containers/NextGradeContainer';\nimport { isWebview } from '../../../../util/window/getDevice';\nimport appService from '../../../../src/shared/services/app.service';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nexport default function NextGrade({ accessToken }: WebviewServerSideProps) {\n  useScreenName(ScreenName.MEMBERSHIP_BENEFIT);\n\n  const router = useRouter();\n  const webview = useWebview();\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('등급별 혜택');\n    }\n  }, []);\n\n  return router.isReady && (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>다음달 나의 예상 등급</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <AuthContainer loginRequired appToken={accessToken}>\n        <NextGradeContainer />\n      </AuthContainer>\n\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n\nexport const getServerSideProps = getWebviewServerSideProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/order/[orderNo].tsx","import { useRouter } from 'next/router';\n\nimport { useEffect } from 'react';\n\nimport { ParsedUrlQuery } from 'querystring';\n\nimport MobileHeader\n  from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons\n  from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport AuthContainer\n  from '../../../../src/shared/components/Auth/AuthContainer';\nimport OrderDetailContainer\n  from '../../../../src/mypage/order/m/detail/containers/OrderDetailContainer';\nimport { useWebview } from '../../../../src/shared/hooks/useWebview';\nimport { getWebviewServerSideProps } from '../../../../src/server/webview';\nimport { isWebview } from '../../../../util/window/getDevice';\nimport appService from '../../../../src/shared/services/app.service';\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\ninterface Props {\n  accessToken: string;\n}\n\nexport default function MypageOrderPage({ accessToken }: Props) {\n  useScreenName(ScreenName.ORDER_SHEET_DETAIL);\n\n  const webview = useWebview();\n  const router = useRouter();\n  const { query } = router;\n\n  const { orderNo } = query as ParsedUrlQuery & { orderNo: string; };\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('주문 내역 상세');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>주문 내역 상세</HeaderTitle>\n        </MobileHeader>\n      )}\n      <AuthContainer loginRequired appToken={accessToken}>\n        <OrderDetailContainer orderNo={orderNo} />\n      </AuthContainer>\n    </>\n  );\n}\n\nexport const getServerSideProps = getWebviewServerSideProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/order/delivery-tracking.tsx","import { useRouter } from 'next/router';\n\nimport { useEffect } from 'react';\n\nimport { ParsedUrlQuery } from 'querystring';\nimport { isWebview } from '../../../../util/window/getDevice';\n\nimport appService from '../../../../src/shared/services/app.service';\nimport { useWebview } from '../../../../src/shared/hooks';\nimport { MYPAGE_PATH } from '../../../../src/shared/constant';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport DeliveryTracker from '../../../../src/mypage/order/shared/components/delivary-tracking/DeliveryTracker';\n\nexport default function DeliveryTracingPage() {\n  const { query } = useRouter();\n  const webview = useWebview();\n\n  const { invoiceNo, extraCourierCode } = query as ParsedUrlQuery & { invoiceNo: string; extraCourierCode: string; };\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle(MYPAGE_PATH.deliveryTracking.name);\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>{MYPAGE_PATH.deliveryTracking.name}</HeaderTitle>\n        </MobileHeader>\n      )}\n      <DeliveryTracker invoiceNo={invoiceNo} extraCourierCode={extraCourierCode} />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/order/index.tsx","import { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButton from '../../../../src/shared/components/Button/CartButton';\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\nimport OrderListContainer from '../../../../src/mypage/order/m/list/containers/OrderListContainer';\nimport { useCartButton } from '../../../../src/shared/hooks/useCartButton';\n\nexport default function MypageOrderPage() {\n  useScreenName(ScreenName.ORDER_HISTORY);\n\n  const { moveCart, basketCount } = useCartButton();\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>주문 내역</HeaderTitle>\n        <HeaderButtons position=\"right\">\n          <CartButton count={basketCount} onClick={moveCart} color=\"black\" />\n        </HeaderButtons>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <OrderListContainer />\n      </AuthContainer>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/order/cancel/fail.tsx","import { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nimport { isWebview } from '../../../../../util/window/getDevice';\nimport appService from '../../../../../src/shared/services/app.service';\n\nimport CloseButton from '../../../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport CancelFailContainer from '../../../../../src/mypage/order/m/cancel/containers/CancelFailContainer';\n\nexport default function OrderCancelFailPage() {\n  const router = useRouter();\n\n  const moveDetailPage = () => {\n    router.back();\n  };\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('주문 취소 실패');\n    }\n  }, []);\n\n  if (isWebview()) {\n    return <CancelFailContainer />;\n  }\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={moveDetailPage} />\n        </HeaderButtons>\n        <HeaderTitle>주문 취소 실패</HeaderTitle>\n      </MobileHeader>\n      <CancelFailContainer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/order/cancel/index.tsx","import { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nimport { isWebview } from '../../../../../util/window/getDevice';\nimport appService from '../../../../../src/shared/services/app.service';\n\nimport CloseButton from '../../../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport AuthContainer from '../../../../../src/shared/components/Auth/AuthContainer';\nimport CancelContainer from '../../../../../src/mypage/order/m/cancel/containers/CancelContainer';\n\nexport default function OrderCancelPage() {\n  const router = useRouter();\n\n  const moveDetailPage = () => {\n    router.back();\n  };\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('주문 취소');\n    }\n  }, []);\n\n  if (isWebview()) {\n    return (\n      <AuthContainer loginRequired>\n        <CancelContainer />\n      </AuthContainer>\n    );\n  }\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={moveDetailPage} />\n        </HeaderButtons>\n        <HeaderTitle>주문 취소</HeaderTitle>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <CancelContainer />\n      </AuthContainer>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/order/cancel/success.tsx","import { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nimport { isWebview } from '../../../../../util/window/getDevice';\nimport appService from '../../../../../src/shared/services/app.service';\n\nimport CloseButton from '../../../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport CancelSuccessContainer from '../../../../../src/mypage/order/m/cancel/containers/CancelSuccessContainer';\n\nexport default function OrderCancelSuccessPage() {\n  const router = useRouter();\n\n  const moveDetailPage = () => {\n    router.back();\n  };\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('주문 취소 완료');\n    }\n  }, []);\n\n  if (isWebview()) {\n    return <CancelSuccessContainer />;\n  }\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={moveDetailPage} />\n        </HeaderButtons>\n        <HeaderTitle>주문 취소 완료</HeaderTitle>\n      </MobileHeader>\n      <CancelSuccessContainer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/pick/list.tsx","import { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\nimport { useAppSelector } from '../../../../src/shared/store';\nimport { loadPickedProducts } from '../../../../src/mypage/pick/slice';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport DeliveryLocationContainer from '../../../../src/header/containers/m/DeliveryLocationContainer';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\nimport AuthContainer\n  from '../../../../src/shared/components/Auth/AuthContainer';\nimport PickProductsContainer\n  from '../../../../src/mypage/pick/m/containers/PickProductsContainer';\n\nexport default function PickListPage() {\n  useScreenName(ScreenName.PICK_LIST);\n\n  const dispatch = useDispatch();\n\n  const { isGuest } = useAppSelector(({ auth }) => auth);\n\n  useEffect(() => {\n    if (!isGuest) {\n      dispatch(loadPickedProducts());\n    }\n  }, [dispatch, isGuest]);\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>찜한 상품</HeaderTitle>\n        <HeaderButtons position=\"right\">\n          <DeliveryLocationContainer />\n          <CartButtonContainer />\n        </HeaderButtons>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <PickProductsContainer />\n      </AuthContainer>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/review/form.tsx","import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\nimport Alert from '../../../../src/shared/components/Alert/Alert';\n\nimport RegistrationForm from '../../../../src/mypage/review/m/RegistrationForm';\nimport ModificationForm from '../../../../src/mypage/review/m/ModificationForm';\n\nexport default function ReviewFormPage() {\n  const [touched, setTouched] = useState(false);\n  const router = useRouter();\n  const { isReady, query } = router;\n  const { order, deal, contents, review } = query;\n\n  const orderNo = Number(order);\n  const dealProductNo = Number(deal);\n  const contentsProductNo = Number(contents);\n  const reviewNo = Number(review);\n  const isNewReview = !Boolean(reviewNo);\n\n  useEffect(() => {\n    const listener = (event: MouseEvent) => event.preventDefault();\n    addEventListener('contextmenu', listener);\n    return () => removeEventListener('contextmenu', listener);\n  }, []);\n\n  function handleClick() {\n    if (!touched) {\n      router.back();\n      return;\n    }\n\n    const writingMode = isNewReview ? '작성' : '수정';\n    const text = `${writingMode}화면을 나가실건가요?\\n${writingMode}하신 내용은 저장되지 않습니다.`;\n\n    Alert({ text, showCancelButton: true }).then(({ isDismissed }) => {\n      if (isDismissed) {\n        return;\n      }\n\n      router.back();\n    });\n  }\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton onClick={handleClick} />\n        </HeaderButtons>\n        <HeaderTitle>{isNewReview ? '후기 작성' : '후기 수정'}</HeaderTitle>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        {isReady ? (\n          isNewReview ? (\n            <RegistrationForm\n              orderNo={orderNo}\n              dealProductNo={dealProductNo}\n              contentsProductNo={contentsProductNo}\n              touched={touched}\n              setTouched={setTouched}\n            />\n          ) : (\n            <ModificationForm\n              contentsProductNo={contentsProductNo}\n              reviewNo={reviewNo}\n              touched={touched}\n              setTouched={setTouched}\n            />\n          )\n        ) : null}\n      </AuthContainer>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/review/index.tsx","import { useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport DeliveryLocationContainer from '../../../../src/header/containers/m/DeliveryLocationContainer';\nimport CartButton from '../../../../src/shared/components/Button/CartButton';\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\nimport { useAppSelector } from '../../../../src/shared/store';\nimport { useCartButton } from '../../../../src/shared/hooks/useCartButton';\n\nimport { TabProvider } from '../../../../src/mypage/review/context/tab-context';\nimport {\n  Tabs,\n  TabList,\n  Tab,\n  TabPanels,\n  TabPanel,\n} from '../../../../src/mypage/review/m/styled-components';\n\nconst WritableReviewPanel = dynamic(\n  () => import('../../../../src/mypage/review/m/WritableReviewPanel'),\n  { ssr: false },\n);\nconst WrittenReviewPanel = dynamic(\n  () => import('../../../../src/mypage/review/m/WrittenReviewPanel'),\n  { ssr: false },\n);\n\nexport default function MypageReviewPage() {\n  const queryClient = useQueryClient();\n  const { basketCount, moveCart } = useCartButton();\n\n  const { topBanner: { title } } = useAppSelector(({ header }) => header);\n  const isBanner = !!title;\n\n  useEffect(() => {\n    queryClient.invalidateQueries(['my-page', 'review']);\n  }, []);\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>상품 후기</HeaderTitle>\n        <HeaderButtons position=\"right\">\n          <DeliveryLocationContainer />\n          <CartButton count={basketCount} onClick={moveCart} color=\"black\" />\n        </HeaderButtons>\n      </MobileHeader>\n      <AuthContainer loginRequired>\n        <TabProvider>\n          {({ tabIndex, setTabIndex }) => (\n            <Tabs tabIndex={tabIndex} onChange={(index) => setTabIndex(index)}>\n              <TabList isBanner={isBanner}>\n                <Tab>작성 가능 후기</Tab>\n                <Tab>작성한 후기</Tab>\n              </TabList>\n              <TabPanels isBanner={isBanner}>\n                <TabPanel>\n                  <WritableReviewPanel />\n                </TabPanel>\n                <TabPanel>\n                  <WrittenReviewPanel />\n                </TabPanel>\n              </TabPanels>\n            </Tabs>\n          )}\n        </TabProvider>\n      </AuthContainer>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/mypage/service-center/index.tsx","import { useEffect } from 'react';\n\nimport { useScreenName, useWebview } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\n\nimport ServiceCenterContainer from '../../../../src/mypage/service-center/containers/ServiceCenterContainer';\nimport { isWebview } from '../../../../util/window/getDevice';\nimport appService from '../../../../src/shared/services/app.service';\nimport UserMenu from '../../../../src/shared/components/layouts/UserMenu';\n\nexport default function ServiceCenterPage() {\n  const webview = useWebview();\n\n  useScreenName(ScreenName.SERVICE_CENTER);\n\n  useEffect(() => {\n    if (isWebview()) {\n      appService.changeTitle('고객센터');\n    }\n  }, []);\n\n  return (\n    <>\n      {!webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>고객센터</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <CartButtonContainer />\n          </HeaderButtons>\n        </MobileHeader>\n      )}\n\n      <ServiceCenterContainer />\n\n      {!webview && (\n        <UserMenu />\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/index.tsx","import { useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useAppSelector } from '../../../../src/shared/store';\nimport { initialState, setValue } from '../../../../src/order/checkout/shared/reducers/checkout.slice';\nimport {\n  initialState as initialPaymentsState,\n  setValue as setPaymentsValue,\n} from '../../../../src/order/shared/shared/reducers/payments.slice';\n\nimport ProductsContainer from '../../../../src/order/checkout/m/containers/ProductsContainer';\nimport OrdererContainer from '../../../../src/order/checkout/m/containers/OrdererContainer';\nimport PackagingMethodContainer from '../../../../src/order/checkout/m/containers/PackagingMethodContainer';\nimport PaymentMethodsContainer from '../../../../src/order/shared/m/containers/PaymentMethodsContainer';\nimport CouponsContainer from '../../../../src/order/checkout/m/containers/CouponsContainer';\nimport PointContainer from '../../../../src/order/checkout/m/containers/PointContainer';\nimport BannerContainer from '../../../../src/order/checkout/shared/containers/BannerContainer';\nimport CheckoutContainer from '../../../../src/order/checkout/m/containers/CheckoutContainer';\nimport DeliveryNoticeContainer from '../../../../src/order/checkout/m/containers/DeliveryNoticeContainer';\nimport TermsContainer from '../../../../src/order/checkout/m/containers/TermsContainer';\nimport PriceContainer from '../../../../src/order/checkout/m/containers/PriceContainer';\nimport PickupContainer from '../../../../src/order/checkout/m/containers/PickupContainer';\n\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport KakaoLink from '../../../../src/order/shared/m/components/KakaoLink/KakaoLink';\nimport PaymentsLoading from '../../../../src/order/checkout/shared/components/PaymentsLoading';\n\nimport { Panel } from '../../../../src/shared/components/Panel';\nimport { Divider } from '../../../../src/shared/components/Divider/Divider';\nimport ShippingContainer from '../../../../src/order/checkout/m/containers/ShippingContainer';\nimport LoadingCollapse from '../../../../src/order/checkout/m/components/Loading/LoadingCollapse';\n\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nexport default function OrderPage() {\n  useScreenName(ScreenName.ORDER_SHEET);\n\n  const dispatch = useDispatch();\n  const {\n    isKurlyPassOrder,\n    isPickupOrder,\n    hasNonDeliveryProduct,\n    reusablePackage: {\n      viewPackage,\n    },\n  } = useAppSelector(({ checkout }) => checkout);\n  const { isPaymentsLoading } = useAppSelector(({ payments }) => payments);\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n\n  const initOrderPage = useCallback(() => {\n    dispatch(setValue(initialState));\n    dispatch(setPaymentsValue(initialPaymentsState));\n  }, [dispatch]);\n\n  useEffect(() => {\n    initOrderPage();\n  }, [initOrderPage]);\n\n  return (\n    <>\n      {isPaymentsLoading && <PaymentsLoading />}\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <BackButton />\n        </HeaderButtons>\n        <HeaderTitle>주문서</HeaderTitle>\n      </MobileHeader>\n\n      <ProductsContainer />\n      {hasSession\n        ?\n        <OrdererContainer />\n        :\n        <>\n          <Divider />\n          <LoadingCollapse title={'주문자 정보'} />\n        </>}\n      {!isKurlyPassOrder && (\n        <>\n          <Divider />\n          <ShippingContainer />\n        </>\n      )}\n      {isPickupOrder && (\n        <>\n          <Divider />\n          <PickupContainer />\n        </>\n      )}\n      {!isKurlyPassOrder && viewPackage && (\n        <>\n          <PackagingMethodContainer />\n          <Divider />\n          <BannerContainer device=\"mobile\" />\n        </>\n      )}\n      <Divider />\n      <Panel\n        title=\"쿠폰 / 적립금\"\n        headerContent={<KakaoLink />}\n      >\n        <CouponsContainer />\n        <PointContainer />\n      </Panel>\n      <Divider />\n      <PaymentMethodsContainer />\n      <PriceContainer />\n      <Divider />\n      {!hasNonDeliveryProduct && (\n        <DeliveryNoticeContainer />\n      )}\n      <TermsContainer />\n      <CheckoutContainer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/cancel/kakao-pay.tsx","import KakaoPayCancelPage from '../../../../order/checkout/cancel/kakao-pay';\n\nexport default KakaoPayCancelPage;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/cancel/kurly-pass.tsx","import KurlyPassCancelPage from '../../../../order/checkout/cancel/kurly-pass';\n\nexport default KurlyPassCancelPage;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/cancel/mobilians.tsx","import MobiliansCancelPage from '../../../../order/checkout/cancel/mobilians';\n\nexport default MobiliansCancelPage;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/cancel/toss-payments.tsx","import TossPaymentsCancelPage from '../../../../order/checkout/cancel/toss-payments';\n\nexport default TossPaymentsCancelPage;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/cancel/toss.tsx","import TossCancelPage from '../../../../order/checkout/cancel/toss';\n\nexport default TossCancelPage;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/fail/index.tsx","import styled from '@emotion/styled';\n\nimport CloseButton\n  from '../../../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons\n  from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle\n  from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader\n  from '../../../../../src/shared/components/layouts/MobileHeader';\nimport FailContainer\n  from '../../../../../src/order/checkout/m/containers/FailContainer';\n\nconst Container = styled.div`\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nexport default function FailPage() {\n  const handleClickClose = () => {\n    window.location.assign('/');\n  };\n  return (\n    <Container>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={handleClickClose} />\n        </HeaderButtons>\n        <HeaderTitle>주문 실패</HeaderTitle>\n      </MobileHeader>\n      <FailContainer />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/fail/kurly-pass.tsx","import KurlyPassFailPage from '../../../../order/checkout/fail/kurly-pass';\n\nexport default KurlyPassFailPage;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/fail/pay-fail.tsx","import OrderFailContainer, { getServerSideMobiliansFailProps } from '../../../../../src/order/checkout/shared/containers/payments/fail/OrderFailContainer';\n\nexport default OrderFailContainer;\n\nexport const getServerSideProps = getServerSideMobiliansFailProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/fail/toss-payments.tsx","import TossPaymentsFailPage from '../../../../order/checkout/fail/toss-payments';\n\nexport default TossPaymentsFailPage;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/init/chai.tsx","import ChaiInitContainer from '../../../../order/checkout/init/chai';\n\nexport default function ChaiInitPage() {\n  return <ChaiInitContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/init/index.tsx","import PgInitContainer from '../../../../order/checkout/init';\n\nexport default function PgInitPage() {\n  return <PgInitContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/init/kurly-pass.tsx","import KurlyPassInitContainer from '../../../../order/checkout/init/kurly-pass';\n\nexport default function KurlyPassInitPage() {\n  return <KurlyPassInitContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/init/smile-pay.tsx","import SmilePayInitContainer from '../../../../order/checkout/init/smile-pay';\n\nexport default function SmilePayInitPage() {\n  return <SmilePayInitContainer />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/init/toss-payments.tsx","import TossPaymentsInitContainer from '../../../../order/checkout/init/toss-payments';\n\nexport default function TossPaymentsInitPage() {\n  return <TossPaymentsInitContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/process/chai.tsx","import ChaiProcessContainer from '../../../../../src/order/checkout/shared/containers/payments/process/ChaiProcessContainer';\n\nexport default function ChaiProcessPage() {\n  return <ChaiProcessContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/process/kakao-pay.tsx","import KakaoPayProcessContainer from '../../../../../src/order/checkout/shared/containers/payments/process/KakaoPayProcessContainer';\n\nexport default function KakaoPayProcessPage() {\n  return <KakaoPayProcessContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/process/kurly-pass.tsx","import KurlyPassProcessContainer, { getServerSideKurlyPassProps } from '../../../../../src/order/checkout/shared/containers/payments/process/KurlyPassProcessContainer';\nimport { TossPaymentsPostProcessPageProps } from '../../../../../src/shared/interfaces';\n\nexport default function KurlyPassProcessPage(props: TossPaymentsPostProcessPageProps) {\n  return <KurlyPassProcessContainer {...props} />;\n}\n\nexport const getServerSideProps = getServerSideKurlyPassProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/process/mobilians.tsx","import MobiliansProcessContainer, { getServerSideMobiliansProps } from '../../../../../src/order/checkout/shared/containers/payments/process/MobiliansProcessContainer';\nimport { PostProcessPageProps } from '../../../../../src/shared/interfaces';\n\nexport default function MobiliansProcessPage(props: PostProcessPageProps) {\n  return <MobiliansProcessContainer isMobilePage {...props} />;\n}\n\nexport const getServerSideProps = getServerSideMobiliansProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/process/naver-pay.tsx","import NaverPayProcessContainer from '../../../../../src/order/checkout/shared/containers/payments/process/NaverPayProcessContainer';\n\nexport default function NaverPayProcessPage() {\n  return <NaverPayProcessContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/process/payco.tsx","import PaycoProcessContainer from '../../../../../src/order/checkout/shared/containers/payments/process/PaycoProcessContainer';\n\nexport default function PaycoProcessPage() {\n  return <PaycoProcessContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/process/smile-pay.tsx","import SmilePayProcessContainer, { getServerSideSmilePayProps } from '../../../../../src/order/checkout/shared/containers/payments/process/SmilePayProcessContainer';\nimport { PostProcessPageProps } from '../../../../../src/shared/interfaces';\n\nexport default function SmilePayProcessPage(props: PostProcessPageProps) {\n  return <SmilePayProcessContainer isMobilePage {...props} />;\n}\n\nexport const getServerSideProps = getServerSideSmilePayProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/process/toss-payments.tsx","import TossPaymentsProcessContainer, { getServerSideTossPaymentsProps } from '../../../../../src/order/checkout/shared/containers/payments/process/TossPaymentsProcessContainer';\n\nexport default TossPaymentsProcessContainer;\n\nexport const getServerSideProps = getServerSideTossPaymentsProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/process/toss.tsx","import TossProcessContainer from '../../../../../src/order/checkout/shared/containers/payments/process/TossProcessContainer';\n\nexport default function TossProcessPage() {\n  return <TossProcessContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/receiver-details/index.tsx","import { useRouter } from 'next/router';\n\nimport CloseButton from '../../../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport ReceiverDetailsContainer from '../../../../../src/order/checkout/shared/containers/ReceiverDetailsContainer';\n\nimport { useAppSelector } from '../../../../../src/shared/store';\n\nexport default function ReceiverDetailsPage() {\n  const router = useRouter();\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n\n  const moveBack = () => {\n    router.back();\n  };\n\n  return (\n    <>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={moveBack} />\n        </HeaderButtons>\n        <HeaderTitle>배송 정보</HeaderTitle>\n      </MobileHeader>\n      {hasSession && (\n        <ReceiverDetailsContainer />\n      )}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/success/index.tsx","import styled from '@emotion/styled';\n\nimport CloseButton from '../../../../../src/shared/components/Button/CloseButton';\nimport HeaderButtons from '../../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../../../src/shared/components/layouts/MobileHeader';\nimport SuccessContainer from '../../../../../src/order/checkout/m/containers/SuccessContainer';\n\nconst Container = styled.div`\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nexport default function SuccessPage() {\n  const handleClickClose = () => {\n    window.location.assign('/');\n  };\n\n  return (\n    <Container>\n      <MobileHeader>\n        <HeaderButtons position=\"left\">\n          <CloseButton onClick={handleClickClose} />\n        </HeaderButtons>\n        <HeaderTitle>주문 완료</HeaderTitle>\n      </MobileHeader>\n      <SuccessContainer />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/success/kurly-pass.tsx","import KurlyPassSuccessContainer from '../../../../../src/order/checkout/shared/containers/payments/success/KurlyPassSuccessContainer';\n\nexport default function KurlyPassSuccessPage() {\n  return <KurlyPassSuccessContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/success/kurly.tsx","import KurlySuccessContainer from '../../../../order/checkout/success/kurly';\n\nexport default function KurlyInitPage() {\n  return <KurlySuccessContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/checkout/success/toss-payments.tsx","import TossPaymentsSuccessContainer from '../../../../../src/order/checkout/shared/containers/payments/success/TossPaymentsSuccessContainer';\n\nexport default function TossPaymentsSuccessPage() {\n  return <TossPaymentsSuccessContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/cancel/kakao-pay.tsx","import OrderCancelContainer from '../../../../../src/order/checkout/shared/containers/payments/cancel/OrderCancelContainer';\n\nexport default function KakaoPayCancelPage() {\n  return (\n    <OrderCancelContainer isGift/>\n  );\n}\n\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/cancel/mobilians.tsx","import OrderCancelContainer from '../../../../../src/order/checkout/shared/containers/payments/cancel/OrderCancelContainer';\n\nexport default function MobiliansCancelPage() {\n  return (\n    <OrderCancelContainer isGift/>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/cancel/toss-payments.tsx","import OrderCancelContainer from '../../../../../src/order/checkout/shared/containers/payments/cancel/OrderCancelContainer';\n\nexport default function TossPaymentsCancelPage() {\n  return (\n    <OrderCancelContainer isGift/>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/cancel/toss.tsx","import OrderCancelContainer from '../../../../../src/order/checkout/shared/containers/payments/cancel/OrderCancelContainer';\n\nexport default function TossCancelPage() {\n  return (\n    <OrderCancelContainer isGift/>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/fail/pay-fail.tsx","import OrderFailContainer, { getServerSideMobiliansFailProps } from '../../../../../src/order/checkout/shared/containers/payments/fail/OrderFailContainer';\n\nexport default function OrderFailPageContainer() {\n  return <OrderFailContainer isGift/>;\n}\n\nexport const getServerSideProps = getServerSideMobiliansFailProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/fail/toss-payments.tsx","import TossPaymentsFailPage from '../../../../order/checkout/fail/toss-payments';\n\nexport default function TossPaymentsFailPageContainer() {\n  return <TossPaymentsFailPage isGift/>;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/init/chai.tsx","import ChaiInitContainer from '../../../../order/checkout/init/chai';\n\nexport default function ChaiInitPage() {\n  return <ChaiInitContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/init/index.tsx","import PgInitContainer from '../../../../order/checkout/init';\n\nexport default function PgInitPage() {\n  return <PgInitContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/init/smile-pay.tsx","import SmilePayInitContainer from '../../../../order/checkout/init/smile-pay';\n\nexport default function SmilePayInitPage() {\n  return <SmilePayInitContainer />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/init/toss-payments.tsx","import TossPaymentsInitContainer from '../../../../order/checkout/init/toss-payments';\n\nexport default function TossPaymentsInitPage() {\n  return <TossPaymentsInitContainer isMobilePage />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/process/chai.tsx","import ChaiProcessContainer from '../../../../../src/order/checkout/shared/containers/payments/process/ChaiProcessContainer';\n\nexport default function ChaiProcessPage() {\n  return <ChaiProcessContainer isMobilePage isGift/>;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/process/kakao-pay.tsx","import KakaoPayProcessContainer from '../../../../../src/order/checkout/shared/containers/payments/process/KakaoPayProcessContainer';\n\nexport default function KakaoPayProcessPage() {\n  return <KakaoPayProcessContainer isMobilePage isGift/>;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/process/mobilians.tsx","import MobiliansProcessContainer, { getServerSideMobiliansProps } from '../../../../../src/order/checkout/shared/containers/payments/process/MobiliansProcessContainer';\nimport { PostProcessPageProps } from '../../../../../src/shared/interfaces';\n\nexport default function MobiliansProcessPage(props: PostProcessPageProps) {\n  return <MobiliansProcessContainer isMobilePage {...props} isGift/>;\n}\n\nexport const getServerSideProps = getServerSideMobiliansProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/process/naver-pay.tsx","import NaverPayProcessContainer from '../../../../../src/order/checkout/shared/containers/payments/process/NaverPayProcessContainer';\n\nexport default function NaverPayProcessPage() {\n  return <NaverPayProcessContainer isMobilePage isGift/>;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/process/payco.tsx","import PaycoProcessContainer from '../../../../../src/order/checkout/shared/containers/payments/process/PaycoProcessContainer';\n\nexport default function PaycoProcessPage() {\n  return <PaycoProcessContainer isMobilePage isGift/>;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/process/smile-pay.tsx","import SmilePayProcessContainer, { getServerSideSmilePayProps } from '../../../../../src/order/checkout/shared/containers/payments/process/SmilePayProcessContainer';\nimport { PostProcessPageProps } from '../../../../../src/shared/interfaces';\n\nexport default function SmilePayProcessPage(props: PostProcessPageProps) {\n  return <SmilePayProcessContainer isMobilePage {...props} isGift/>;\n}\n\nexport const getServerSideProps = getServerSideSmilePayProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/process/toss-payments.tsx","import TossPaymentsProcessContainer, { getServerSideTossPaymentsProps } from '../../../../../src/order/checkout/shared/containers/payments/process/TossPaymentsProcessContainer';\nimport { TossPaymentsPostProcessPageProps } from '../../../../../src/shared/interfaces';\n\nexport default function TossPaymentsProcessPage(props: TossPaymentsPostProcessPageProps) {\n  return <TossPaymentsProcessContainer {...props} isGift/>;\n}\n\nexport const getServerSideProps = getServerSideTossPaymentsProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/process/toss.tsx","import TossProcessContainer from '../../../../../src/order/checkout/shared/containers/payments/process/TossProcessContainer';\n\nexport default function TossProcessPage() {\n  return <TossProcessContainer isMobilePage isGift/>;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/success/kurly.tsx","import KurlySuccessContainer from '../../../../order/checkout/success/kurly';\n\nexport default function KurlyInitPage() {\n  return <KurlySuccessContainer isMobilePage isGift />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/order/gift/success/toss-payments.tsx","import TossPaymentsSuccessContainer from '../../../../../src/order/checkout/shared/containers/payments/success/TossPaymentsSuccessContainer';\n\nexport default function TossPaymentsSuccessPage() {\n  return <TossPaymentsSuccessContainer isMobilePage isGift />;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/search/index.tsx","import { useDispatch, useSelector } from 'react-redux';\n\nimport { useEffect, useState } from 'react';\n\nimport { isEmpty } from 'lodash';\n\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nimport {\n  useSearchListPageQueryParams,\n} from '../../../src/search/hooks/useSearchListPageQueryParams';\n\nimport SearchContainer from '../../../src/search/components/Search';\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\nimport ScrollEventTopButton\n  from '../../../src/shared/components/Scroll/ScrollEventTopButton';\nimport MainSiteProvider\n  from '../../../src/main/components/shared/MainSiteProvider';\n\nimport { AppState } from '../../../src/shared/store';\n\nimport { branchService } from '../../../src/shared/branch';\nimport { Search } from '../../../src/shared/branch/events';\nimport {\n  initializeFilterId,\n} from '../../../src/product/list/shared/util/initializeFilterId';\nimport { setFilterId } from '../../../src/product/list/slice';\nimport {\n  productListSetScreenName,\n} from '../../../src/product/list/shared/util/productListSetScreenName';\n\nexport default function SearchPage() {\n  useScreenName(ScreenName.SEARCH);\n  const dispatch = useDispatch();\n  const { accessToken } = useSelector(({ auth }: AppState) => auth);\n\n  const { site, sword, filters: urlBasedFilter } = useSearchListPageQueryParams();\n  const [isFocus, setIsFocus] = useState(false);\n\n  useEffect(() => {\n    if (isEmpty(sword) || !accessToken) {\n      return;\n    }\n\n    const filterId = initializeFilterId(urlBasedFilter);\n\n    dispatch(setFilterId(filterId));\n    productListSetScreenName(sword, 'search');\n\n    branchService.logEvent(\n      new Search({\n        searchQuery: sword,\n      }),\n    );\n  }, [accessToken, sword, dispatch, urlBasedFilter]);\n\n  const handleFocusInOut = (value: boolean) => {\n    setIsFocus(value);\n  };\n\n  return (\n    <MainSiteProvider site={site}>\n      <ScrollEventTopButton>\n        <SearchContainer site={site} sword={sword} onFocusInOut={handleFocusInOut} />\n      </ScrollEventTopButton>\n      {!isFocus && <UserMenu />}\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/user-guide/index.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../src/shared/constant/colorset';\nimport { useScreenName, useWebview } from '../../../src/shared/hooks';\n\nimport BackButton from '../../../src/shared/components/Button/BackButton';\nimport HeaderTitle from '../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../src/shared/components/layouts/MobileHeader';\nimport HeaderButtons from '../../../src/shared/components/layouts/HeaderButtons';\nimport UserGuideContainer from '../../../src/user-guide/components/m/UserGuideContainer';\nimport UserMenu from '../../../src/shared/components/layouts/UserMenu';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nconst Container = styled.div`\n  background-color: ${COLOR.bg};\n  padding-bottom: 22px;\n`;\n\nexport default function UserGuidePage() {\n  useScreenName(ScreenName.SERVICE_GUIDE);\n  const webview = useWebview();\n  return (\n    <>\n      {!webview &&\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>이용안내</HeaderTitle>\n        </MobileHeader>\n      }\n      <Container>\n        <UserGuideContainer />\n      </Container>\n      {!webview && <UserMenu />}\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/user-terms/agreement/index.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\nimport { useWebview } from '../../../../src/shared/hooks';\n\nimport HomeTabs from '../../../../src/shared/components/layouts/HomeTabs';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport UserTermsView from '../../../../src/user-terms/components/UserTermsView';\nimport SelectBox from '../../../../src/shared/components/Input/SelectBox';\nimport DeliveryLocationContainer from '../../../../src/header/containers/m/DeliveryLocationContainer';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\n\nimport useUserTerms from '../../../../src/user-terms/hooks/useUserTerms';\n\nconst Container = styled.div`\n  margin: 0;\n  padding-bottom: 10px 0 70px 0;\n  background-color: ${COLOR.bg};\n`;\n\nconst AgreementLayout = styled.div`\n  padding: 10px 0 70px;\n  color: ${COLOR.kurlyGray800};\n  line-height: 1.5;\n  letter-spacing: 0;\n`;\n\nexport default function AgreementPage() {\n  const webview = useWebview();\n  const { details, value, options, handleChange } = useUserTerms('agreement');\n\n  return (\n    <>\n      { !webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>이용약관</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <DeliveryLocationContainer />\n            <CartButtonContainer />\n          </HeaderButtons>\n          <HomeTabs />\n        </MobileHeader>\n      )}\n\n      <Container>\n        <AgreementLayout>\n          <UserTermsView\n            isMobile\n            html={details ?? ''}\n          />\n          <SelectBox\n            name={'agreement'}\n            value={value ?? ''}\n            options={options}\n            onChange={handleChange}\n          />\n        </AgreementLayout>\n      </Container>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/user-terms/privacy-policy/index.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\nimport { useWebview } from '../../../../src/shared/hooks';\n\nimport HomeTabs from '../../../../src/shared/components/layouts/HomeTabs';\nimport BackButton from '../../../../src/shared/components/Button/BackButton';\nimport HeaderButtons from '../../../../src/shared/components/layouts/HeaderButtons';\nimport HeaderTitle from '../../../../src/shared/components/layouts/HeaderTitle';\nimport MobileHeader from '../../../../src/shared/components/layouts/MobileHeader';\nimport UserTermsView from '../../../../src/user-terms/components/UserTermsView';\nimport SelectBox from '../../../../src/shared/components/Input/SelectBox';\nimport DeliveryLocationContainer from '../../../../src/header/containers/m/DeliveryLocationContainer';\nimport CartButtonContainer from '../../../../src/shared/containers/m/CartButtonContainer';\n\nimport useUserTerms from '../../../../src/user-terms/hooks/useUserTerms';\n\nconst Container = styled.div`\n  margin: 0;\n  padding-bottom: 10px 0 70px 0;\n  background-color: ${COLOR.bg};\n`;\n\nconst PolicyLayout = styled.div`\n  padding: 10px 0 70px;\n  color: ${COLOR.kurlyGray800};\n  line-height: 1.5;\n  letter-spacing: 0;\n`;\n\nexport default function PrivacyPolicyPage() {\n  const webview = useWebview();\n  const { details, value, options, handleChange } = useUserTerms('privacyPolicy');\n\n  return (\n    <>\n      { !webview && (\n        <MobileHeader>\n          <HeaderButtons position=\"left\">\n            <BackButton />\n          </HeaderButtons>\n          <HeaderTitle>개인정보처리방침</HeaderTitle>\n          <HeaderButtons position=\"right\">\n            <DeliveryLocationContainer />\n            <CartButtonContainer />\n          </HeaderButtons>\n          <HomeTabs />\n        </MobileHeader>\n      )}\n\n      <Container>\n        <PolicyLayout>\n          <UserTermsView\n            isMobile\n            html={details ?? ''}\n          />\n          <SelectBox\n            name={'privacyPolicy'}\n            value={value ?? ''}\n            options={options}\n            onChange={handleChange}\n          />\n        </PolicyLayout>\n      </Container>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/goods/description.tsx","import { useEffect, useState } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { StorageType } from '../../../../src/shared/enums';\nimport { ProductInfoDictionaryItem } from '../../../../src/product/detail/types';\nimport {\n  ProductDetailContentData,\n} from '../../../../src/shared/api/product/product';\n\nimport {\n  buildSupportedDeliveryInfo,\n} from '../../../../src/product/detail/shared/utils/deliveryTextBuilder';\n\nimport InfoList\n  from '../../../../src/product/detail/m/components/ATF/info-list/InfoList';\nimport ZoomImageList\n  from '../../../../src/product/detail/m/components/detail-information/zoom-image/ZoomImageList';\nimport DetailDescription\n  from '../../../../src/product/detail/m/components/description/DetailDescription';\nimport WhyKurly\n  from '../../../../src/product/detail/m/components/description/WhyKurly';\nimport EventBanner\n  from '../../../../src/product/detail/m/components/description/EventBanner';\nimport {\n  getPartnerContentWithCamelCase,\n} from '../../../../src/product/service/product.service';\nimport appService from '../../../../src/shared/services/app.service';\nimport { isAos } from '../../../../util/window/getDevice';\nimport GiftDeliveryNotice\n  from '../../../../src/product/detail/shared/GiftDeliveryNotice';\n\nexport interface ProductInfoData {\n  afterSaleServiceInfo: {\n    contact_number: string;\n    information: string;\n  };\n  soldOutText: string;\n  todayBrix: string | null;\n  guides: string[];\n  notSalesText: string;\n  salesUnit: string | null;\n  volume: string | null;\n  storageTypes: StorageType[];\n  deliveryTypeNames: string[];\n  productOrigin: string | null;\n  allergy: string | null;\n  expirationDate: string | null;\n  extraInfos: {\n    title: string;\n    description: string;\n  }[];\n  isOnlyAdult: boolean;\n  contentHtmlData: string;\n  legacyPiImages: string[];\n  legacyEventBanner: string | null;\n  content: ProductDetailContentData[];\n  isGiftable: boolean;\n}\n\ndeclare global {\n  interface Window {\n    productInfoData?: string;\n  }\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport default function ProductDescriptionPage() {\n  const [productInfo, setProductInfo] = useState<ProductInfoData>();\n\n  useEffect(() => {\n    if (isAos) {\n      const data = appService.loadProductDetailDescription();\n      setProductInfo(JSON.parse(data));\n      return;\n    }\n\n    setProductInfo(window.productInfoData ? JSON.parse(window.productInfoData) : null);\n  }, []);\n\n  if (!productInfo) {\n    return <Container />;\n  }\n\n  const {\n    afterSaleServiceInfo, soldOutText, todayBrix, guides, notSalesText, salesUnit,\n    volume, storageTypes, deliveryTypeNames, productOrigin, allergy, expirationDate,\n    extraInfos, isOnlyAdult, contentHtmlData, legacyPiImages, legacyEventBanner,\n    content, isGiftable,\n  } = productInfo;\n\n  const { isDelivery } = buildSupportedDeliveryInfo(deliveryTypeNames);\n\n  const partnerContent = getPartnerContentWithCamelCase(content);\n\n  return (\n    <Container>\n      <InfoList\n        isDelivery={isDelivery}\n        salesUnit={salesUnit}\n        volume={volume}\n        todayBrix={todayBrix}\n        productOrigin={productOrigin}\n        storageTypes={storageTypes}\n        allergy={allergy}\n        expirationDate={expirationDate}\n        soldOutText={soldOutText}\n        extraInfos={extraInfos as ProductInfoDictionaryItem[]}\n        guides={guides}\n        notSalesText={notSalesText}\n        afterSaleServiceInfo={Object.values(afterSaleServiceInfo).filter((info) => info).join('\\n')}\n        isOnlyAdult={isOnlyAdult}\n      />\n      {isGiftable && <GiftDeliveryNotice />}\n      {legacyEventBanner && (\n        <EventBanner\n          eventBanner={legacyEventBanner}\n        />\n      )}\n      <DetailDescription\n        legacyContent={decodeURIComponent(contentHtmlData)}\n        partnerContent={partnerContent}\n      />\n      <ZoomImageList detailImages={legacyPiImages} />\n      <WhyKurly />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/goods/detail.tsx","import { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\n\nimport { isEmpty } from 'lodash';\n\nimport { ProductDetailContentData } from '../../../../src/shared/api';\n\nimport ProductNotice\n  from '../../../../src/product/detail/m/components/detail-information/product-notice/ProductNotice';\nimport ZoomImageList\n  from '../../../../src/product/detail/m/components/detail-information/zoom-image/ZoomImageList';\nimport HappyCenter\n  from '../../../../src/product/detail/m/components/detail-information/happy-center/HappyCenter';\nimport OrderCancellationGuide\n  from '../../../../src/product/detail/m/components/detail-information/OrderCancellationGuide';\nimport DeliveryNotice\n  from '../../../../src/product/detail/m/components/detail-information/DeliveryNotice';\nimport {\n  getPartnerContentWithCamelCase,\n} from '../../../../src/product/service/product.service';\nimport PartnerProductImage\n  from '../../../../src/product/detail/m/components/detail-information/PartnerProductImage';\nimport { isAos } from '../../../../util/window/getDevice';\nimport appService from '../../../../src/shared/services/app.service';\nimport useLoadKakao from '../../../../src/shared/hooks/useLoadKakao';\nimport SellerNotice\n  from '../../../../src/product/detail/m/components/detail-information/product-notice/SellerNotice';\nimport { ProductInfoDictionaryItem } from '../../../../src/product/detail/types';\n\ndeclare global {\n  interface Window {\n    productNoticeData?: string;\n  }\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\ninterface NoticeData {\n  legacyPiImages: string[];\n  productNotice: {\n    dealProductNo: number;\n    dealProductName: string;\n    notices: ProductInfoDictionaryItem[];\n  }[];\n  content: ProductDetailContentData[];\n  sellerProfile: ProductInfoDictionaryItem[];\n  isThirdPart: boolean;\n}\n\nexport default function ProductDetailPage() {\n  useLoadKakao();\n\n  const [noticeData, setNoticeData] = useState<NoticeData>();\n\n  useEffect(() => {\n    if (isAos) {\n      const data = appService.loadProductDetailInformation();\n      setNoticeData(JSON.parse(data));\n      return;\n    }\n\n    setNoticeData(window.productNoticeData ? JSON.parse(window.productNoticeData) : null);\n  }, []);\n\n  if (!noticeData) {\n    return <Container />;\n  }\n\n  const {\n    productNotice, legacyPiImages, content, sellerProfile, isThirdPart,\n  } = noticeData;\n\n  const partnerContent = getPartnerContentWithCamelCase(content);\n\n  return (\n    <Container>\n      {!isEmpty(partnerContent) && (\n        <PartnerProductImage partnerContent={partnerContent}/>\n      )}\n      <ZoomImageList detailImages={legacyPiImages} />\n      <ProductNotice productNotice={productNotice} />\n      <SellerNotice\n        sellerNotice={sellerProfile}\n        isThirdPart={isThirdPart}\n      />\n      <HappyCenter />\n      <OrderCancellationGuide />\n      <DeliveryNotice />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/goods/inquiry/form.tsx","import styled from '@emotion/styled';\nimport { useRouter } from 'next/router';\n\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport ProductInquiryFormContainer\n  from '../../../../../src/product/board/inquiry/m/form/ProductInquiryFormContainer';\nimport { extractAuthentication } from '../../../../../src/shared/utils/token';\nimport { setAccessToken } from '../../../../../src/shared/reducers/auth';\nimport {\n  modifyProductInquiryForm,\n} from '../../../../../src/product/detail/slice';\nimport {\n  getWebviewServerSideProps,\n  WebviewServerSideProps,\n} from '../../../../../src/server/webview';\n\nconst Container = styled.div``;\n\nexport default function Form({ accessToken }: WebviewServerSideProps) {\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  const { productNo, productName, inquiryId, subject, content, isSecret } = router.query as\n    {\n      productNo: string;\n      productName: string;\n      inquiryId: string;\n      subject: string;\n      content: string;\n      isSecret: string;\n    };\n\n  useEffect(() => {\n    if (!accessToken) {\n      return;\n    }\n\n    const token = extractAuthentication(accessToken);\n    dispatch(setAccessToken(token));\n  }, [accessToken, dispatch]);\n\n  const prepareEditMode = useCallback(() => {\n    const InquiryIdNumber = Number(inquiryId);\n\n    const isEditMode = router.isReady && InquiryIdNumber > 0;\n\n    if (!isEditMode) {\n      return;\n    }\n\n    dispatch(modifyProductInquiryForm({\n      postId: InquiryIdNumber,\n      open: true,\n      subject,\n      content,\n      isSecret: isSecret === 'true',\n      mode: 'edit',\n    }));\n  }, [content, dispatch, inquiryId, isSecret, router.isReady, subject]);\n\n  useEffect(() => {\n    prepareEditMode();\n  }, [prepareEditMode]);\n\n  if (!accessToken) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <ProductInquiryFormContainer\n        productNo={Number(productNo)}\n        productName={productName}\n      />\n    </Container>\n  );\n}\n\nexport const getServerSideProps = getWebviewServerSideProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/goods/inquiry/index.tsx","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport ProductInquiryListContainer\n  from '../../../../../src/product/board/inquiry/m/ProductInquiryListContainer';\nimport { setAccessToken } from '../../../../../src/shared/reducers/auth';\nimport { extractAuthentication } from '../../../../../src/shared/utils/token';\nimport {\n  getWebviewServerSideProps,\n  WebviewServerSideProps,\n} from '../../../../../src/server/webview';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport default function ProductInquiryWebviewPage({ accessToken }: WebviewServerSideProps) {\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  const { productNo, productName } = router.query as { productNo: string; productName: string; };\n\n  useEffect(() => {\n    if (!accessToken) {\n      return;\n    }\n\n    const token = extractAuthentication(accessToken);\n    dispatch(setAccessToken(token));\n  }, [accessToken, dispatch]);\n\n  if (!accessToken || !router.isReady) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <ProductInquiryListContainer\n        productNo={Number(productNo)}\n        productName={productName}\n      />\n    </Container>\n  );\n}\n\nexport const getServerSideProps = getWebviewServerSideProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/goods/review/instruction-guide.tsx","import styled from '@emotion/styled';\n\nimport { hiddenScrollBar } from '../../../../../src/shared/utils/hidden-scrollbar';\nimport COLOR from '../../../../../src/shared/constant/colorset';\n\nconst Content = styled.div`\n  padding: 24px 24px 0;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 21px;\n  color: ${COLOR.kurlyGray600};\n\n  ${hiddenScrollBar()}\n  p {\n    padding-bottom: 20px;\n  }\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    padding-left: 6px;\n    margin-bottom: 20px;\n\n    li {\n      list-style-type: \"·\";\n      list-style-position: outside;\n      padding-inline-start: 3px;\n    }\n\n    :last-of-type {\n      padding-left: 16px;\n      color: ${COLOR.invalidRed};\n\n      li {\n        list-style-type: \"※\";\n        list-style-position: outside;\n        padding-inline-start: 5px;\n      }\n    }\n  }\n`;\n\nconst Title = styled.h2`\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 23px;\n  color: ${COLOR.kurlyGray800};\n  margin-bottom: 16px;\n`;\n\nexport default function InstructionGuide() {\n  return (\n    <Content>\n      <Title>후기 작성 시 유의사항</Title>\n      <p>\n        컬리는 믿을 수 있는 후기문화를 함께 만들어가고자 합니다. 식품 등의\n        표시광고에 대한 법률을 준수하고자 다음과 같은 부당한 상품평에 대해서는\n        별도 고지 없이 임시 대처, 비공개 전환, 삭제, 적립금 회수 등의 필요한\n        조치가 취해 질 수 있습니다.\n      </p>\n      <ul>\n        <li>\n          개인의 주관적인 의견으로 인해 상품의 기능 및 효과에 대하여 오해의\n          소지가 있는 내용\n        </li>\n        <li>\n          식품/건강기능식품과 관련하여 질병의 예방 및 치료, 체중감량(다이어트)에\n          효능효과가 있다는 내용\n        </li>\n        <li>\n          일반 화장품을 기능성화장품의 효능효과가 있다는 내용을 통한 오인 표현\n        </li>\n        <li>\n          의약외품을 의약품으로 오인하게 하는 표현\n        </li>\n        <li>\n          생활화학제품을 본래 용도와 다르게 사용하는 내용 및 효능효과를 과장하는 내용\n        </li>\n        <li>\n          욕설, 폭력성, 음란성, 상업성 등의 게시물 또는 구매 상품과 무관하거나\n          반복되는 동일 단어나 문장을 사용하여 판매자나 다른 이용자의 후기\n          이용을 방해한다고 판단되는 경우\n        </li>\n        <li>\n          구매한 상품이 아닌 캡쳐 사진, 타인 사진 도용, 포장 박스, 퍼플박스, 구매 상품을 구분할 수 없는 전체 사진 등 상품과 관련 없는 이미지, 동영상을 사용한 경우\n        </li>\n        <li>\n          본인 또는 타인의 주민등록번호, (휴대)전화번호, 이메일 등 개인정보가\n          포함된 경우\n        </li>\n        <li>\n          그 밖에 상품평으로 인해 다른 회원 또는 제3자에게 피해가 가해질 내용\n        </li>\n      </ul>\n      <ul>\n        <li>\n          작성된 글과 첨부된 멀티미디어 파일 등으로 이루어진 각 상품평은 개인의\n          의견을 반영하므로, 게시된 내용에 대한 모든 책임은 작성자에게 있습니다.{' '}\n          <br />\n          또한 비정상적인 방법을 통해 후기를 작성하고 적립금을 취득한 경우\n          작성자에 법적 책임의 소지가 있음을 알려드립니다.\n        </li>\n      </ul>\n    </Content>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/mypage/emoney/index.tsx","import type { InferGetStaticPropsType } from 'next';\nimport styled from '@emotion/styled';\n\nimport COLOR from '../../../../../src/shared/constant/colorset';\nimport { getWebviewServerSideProps } from '../../../../../src/server/webview';\n\nimport AuthContainer from '../../../../../src/shared/components/Auth/AuthContainer';\nimport { PagingContextProvider } from '../../../../../src/mypage/emoney/context/m/PagingContext';\nimport PageContainer from '../../../../../src/mypage/emoney/containers/m/PageContainer';\n\nconst Container = styled.main`\n  min-height: 100vh;\n  background-color: ${COLOR.bg};\n`;\n\nconst MyPageEMoneyWebviewPage = (props: InferGetStaticPropsType<typeof getServerSideProps>) => {\n  const { accessToken } = props;\n  return (\n    <Container>\n      <AuthContainer loginRequired appToken={accessToken}>\n        <PagingContextProvider>\n          <PageContainer />\n        </PagingContextProvider>\n      </AuthContainer>\n    </Container>\n  );\n};\n\nexport default MyPageEMoneyWebviewPage;\n\nexport const getServerSideProps = getWebviewServerSideProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/order/checkout/kurly-pass.tsx","import { useCallback, useEffect } from 'react';\n\nimport { GetServerSideProps } from 'next';\nimport { useRouter } from 'next/router';\n\nimport { useDispatch } from 'react-redux';\n\nimport getRawBody from 'raw-body';\n\nimport { storeAppToken } from '../../../../../src/order/shared/shared/services/appToken.storage.service';\n\nimport { KurlyPassPlaceOrderResponse } from '../../../../../src/shared/interfaces';\nimport { OrderVendorCode } from '../../../../../src/order/shared/shared/interfaces/OrderVendorCode.interface';\n\nimport { setAccessToken } from '../../../../../src/shared/reducers/auth';\nimport { loadCheckoutKurlyPassOrder } from '../../../../../src/order/shared/shared/reducers/payments.slice';\n\nimport InProgress from '../../../../../src/order/shared/m/components/InProgress';\n\ninterface Props {\n  accessToken: string;\n  selectedVendorCode: OrderVendorCode;\n  placeOrderResponse: KurlyPassPlaceOrderResponse;\n}\n\nexport default function WebviewProcessPage({\n  accessToken,\n  placeOrderResponse,\n}: Props) {\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  const checkResult = useCallback(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (accessToken) {\n      storeAppToken(accessToken);\n      dispatch(setAccessToken({\n        accessToken,\n        isGuest: false,\n      }));\n    }\n\n    dispatch(loadCheckoutKurlyPassOrder({\n      placeOrderResponse,\n    }));\n  }, [accessToken, dispatch, placeOrderResponse, router.isReady]);\n\n  useEffect(() => {\n    checkResult();\n  }, [checkResult]);\n\n  return <InProgress />;\n}\n\ninterface Context extends GetServerSideProps {\n  req: {\n    headers: {\n      authorization: string;\n    };\n  };\n}\n\nexport async function getServerSideProps(context: Context) {\n  const { req } = context;\n  const { authorization } = req.headers;\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const body = await getRawBody(req as any, { limit: '1mb', encoding: 'UTF-8' });\n    const result = JSON.parse(body);\n\n    return {\n      props: {\n        accessToken: authorization?.replace('Bearer ', '') ?? '',\n        placeOrderResponse: result?.placeOrderResponse ?? null,\n      },\n    };\n  } catch (err) {\n    return {\n      props: {\n      },\n    };\n  }\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/order/checkout/process.tsx","import { useCallback, useEffect } from 'react';\n\nimport { GetServerSideProps } from 'next';\nimport { useRouter } from 'next/router';\n\nimport { useDispatch } from 'react-redux';\n\nimport getRawBody from 'raw-body';\n\nimport { storeAppToken } from '../../../../../src/order/shared/shared/services/appToken.storage.service';\n\nimport { PlaceOrderResponse } from '../../../../../src/shared/interfaces';\nimport { PaymentsVendorCode } from '../../../../../src/order/shared/shared/interfaces/OrderVendorCode.interface';\n\nimport { setAccessToken } from '../../../../../src/shared/reducers/auth';\nimport { loadOrder } from '../../../../../src/order/shared/shared/reducers/payments.slice';\n\nimport InProgress from '../../../../../src/order/shared/m/components/InProgress';\n\ninterface Props {\n  accessToken: string;\n  selectedVendorCode: PaymentsVendorCode;\n  placeOrderResponse: PlaceOrderResponse;\n}\n\nexport default function WebviewProcessPage({\n  accessToken,\n  selectedVendorCode,\n  placeOrderResponse,\n}: Props) {\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  const checkResult = useCallback(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (accessToken) {\n      storeAppToken(accessToken);\n      dispatch(setAccessToken({\n        accessToken,\n        isGuest: false,\n      }));\n    }\n\n    dispatch(loadOrder({\n      placeOrderResponse,\n      selectedVendorCode,\n    }));\n  }, [accessToken, dispatch, placeOrderResponse, router.isReady, selectedVendorCode]);\n\n  useEffect(() => {\n    checkResult();\n  }, [checkResult]);\n\n  return <InProgress />;\n}\n\ninterface Context extends GetServerSideProps {\n  req: {\n    headers: {\n      authorization: string;\n    };\n  };\n}\n\nexport async function getServerSideProps(context: Context) {\n  const { req } = context;\n  const { authorization } = req.headers;\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const body = await getRawBody(req as any, { limit: '1mb', encoding: 'UTF-8' });\n    const result = JSON.parse(body);\n\n    return {\n      props: {\n        accessToken: authorization?.replace('Bearer ', '') ?? '',\n        selectedVendorCode: result?.selectedVendorCode ?? null,\n        placeOrderResponse: result?.placeOrderResponse ?? null,\n      },\n    };\n  } catch (err) {\n    return {\n      props: {\n      },\n    };\n  }\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/order/gift/process.tsx","import { useCallback, useEffect } from 'react';\n\nimport { GetServerSideProps } from 'next';\nimport { useRouter } from 'next/router';\n\nimport { useDispatch } from 'react-redux';\n\nimport getRawBody from 'raw-body';\n\nimport { storeAppToken } from '../../../../../src/order/shared/shared/services/appToken.storage.service';\n\nimport { PlaceOrderResponse } from '../../../../../src/shared/interfaces';\nimport { PaymentsVendorCode } from '../../../../../src/order/shared/shared/interfaces/OrderVendorCode.interface';\n\nimport { setAccessToken } from '../../../../../src/shared/reducers/auth';\nimport { loadOrder } from '../../../../../src/order/shared/shared/reducers/payments.slice';\n\nimport InProgress from '../../../../../src/order/shared/m/components/InProgress';\n\ninterface Props {\n  accessToken: string;\n  selectedVendorCode: PaymentsVendorCode;\n  placeOrderResponse: PlaceOrderResponse;\n}\n\nexport default function WebviewProcessPage({\n  accessToken,\n  selectedVendorCode,\n  placeOrderResponse,\n}: Props) {\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  const checkResult = useCallback(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (accessToken) {\n      storeAppToken(accessToken);\n      dispatch(setAccessToken({\n        accessToken,\n        isGuest: false,\n      }));\n    }\n\n    dispatch(loadOrder({\n      placeOrderResponse,\n      selectedVendorCode,\n      isGift: true,\n    }));\n  }, [accessToken, dispatch, placeOrderResponse, router.isReady, selectedVendorCode]);\n\n  useEffect(() => {\n    checkResult();\n  }, [checkResult]);\n\n  return <InProgress />;\n}\n\ninterface Context extends GetServerSideProps {\n  req: {\n    headers: {\n      authorization: string;\n    };\n  };\n}\n\nexport async function getServerSideProps(context: Context) {\n  const { req } = context;\n  const { authorization } = req.headers;\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const body = await getRawBody(req as any, { limit: '1mb', encoding: 'UTF-8' });\n    const result = JSON.parse(body);\n\n    return {\n      props: {\n        accessToken: authorization?.replace('Bearer ', '') ?? '',\n        selectedVendorCode: result?.selectedVendorCode ?? null,\n        placeOrderResponse: result?.placeOrderResponse ?? null,\n      },\n    };\n  } catch (err) {\n    return {\n      props: {\n      },\n    };\n  }\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/terms/kurly-payment.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Terms from '../../../../src/shared/components/layouts/Terms';\n\nimport { loadKurlyTermsHTML } from '../../../../src/shared/reducers/terms';\nimport { AppState } from '../../../../src/shared/store';\n\nexport default function KurlyTermsPage() {\n  const dispatch = useDispatch();\n  const { kurlyTermsHTML } = useSelector(({ terms }: AppState) => terms);\n\n  useEffect(() => {\n    dispatch(loadKurlyTermsHTML());\n  }, [dispatch]);\n\n  if (!kurlyTermsHTML) {\n    return null;\n  }\n\n  return (\n    <Terms html={kurlyTermsHTML} />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/terms/payment.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Terms from '../../../../src/shared/components/layouts/Terms';\n\nimport { loadPgTermsHTML } from '../../../../src/shared/reducers/terms';\nimport { AppState } from '../../../../src/shared/store';\n\nexport default function PaymentTermsPage() {\n  const dispatch = useDispatch();\n  const { pgTermsHTML } = useSelector(({ terms }: AppState) => terms);\n\n  useEffect(() => {\n    dispatch(loadPgTermsHTML());\n  }, [dispatch]);\n\n  if (!pgTermsHTML) {\n    return null;\n  }\n\n  return (\n    <Terms html={pgTermsHTML} />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/m/webview/terms/personal-information.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Terms from '../../../../src/shared/components/layouts/Terms';\n\nimport { loadPersonalInformationTerms } from '../../../../src/shared/reducers/terms';\nimport { AppState } from '../../../../src/shared/store';\n\nexport default function PersonalinformationTermsPage() {\n  const dispatch = useDispatch();\n  const { personalInformationTermsHTML } = useSelector(({ terms }: AppState) => terms);\n\n  useEffect(() => {\n    dispatch(loadPersonalInformationTerms());\n  }, [dispatch]);\n\n  if (!personalInformationTermsHTML) {\n    return null;\n  }\n\n  return (\n    <Terms html={personalInformationTermsHTML} />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/main/beauty.tsx","import Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\nimport MainContainer\n  from '../../src/main/components/pc/container/MainContainer';\nimport MainSiteProvider\n  from '../../src/main/components/shared/MainSiteProvider';\nimport { useScreenName } from '../../src/shared/hooks';\nimport { ScreenName } from '../../src/shared/amplitude';\n\nexport default function MainMarketPage() {\n  useScreenName(ScreenName.RECOMMENDATION);\n\n  return (\n    <MainSiteProvider site=\"BEAUTY\">\n      <Header/>\n      <MainContainer/>\n      <Footer/>\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/main/index.tsx","import Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\nimport MainContainer\n  from '../../src/main/components/pc/container/MainContainer';\nimport MainSiteProvider\n  from '../../src/main/components/shared/MainSiteProvider';\nimport { useScreenName } from '../../src/shared/hooks';\nimport { ScreenName } from '../../src/shared/amplitude';\n\nexport default function MainMarketPage() {\n  useScreenName(ScreenName.RECOMMENDATION);\n\n  return (\n    <>\n      <MainSiteProvider site=\"MARKET\">\n        <Header/>\n        <MainContainer/>\n        <Footer/>\n      </MainSiteProvider>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/market-benefit/index.tsx","import { useScreenName } from '../../src/shared/hooks';\nimport { ScreenName } from '../../src/shared/amplitude';\n\nimport Header from '../../src/header/components/Header';\nimport EventBenefitContainer\n  from '../../src/event-benefit/shared/containers/EventBenefitContainer';\nimport Footer from '../../src/footer/components/Footer';\nimport MainSiteProvider\n  from '../../src/main/components/shared/MainSiteProvider';\nimport ScrollEventTopButton\n  from '../../src/shared/components/Scroll/ScrollEventTopButton';\n\nexport default function EventBenefitPage() {\n  useScreenName(ScreenName.EVENT_LIST);\n\n  return (\n    <MainSiteProvider site=\"MARKET\">\n      <Header />\n      <ScrollEventTopButton>\n        <EventBenefitContainer />\n      </ScrollEventTopButton>\n      <Footer />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/adult-verification/index.tsx","import AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport AdultVerificationContainer\n  from '../../../src/member/adult-verification/AdultVerificationContainer';\n\nexport default function AdultVerificationPage() {\n  return (\n    <AuthContainer loginRequired>\n      <AdultVerificationContainer />\n    </AuthContainer>\n  );\n}\n\nexport async function getServerSideProps() {\n  return {\n    props: {},\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/benefit/total/index.tsx","import styled from '@emotion/styled';\n\nimport BenefitMenu from '../../../../src/member/benefit/components/pc/BenefitMenu';\nimport BenefitPayment from '../../../../src/member/benefit/components/pc/BenefitPayment';\nimport BenefitBanner from '../../../../src/member/benefit/components/pc/BenefitBanner';\n\nimport {\n  Menus,\n  Banners,\n} from '../../../../src/member/benefit/content/total';\n\nconst Container = styled.div`\n  width: 820px;\n  margin: 0 auto;\n  padding: 65px 0 100px;\n`;\n\nconst PaymentWrap = styled.div`\n  display: flex;\n  padding: 40px 0 50px;\n  border-bottom: 1px solid #eee;\n`;\n\nconst Title = styled.h3`\n  min-width: 260px;\n  font-weight: 600;\n  font-size: 28px;\n  letter-spacing: -1px;\n  color: #282828;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n`;\n\nconst BannerWrap = styled.div`\n  margin-top: 58px;\n`;\n\nexport default function Total() {\n  return (\n    <Container>\n      {Menus.map((menu) => (\n        <BenefitMenu menu={menu} key={menu.title} />\n      ))}\n\n      <PaymentWrap>\n        <Title>결제 혜택</Title>\n        <Content>\n          <BenefitPayment />\n        </Content>\n      </PaymentWrap>\n\n      <BannerWrap>\n        {Banners.map((banner) => (\n          <BenefitBanner banner={banner} key={banner.link} />\n        ))}\n      </BannerWrap>\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/change-password/index.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../src/shared/constant/colorset';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport ChangePasswordContainer\n  from '../../../src/member/change-password/shared/containers/ChangePassword';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\n\nconst Content = styled.div`\n  width: 540px;\n  margin: 50px auto 60px auto;\n  background-color: ${COLOR.kurlyWhite};\n`;\n\nconst Title = styled.div`\n  margin-bottom: 50px;\n  font-size: 28px;\n  line-height: 35px;\n  font-weight: 500;\n  text-align: center;\n  letter-spacing: -1px;\n  color: ${COLOR.kurlyGray800};\n`;\n\nexport default function ChangePassword() {\n  return (\n    <>\n      <Header />\n      <Content>\n        <Title>비밀번호 변경</Title>\n        <AuthContainer loginRequired>\n          <ChangePasswordContainer />\n        </AuthContainer>\n      </Content>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/find/id/index.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport styled from '@emotion/styled';\n\nimport PcTabsContainer from '../../../../src/member/find/containers/PcTabsContainer';\nimport FindIdByEmailFormContainer from '../../../../src/member/find/id/containers/FindIdByEmailFormContainer';\nimport FindByPhoneFormContainer from '../../../../src/member/find/id/containers/FindIdByPhoneFormContainer';\n\nimport Footer from '../../../../src/footer/components/Footer';\nimport Header from '../../../../src/header/components/Header';\n\nimport { AppState } from '../../../../src/shared/store';\nimport { clear, clearStatus } from '../../../../src/member/find/reducers/find.slice';\nimport { notifyAndFocus } from '../../../../src/shared/reducers/page';\n\nimport { FIND_METHOD_EMAIL, FIND_METHOD_PHONE } from '../../../../src/member/find/constants';\n\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nconst Content = styled.div`\n  min-width: 1050px;\n  padding: 50px 0;\n  background-color: white;\n`;\n\nconst ContentArea = styled.div`\n  max-width: 400px;\n  padding: 0 10px 6px 10px;\n  margin: auto;\n  position: relative;\n  background-color: white;\n`;\n\nconst Title = styled.div`\n  padding-bottom: 30px;\n  font-weight: 500;\n  font-size: 28px;\n  text-align: center;\n`;\n\nexport default function FindIdPage() {\n  useScreenName(ScreenName.FIND_ID);\n\n  const router = useRouter();\n\n  const dispatch = useDispatch();\n  const {\n    idByEmail, idByPhone, selectedTab,\n  } = useSelector(({ find }: AppState) => find);\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (idByEmail.status === 'SUCCESS') {\n      router.push('/member/find/id/success?by=email');\n    }\n\n    if (idByPhone.status === 'SUCCESS') {\n      router.push('/member/find/id/success?by=mobile');\n    }\n  }, [router.isReady, idByEmail.status, idByPhone.status]);\n\n  useEffect(() => {\n    if (idByPhone.status === 'SENT' && idByPhone.endTime) {\n      dispatch(notifyAndFocus({\n        message: `인증번호가 발송되었습니다. 3분 안에 인증번호를 입력해 주세요.\n\n카카오톡이 설치된 경우 카카오 알림톡으로 발송됩니다.`,\n        documentId: 'verification-number',\n      }));\n    }\n  }, [idByPhone.status, idByPhone.endTime, dispatch]);\n\n  useEffect(() => {\n    dispatch(clear());\n\n    return (() => {\n      dispatch(clearStatus());\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedTab === FIND_METHOD_PHONE) {\n      dispatch(clear());\n    }\n  }, [selectedTab, dispatch]);\n\n  return (\n    <>\n      <Header />\n      <Content>\n        <Title>아이디 찾기</Title>\n\n        <ContentArea>\n          <PcTabsContainer />\n\n          {selectedTab === FIND_METHOD_PHONE && (\n            <FindByPhoneFormContainer />\n          )}\n          {selectedTab === FIND_METHOD_EMAIL && (\n            <FindIdByEmailFormContainer />\n          )}\n        </ContentArea>\n      </Content>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/find/id/success.tsx","import { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { isEmpty } from 'lodash';\n\nimport styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport MembersContainer from '../../../../src/member/find/id/success/containers/MembersContainer';\n\nimport Button from '../../../../src/shared/components/Button/Button';\nimport Header from '../../../../src/header/components/Header';\n\nimport { AppState } from '../../../../src/shared/store';\nimport { requestToSendMembersByEmail } from '../../../../src/member/find/reducers/find.slice';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\nimport Footer from '../../../../src/footer/components/Footer';\n\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { amplitudeService, ScreenName } from '../../../../src/shared/amplitude';\nimport { SelectFindPassword, SelectViewAllId } from '../../../../src/shared/amplitude/events';\nimport { COMMON_PATH, getPageUrl } from '../../../../src/shared/constant';\nimport { redirectTo } from '../../../../src/shared/reducers/page';\n\nconst Content = styled.div`\n  min-width: 1050px;\n  padding: 50px 0;\n  background-color: white;\n  `;\n\nconst ContentArea = styled.div`\n  max-width: 400px;\n  padding: 0 30px 30px 30px;\n  margin: auto;\n  position: relative;\n  background-color: white;\n`;\n\nconst Title = styled.div`\n  padding-top: 30px;\n  font-weight: 500;\n  font-size: 17px;\n  line-height: 23px;\n`;\n\nconst SubTitle = styled.div`\n  display: block;\n  padding-top: 4px;\n  font-weight: 400;\n  font-size: 13px;\n  color: ${COLOR.kurlyGray450};\n  line-height: 18px;\n`;\n\nconst ButtonWrap = styled.div`\n  margin-top: 60px;\n  > button:first-of-type {\n    margin-bottom: 10px;\n  }\n`;\n\nexport default function IdByEmailSuccessPage() {\n  useScreenName(ScreenName.FIND_ID);\n\n  const dispatch = useDispatch();\n  const { members } = useSelector((state: AppState) => state.find);\n\n  const router = useRouter();\n  const { by } = router.query;\n\n  const handleClickFindPassword = () => {\n    amplitudeService.logEvent(new SelectFindPassword());\n\n    router.push('/member/find/password');\n  };\n\n  const handleClickFindIdDetails = () => {\n    amplitudeService.logEvent(new SelectViewAllId());\n\n    dispatch(requestToSendMembersByEmail());\n  };\n\n  const handleClickLogin = () => {\n    dispatch(redirectTo({ url: getPageUrl(COMMON_PATH.login) }));\n  };\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (isEmpty(members)) {\n      router.back();\n    }\n  }, [router.isReady]);\n\n  return (\n    <>\n      <Header />\n      <Content>\n        <ContentArea>\n          <Title>\n            고객님의 마켓컬리 계정을 찾았습니다.\n            <SubTitle>아이디 확인 후 로그인해 주세요.</SubTitle>\n          </Title>\n\n          <MembersContainer />\n\n          <ButtonWrap>\n            {by === 'email' && (\n              <Button\n                text=\"아이디 전체보기\"\n                theme=\"secondary\"\n                onClick={handleClickFindIdDetails}\n              />\n            )}\n            {by === 'mobile' && (\n              <Button\n                text=\"비밀번호 찾기\"\n                theme=\"secondary\"\n                onClick={handleClickFindPassword}\n              />\n            )}\n            <Button\n              text=\"로그인\"\n              onClick={handleClickLogin}\n            />\n          </ButtonWrap>\n        </ContentArea>\n      </Content>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/find/password/fail.tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport Header from '../../../../src/header/components/Header';\nimport Button from '../../../../src/shared/components/Button/Button';\nimport Footer from '../../../../src/footer/components/Footer';\n\nimport { ErrorIconPcImg } from '../../../../src/shared/images';\n\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nconst Content = styled.div`\n  min-width: 1050px;\n  padding: 50px 0;\n  background-color: white;\n`;\n\nconst ContentArea = styled.div`\n  position: relative;\n  max-width: 400px;\n  margin: auto;\n  text-align: center;\n\n  button {\n    display: inline-block;\n    margin-top: 30px;\n\n    span {\n      font-size: 14px;\n      font-weight: 500;\n    }\n  }\n`;\n\nconst ContentContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst styles = {\n  message: {\n    fontSize: '28px',\n    fontWeight: 500,\n    color: '#666666',\n    ':before': {\n      content: '\"\"',\n      display: 'block',\n      width: '100px',\n      height: '100px',\n      margin: '0 auto 20px',\n      background: `url(${ErrorIconPcImg})`,\n      backgroundSize: 'cover',\n    },\n  },\n  notice: {\n    marginTop: '20px',\n    fontSize: '16px',\n    color: '#b5b5b5',\n    lineHeight: 1.44,\n  },\n};\n\nexport default function PasswordFailPage() {\n  useScreenName(ScreenName.FIND_PASSWORD);\n\n  const router = useRouter();\n\n  const handleClick = () => {\n    router.push('/member/find/password');\n  };\n\n  return (\n    <>\n      <Header />\n      <Content>\n        <ContentArea>\n          <ContentContainer>\n            <p css={styles.message}>\n              유효하지 않은 URL\n            </p>\n            <p css={styles.notice}>\n              유효하지 않은 URL입니다.\n              <br />\n              메일함을 확인하시거나 비밀번호 찾기를 다시 시도해 주세요.\n            </p>\n          </ContentContainer>\n\n          <Button\n            text=\"다시 비밀번호 찾기\"\n            width={200}\n            height={44}\n            onClick={handleClick}\n          />\n        </ContentArea>\n      </Content>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/find/password/index.tsx","import { useEffect } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport PcTabsContainer from '../../../../src/member/find/containers/PcTabsContainer';\nimport FindPasswordByPhoneFormContainer from '../../../../src/member/find/password/containers/FindPasswordByPhoneFormContainer';\nimport FindPasswordByEmailFormContainer from '../../../../src/member/find/password/containers/FindPasswordByEmailFormContainer';\n\nimport Footer from '../../../../src/footer/components/Footer';\nimport Header from '../../../../src/header/components/Header';\n\nimport { AppState } from '../../../../src/shared/store';\nimport { clear, clearStatus } from '../../../../src/member/find/reducers/find.slice';\nimport { notifyAndFocus } from '../../../../src/shared/reducers/page';\n\nimport { FIND_METHOD_EMAIL, FIND_METHOD_PHONE } from '../../../../src/member/find/constants';\n\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nconst Content = styled.div`\n  min-width: 1050px;\n  padding: 50px 0;\n  background-color: white;\n`;\n\nconst ContentArea = styled.div`\n  max-width: 400px;\n  padding: 0 10px 6px 10px;\n  margin: auto;\n  position: relative;\n  background-color: white;\n`;\n\nconst Title = styled.div`\n  padding-bottom: 30px;\n  font-weight: 500;\n  font-size: 28px;\n  text-align: center;\n`;\n\nexport default function FindPasswordPage() {\n  useScreenName(ScreenName.FIND_PASSWORD);\n\n  const dispatch = useDispatch();\n  const {\n    selectedTab, passwordByPhone, passwordByEmail,\n  } = useSelector(({ find }: AppState) => find);\n\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    if (passwordByPhone.token) {\n      router.push(\n        `/member/find/password/reset?token=${passwordByPhone.token}&by=mobile`,\n      );\n    }\n\n    if (passwordByEmail.status === 'SUCCESS') {\n      router.push('/member/find/password/success');\n    }\n  }, [router.isReady, passwordByPhone.token, passwordByEmail.status]);\n\n  useEffect(() => {\n    if (passwordByPhone.status === 'SENT' && passwordByPhone.endTime) {\n      dispatch(notifyAndFocus({\n        message: `인증번호가 발송되었습니다. 3분 안에 인증번호를 입력해 주세요.\n\n카카오톡이 설치된 경우 카카오 알림톡으로 발송됩니다.`,\n        documentId: 'verification-number',\n      }));\n    }\n  }, [passwordByPhone.status, passwordByPhone.endTime, dispatch]);\n\n  useEffect(() => {\n    dispatch(clear());\n\n    return (() => {\n      dispatch(clearStatus());\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedTab === FIND_METHOD_PHONE) {\n      dispatch(clear());\n    }\n  }, [selectedTab, dispatch]);\n\n  return (\n    <>\n      <Header />\n      <Content>\n        <Title>비밀번호 찾기</Title>\n\n        <ContentArea>\n          <PcTabsContainer />\n\n          {selectedTab === FIND_METHOD_PHONE && (\n            <FindPasswordByPhoneFormContainer />\n          )}\n          {selectedTab === FIND_METHOD_EMAIL && (\n            <FindPasswordByEmailFormContainer />\n          )}\n        </ContentArea>\n      </Content>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/find/password/reset.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport styled from '@emotion/styled';\n\nimport { NextPageContext } from 'next';\n\nimport PasswordResetFormContainer from '../../../../src/member/find/password/containers/PasswordResetFormContainer';\n\nimport Footer from '../../../../src/footer/components/Footer';\nimport Header from '../../../../src/header/components/Header';\n\nimport {\n  clearTokenStatus, updateToken,\n} from '../../../../src/member/find/reducers/find.slice';\nimport { AppState } from '../../../../src/shared/store';\n\nimport Alert from '../../../../src/shared/components/Alert/Alert';\nimport { verifyToken } from '../../../../src/member/find/services';\n\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { amplitudeService, ScreenName } from '../../../../src/shared/amplitude';\nimport { SetNewPasswordSuccess } from '../../../../src/shared/amplitude/events';\nimport { redirectTo } from '../../../../src/shared/reducers/page';\nimport { COMMON_PATH, getPageUrl } from '../../../../src/shared/constant';\n\nconst Content = styled.div`\n  min-width: 1050px;\n  padding: 50px 0;\n  background-color: white;\n`;\n\nconst ContentArea = styled.div`\n  max-width: 400px;\n  padding: 0 10px 6px 10px;\n  margin: auto;\n  position: relative;\n  background-color: white;\n`;\n\nconst Title = styled.div`\n  padding-bottom: 30px;\n  font-weight: 500;\n  font-size: 28px;\n  text-align: center;\n`;\nexport default function PasswordResetPage() {\n  useScreenName(ScreenName.FIND_PASSWORD);\n\n  const dispatch = useDispatch();\n  const {\n    passwordResetForm,\n    tokenStatus,\n  } = useSelector((state: AppState) => state.find);\n\n  const router = useRouter();\n\n  const { token = '', by = '' } = router.query;\n\n  useEffect(() => {\n    if (!router.isReady) {\n      return;\n    }\n\n    dispatch(updateToken(token));\n  }, [router.isReady, dispatch]);\n\n  useEffect(() => {\n    if (tokenStatus === 'EXPIRED') {\n      Alert({\n        text: `유효 시간이 만료되었습니다.\n비밀번호 찾기를 다시 시도해 주세요.`,\n        allowOutsideClick: false,\n      }).then(({ isConfirmed }) => {\n        if (isConfirmed) {\n          dispatch(redirectTo({ url: getPageUrl(COMMON_PATH.findPassword) }));\n        }\n\n        dispatch(clearTokenStatus());\n      });\n    }\n  }, [tokenStatus, dispatch]);\n\n  useEffect(() => {\n    if (passwordResetForm.status === 'SUCCESS') {\n      amplitudeService.logEvent(new SetNewPasswordSuccess({\n        authenticationMethod: by === 'mobile' ? 'mobile' : 'email',\n      }));\n      Alert({\n        text: '비밀번호 변경이 완료되었습니다.',\n        allowOutsideClick: false,\n      }).then(({ isConfirmed }) => {\n        if (isConfirmed) {\n          dispatch(redirectTo({ url: getPageUrl(COMMON_PATH.login) }));\n        }\n\n        dispatch(clearTokenStatus());\n      });\n    }\n  }, [passwordResetForm.status, dispatch]);\n\n  return (\n    <>\n      <Header />\n      <Content>\n        <Title>비밀번호 재설정</Title>\n\n        <ContentArea>\n          <PasswordResetFormContainer />\n        </ContentArea>\n      </Content>\n      <Footer />\n    </>\n  );\n}\n\nexport async function getServerSideProps(context: NextPageContext) {\n  const redirect = {\n    redirect: {\n      destination: '/member/find/password/fail',\n      permanent: false,\n    },\n  };\n\n  const { token } = context.query;\n  if (!token) {\n    return redirect;\n  }\n\n  try {\n    const valid = await verifyToken(token as string);\n    if (!valid) {\n      return redirect;\n    }\n  } catch {\n    return redirect;\n  }\n\n  return {\n    props: {},\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/find/password/success.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useRouter } from 'next/router';\n\nimport styled from '@emotion/styled';\n\nimport Footer from '../../../../src/footer/components/Footer';\nimport Header from '../../../../src/header/components/Header';\n\nimport { AppState } from '../../../../src/shared/store';\n\nimport { MailSendIcon } from '../../../../src/shared/images';\nimport COLOR from '../../../../src/shared/constant/colorset';\n\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\nimport { redirectTo } from '../../../../src/shared/reducers/page';\nimport { COMMON_PATH, getPageUrl } from '../../../../src/shared/constant';\n\nconst Content = styled.div`\n  min-width: 1050px;\n  padding: 50px 0;\n  background-color: white;\n`;\n\nconst ContentArea = styled.div`\n  max-width: 400px;\n  padding: 60px 30px;\n  margin: auto;\n  position: relative;\n  background-color: white;\n`;\n\nconst SuccessContent = styled.div`\n  text-align: center;\n`;\n\nconst styles = {\n  message: {\n    fontWeight: 500,\n    fontSize: '17px',\n    lineHeight: '24px',\n    ':before': {\n      content: '\"\"',\n      display: 'block',\n      width: '54px',\n      height: '54px',\n      margin: '0 auto 20px',\n      background: `url(${MailSendIcon}) no-repeat 50% 50%`,\n    },\n  },\n  mail: {\n    fontWeight: 700,\n    color: `${COLOR.kurlyPurple}`,\n    wordBreak: 'break-all' as const,\n  },\n  notice: {\n    paddingTop: '14px',\n    fontSize: '14px',\n    color: `${COLOR.kurlyGray450}`,\n    lineHeight: '19px',\n  },\n};\n\nexport default function EmailSendSuccessPage() {\n  useScreenName(ScreenName.FIND_PASSWORD);\n\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  const { passwordByEmail } = useSelector((state: AppState) => state.find);\n\n  useEffect(() => {\n    if (router.isReady && !passwordByEmail.email) {\n      dispatch(redirectTo({ url: getPageUrl(COMMON_PATH.login) }));\n    }\n  }, [router.isReady, passwordByEmail.email, dispatch]);\n\n  return (\n    <>\n      <Header />\n      <Content>\n        <ContentArea>\n          <SuccessContent>\n            <p css={styles.message}>\n              <span css={styles.mail}>{passwordByEmail.email}</span>\n              으로\n              <br />\n              비밀번호 재설정 메일이 발송되었어요.\n            </p>\n            <p css={styles.notice}>\n              5분 후에도 메일이 오지 않는다면\n              <br />\n              스팸함을 확인해 주세요.\n            </p>\n          </SuccessContent>\n        </ContentArea>\n      </Content>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/login/index.tsx","import styled from '@emotion/styled';\n\nimport Header from '../../../src/header/components/Header';\nimport COLOR from '../../../src/shared/constant/colorset';\n\nimport Footer from '../../../src/footer/components/Footer';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nimport LoginForm from '../../../src/member/login/pc/components/LoginForm';\nimport {\n  useInitLogin,\n} from '../../../src/member/login/shared/hooks/useInitLogin';\n\nconst Content = styled.div`\n  min-width: 1050px;\n  margin-top: 90px;\n  margin-bottom: 60px;\n  background-color: ${COLOR.kurlyWhite};\n`;\n\nconst Title = styled.div`\n  font-weight: 800;\n  font-size: 20px;\n  line-height: 20px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  width: 340px;\n  margin: 0 auto;\n  letter-spacing: -.6px;\n`;\n\nexport default function LoginPage() {\n  useScreenName(ScreenName.LOGIN);\n  useInitLogin();\n\n  return (\n    <>\n      <Header />\n      <Content>\n        <Title>로그인</Title>\n        <Container>\n          <LoginForm />\n        </Container>\n      </Content>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/logout/index.tsx","import { useEffect } from 'react';\n\nimport { amplitudeService } from '../../../src/shared/amplitude';\nimport { deleteCookie } from '../../../src/shared/services';\n\nexport default function LogoutPage() {\n  useEffect(() => {\n    amplitudeService.clearUserProperties()\n      .then(() => {\n        deleteCookie('DEVSTG_PHPSESSID', 'PHPSESSID');\n      }).finally(() => {\n        window.location.replace('/shop/member/logout.php');\n      });\n  }, []);\n\n  return null;\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/signup/index.tsx","import { useEffect } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { useAppSelector } from '../../../src/shared/store';\nimport { USER_MENU_PATH } from '../../../src/shared/constant';\nimport Header from '../../../src/header/components/Header';\nimport COLOR from '../../../src/shared/constant/colorset';\n\nimport Footer from '../../../src/footer/components/Footer';\nimport Alert from '../../../src/shared/components/Alert/Alert';\nimport SignupContainer\n  from '../../../src/member/signup/shared/containers/SignupContainer';\n\nconst Content = styled.div`\n  min-width: 1050px;\n  margin-top: 50px;\n  margin-bottom: 60px;\n  background-color: ${COLOR.kurlyWhite};\n`;\n\nconst Title = styled.div`\n  margin-bottom: 50px;\n  font-size: 28px;\n  line-height: 35px;\n  font-weight: 500;\n  text-align: center;\n  letter-spacing: -1px;\n  color: ${COLOR.kurlyGray800}\n`;\n\nexport default function SignupPage() {\n  const { isGuest } = useAppSelector(({ auth }) => auth);\n\n  useEffect(() => {\n    if (!isGuest) {\n      Alert({ text: '이미 로그인 상태 입니다.' })\n        .then(() => {\n          window.location.assign(USER_MENU_PATH.home.uri);\n        });\n    }\n  }, [isGuest]);\n\n  return (\n    <>\n      <Header />\n      <Content>\n        <Title>회원가입</Title>\n        <SignupContainer />\n      </Content>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/signup/success.tsx","import styled from '@emotion/styled';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport SuccessContainer\n  from '../../../src/member/signup/pc/containers/SuccessContainer';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\n\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nconst Content = styled.div`\n  min-width: 1050px;\n  margin-top: 180px;\n  margin-bottom: 100px;\n`;\n\nexport default function SignupSuccessPage() {\n  useScreenName(ScreenName.SIGN_UP_SUCCESS);\n\n  return (\n    <>\n      <Header />\n      <Content>\n        <AuthContainer loginRequired>\n          <SuccessContainer />\n        </AuthContainer>\n      </Content>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/signup/terms/privacy-policy-optional.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport dynamic from 'next/dynamic';\n\nimport styled from '@emotion/styled';\n\nimport { AppState } from '../../../../src/shared/store';\nimport { loadPrivacyPolicyOptionalHTML } from '../../../../src/shared/reducers/terms';\n\nconst Terms = dynamic(\n  () => import('../../../../src/shared/components/layouts/Terms'),\n  { ssr: false },\n);\n\nconst Container = styled.div`\n  max-width: 1050px;\n  padding: 20px;\n  margin: auto;\n`;\n\nconst Title = styled.div`\n  padding: 24px 0;\n  font-weight: 600;\n  font-size: 18px;\n  color: #333;\n  line-height: 20px;\n  text-align: center;\n`;\n\nconst Sub = styled.span`\n  color: #999;\n`;\n\nexport default function PrivacyPolicyOptionalPage() {\n  const dispatch = useDispatch();\n  const { privacyPolicyOptionalHTML } = useSelector(({ terms }: AppState) => terms);\n\n  useEffect(() => {\n    dispatch(loadPrivacyPolicyOptionalHTML());\n  }, [dispatch]);\n\n  if (!privacyPolicyOptionalHTML) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Title>\n        개인정보 수집·이용 동의\n        {' '}\n        <Sub>(선택)</Sub>\n      </Title>\n      <Terms html={privacyPolicyOptionalHTML} />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/signup/terms/privacy-policy.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport dynamic from 'next/dynamic';\n\nimport styled from '@emotion/styled';\n\nimport { AppState } from '../../../../src/shared/store';\nimport { loadPrivacyPolicyHTML } from '../../../../src/shared/reducers/terms';\n\nconst Terms = dynamic(\n  () => import('../../../../src/shared/components/layouts/Terms'),\n  { ssr: false },\n);\n\nconst Container = styled.div`\n  max-width: 1050px;\n  padding: 20px;\n  margin: auto;\n`;\n\nconst Title = styled.div`\n  padding: 24px 0;\n  font-weight: 600;\n  font-size: 18px;\n  color: #333;\n  line-height: 20px;\n  text-align: center;\n`;\n\nconst Sub = styled.span`\n  color: #999;\n`;\n\nexport default function PrivacyPolicyPage() {\n  const dispatch = useDispatch();\n  const { privacyPolicyHTML } = useSelector(({ terms }: AppState) => terms);\n\n  useEffect(() => {\n    dispatch(loadPrivacyPolicyHTML());\n  }, [dispatch]);\n\n  if (!privacyPolicyHTML) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Title>\n        개인정보 수집·이용 동의\n        {' '}\n        <Sub>(필수)</Sub>\n      </Title>\n      <Terms html={privacyPolicyHTML} />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/member/signup/terms/terms-of-use.tsx","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport dynamic from 'next/dynamic';\n\nimport styled from '@emotion/styled';\n\nimport { AppState } from '../../../../src/shared/store';\nimport { loadTermsOfUseHTML } from '../../../../src/shared/reducers/terms';\n\nconst Terms = dynamic(\n  () => import('../../../../src/shared/components/layouts/Terms'),\n  { ssr: false },\n);\n\nconst Container = styled.div`\n  max-width: 1050px;\n  padding: 20px;\n  margin: auto;\n`;\n\nconst Title = styled.div`\n  padding-top: 16px;\n  font-weight: 600;\n  font-size: 18px;\n  color: #333;\n  line-height: 20px;\n  text-align: center;\n`;\n\nexport default function TermsOfUsePage() {\n  const dispatch = useDispatch();\n  const { termsOfUseHTML } = useSelector(({ terms }: AppState) => terms);\n\n  useEffect(() => {\n    dispatch(loadTermsOfUseHTML());\n  }, [dispatch]);\n\n  if (!termsOfUseHTML) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Title>이용약관</Title>\n      <Terms html={termsOfUseHTML} />\n    </Container>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mock/goods/[productCode].tsx","import getMockProductDetail from '../../../src/shared/stress-test/getMockProductDetail';\n\nimport ProductPage from '../../goods/[productCode]';\n\nexport default ProductPage;\n\nexport const getServerSideProps = async () => {\n  await new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(true);\n    }, 300);\n  });\n  const product = getMockProductDetail();\n  return {\n    props: {\n      adultVerificationFailed: false,\n      product,\n    },\n  };\n};\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/address/index.tsx","import type { InferGetStaticPropsType } from 'next';\n\nimport ListContainer from '../../../src/mypage/address/containers/pc/ListContainer';\nimport ListItemContainer from '../../../src/mypage/address/containers/pc/ListItemContainer';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport {\n  AddressContextProvider,\n} from '../../../src/mypage/address/context/addressContext';\n\nexport default function MypageAddress(props: InferGetStaticPropsType<typeof getStaticProps>) {\n  return (\n    <AddressContextProvider>\n      <AuthContainer loginRequired>\n        <ListContainer {...props.page}>\n          <ListItemContainer />\n        </ListContainer>\n      </AuthContainer>\n    </AddressContextProvider>\n  );\n}\n\nexport async function getStaticProps() {\n  return {\n    props: {\n      page: {\n        title: '배송지 관리',\n        description: '배송지에 따라 상품정보 및 배송유형이 달라질 수 있습니다.',\n      },\n    },\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/coupon/index.tsx","import { useRouter } from 'next/router';\nimport styled from '@emotion/styled';\n\nimport { useEffect } from 'react';\n\nimport Header from '../../../src/header/components/Header';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport Footer from '../../../src/footer/components/Footer';\nimport CouponContainer from '../../../src/mypage/coupon/pc/containers/CouponContainer';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\nimport { BADGE_KEY, updateReadBadge } from '../../../src/shared/api';\nimport { useAppSelector } from '../../../src/shared/store';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function CouponListPage() {\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n  const { userNotification: { badge } } = useAppSelector(({ header }) => header);\n\n  useScreenName(ScreenName.COUPON_LIST);\n\n  useEffect(() => {\n    if (!hasSession || !badge.coupon) {\n      return;\n    }\n\n    updateReadBadge(BADGE_KEY.coupon_badge);\n  }, [badge.coupon, hasSession]);\n\n  const router = useRouter();\n\n  return ( router.isReady && (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout sidebarType=\"myKurly\" title=\"쿠폰\">\n          <CouponContainer />\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  ));\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/emoney/index.tsx","import type { InferGetStaticPropsType } from 'next';\nimport styled from '@emotion/styled';\n\nimport Header from '../../../src/header/components/Header';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport { PagingProvider } from '../../../src/mypage/emoney/context/pc/PagingContext';\nimport PageContainer from '../../../src/mypage/emoney/containers/pc/PageContainer';\nimport Footer from '../../../src/footer/components/Footer';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nconst MyPageEMoneyPage = (props: InferGetStaticPropsType<typeof getStaticProps>) => {\n  const {\n    page: {\n      title,\n      description,\n    },\n  } = props;\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout\n          title={title}\n          sidebarType=\"myKurly\"\n          description={description}\n        >\n          <PagingProvider>\n            <PageContainer />\n          </PagingProvider>\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n};\n\nexport default MyPageEMoneyPage;\n\nexport async function getStaticProps() {\n  return {\n    props: {\n      page: {\n        title: '적립금',\n        description: '보유하고 계신 적립금의 내역을 한 눈에 확인 하실 수 있습니다.',\n      },\n    },\n  };\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/gift/detail.tsx","import styled from '@emotion/styled';\n\nimport Header from '../../../src/header/components/Header';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport Footer from '../../../src/footer/components/Footer';\nimport GiftOrderDetailContainer from '../../../src/mypage/gift/pc/detail/containers/GiftOrderDetailContainer';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function MypageGiftOrderDetailPage() {\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout sidebarType='myKurly'>\n          <GiftOrderDetailContainer />\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/gift/index.tsx","import styled from '@emotion/styled';\n\nimport { useGiftRelease } from '../../../src/mypage/gift/shared/hooks/useGiftRelease';\n\nimport Header from '../../../src/header/components/Header';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport Footer from '../../../src/footer/components/Footer';\nimport GiftListContainer\n  from '../../../src/mypage/gift/pc/list/containers/GiftListContainer';\nimport Loading from '../../../src/shared/components/Loading/Loading';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function MypageGiftOrderPage() {\n  const { isReleased } = useGiftRelease();\n\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout sidebarType=\"myKurly\">\n          {isReleased\n            ? <GiftListContainer />\n            : <Loading />\n          }\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/gift/cancel/fail.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\n\nimport SubPageLayout from '../../../../src/shared/components/layouts/SubPageLayout';\nimport CancelFailContainer from '../../../../src/mypage/order/pc/cancel/containers/CancelFailContainer';\n\nconst styles = {\n  layout: {\n    background: COLOR.bg,\n  },\n};\n\nconst Title = styled.h2`\n  display: block;\n  padding-bottom: 30px;\n  font-size: 28px;\n  line-height: 35px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport default function MypageGiftCancelFailPage() {\n  return (\n    <SubPageLayout css={styles.layout}>\n      <Title>주문 취소 실패</Title>\n      <CancelFailContainer />\n    </SubPageLayout>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/gift/cancel/index.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\n\nimport SubPageLayout from '../../../../src/shared/components/layouts/SubPageLayout';\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\nimport CancelContainer from '../../../../src/mypage/gift/pc/cancel/containers/CancelContainer';\n\nconst styles = {\n  layout: {\n    background: COLOR.bg,\n  },\n};\n\nconst Title = styled.h2`\n  display: block;\n  padding-bottom: 30px;\n  font-size: 28px;\n  line-height: 35px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport default function MypageGiftCancelPage() {\n  return (\n    <SubPageLayout css={styles.layout}>\n      <Title>주문 취소</Title>\n      <AuthContainer loginRequired>\n        <CancelContainer />\n      </AuthContainer>\n    </SubPageLayout>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/gift/cancel/success.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\n\nimport SubPageLayout from '../../../../src/shared/components/layouts/SubPageLayout';\nimport CancelSuccessContainer from '../../../../src/mypage/order/pc/cancel/containers/CancelSuccessContainer';\n\nconst styles = {\n  layout: {\n    background: COLOR.bg,\n  },\n};\n\nconst Title = styled.h2`\n  display: block;\n  padding-bottom: 30px;\n  font-size: 28px;\n  line-height: 35px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport default function MypageGiftCancelSuccessPage() {\n  return (\n    <SubPageLayout css={styles.layout}>\n      <Title>주문 취소 완료</Title>\n      <CancelSuccessContainer />\n    </SubPageLayout>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/info/index.tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport Header from '../../../src/header/components/Header';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport Footer from '../../../src/footer/components/Footer';\nimport PasswordConfirmContainer\n  from '../../../src/mypage/myinfo/shared/containers/PasswordConfirmContainer';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function MyInfoPasswordPage() {\n  useScreenName(ScreenName.ACCOUNT_EDIT);\n\n  const router = useRouter();\n\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout title=\"개인 정보 수정\" sidebarType=\"myKurly\">\n          {router.isReady && (\n            <PasswordConfirmContainer />\n          )}\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/info/modify/index.tsx","import styled from '@emotion/styled';\n\nimport Header from '../../../../src/header/components/Header';\nimport MypageLayout from '../../../../src/mypage/common/Layout';\nimport Footer from '../../../../src/footer/components/Footer';\n\nimport MyInfoModifyContainer\n  from '../../../../src/mypage/myinfo/shared/containers/MyInfoModifyContainer';\nimport AuthContainer\n  from '../../../../src/shared/components/Auth/AuthContainer';\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function MyInfoModifyPage() {\n  useScreenName(ScreenName.ACCOUNT_EDIT);\n\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout title=\"개인 정보 수정\" sidebarType=\"myKurly\">\n          <MyInfoModifyContainer />\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/inquiry/form.tsx","import { useRouter } from 'next/router';\n\nimport styled from '@emotion/styled';\n\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport PersonalInquiryForm\n  from '../../../src/mypage/personal-inquiry/form/components/pc/PersonalInquiryForm';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport PersonalInquiryFormContainer\n  from '../../../src/mypage/personal-inquiry/form/container/PersonalInquiryFormContainer';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nconst ORDER_PRODUCT_PAGE_SIZE = 5;\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function PersonalInquiryFormPage() {\n  useScreenName(ScreenName.PERSONAL_INQUIRY_WRITING);\n\n  const { query, isReady } = useRouter();\n\n  const { id }: { id?: string; } = query;\n\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout title=\"1:1 문의\" sidebarType=\"customerService\">\n          <PersonalInquiryFormContainer\n            id={Number(id)}\n            orderProductPageSize={ORDER_PRODUCT_PAGE_SIZE}\n          >\n            {isReady && <PersonalInquiryForm />}\n          </PersonalInquiryFormContainer>\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/inquiry/list.tsx","import styled from '@emotion/styled';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport PersonalInquiryListContainer from '../../../src/mypage/personal-inquiry/list/container/PersonalInquiryListContainer';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport PersonalInquiryList from '../../../src/mypage/personal-inquiry/list/component/pc/PersonalInquiryList';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function PersonalInquiryListPage() {\n  useScreenName(ScreenName.PERSONAL_INQUIRY_HISTORY);\n\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout title=\"1:1 문의\" sidebarType=\"customerService\">\n          <PersonalInquiryListContainer>\n            <PersonalInquiryList />\n          </PersonalInquiryListContainer>\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/inquiry/bulk-order/index.tsx","import styled from '@emotion/styled';\n\nimport Header from '../../../../src/header/components/Header';\nimport Footer from '../../../../src/footer/components/Footer';\nimport MypageLayout from '../../../../src/mypage/common/Layout';\nimport BulkOrderContainer\n  from '../../../../src/mypage/bulk-order/shared/container/BulkOrderContainer';\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\nimport { useScreenName } from '../../../../src/shared/hooks';\nimport { ScreenName } from '../../../../src/shared/amplitude';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function BulkOrderInquiryPage() {\n  useScreenName(ScreenName.BULK_ORDER_INQUIRY);\n\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout title=\"대량주문 문의\" sidebarType=\"customerService\">\n          <BulkOrderContainer />\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/kurly-purple-box/index.tsx","import Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport KurlyPurpleBoxContainer from '../../../src/mypage/kurly-purple-box/pc/containers/KurlyPurpleBoxContainer';\n\nexport default function KurlyPurpleBoxPage() {\n  return (\n    <>\n      <Header />\n      <KurlyPurpleBoxContainer />\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/kurlypass/index.tsx","import { useRouter } from 'next/router';\nimport styled from '@emotion/styled';\n\nimport useKurlyPass from '../../../src/kurlypass/shared/hooks/useKurlyPass';\nimport useToggle from '../../../src/order/checkout/shared/hooks/useToggle';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport MainSiteProvider\n  from '../../../src/main/components/shared/MainSiteProvider';\nimport { getMainSiteFromQueryString } from '../../../src/product/list/shared/util/getMainSiteFromQueryString';\nimport KurlyPassProductsContainer from '../../../src/kurlypass/pc/containers/KurlyPassProductsContainer';\nimport KurlyPassReceiptContainer from '../../../src/kurlypass/pc/containers/KurlyPassReceiptContainer';\n\nconst Body = styled.div`\n  padding-bottom: 80px;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  width: 1050px;\n  margin:0 auto;\n`;\n\nexport default function KurlyPassPage() {\n  const router = useRouter();\n  const { query } = router;\n  const { site } = query as { site: string; };\n  const { isOpen, toggle } = useToggle();\n  const mainSite = getMainSiteFromQueryString(site);\n\n  const {\n    list,\n    loading,\n    currentKurlyPass,\n    moveKurlyPass,\n    terminateKurlyPass,\n    loadKurlyPassHistory,\n  } = useKurlyPass();\n\n  const handleNextPage = () => {\n    loadKurlyPassHistory();\n  };\n\n  return (\n    <MainSiteProvider site={mainSite}>\n      <Header />\n      <Body>\n        <Container>\n          <KurlyPassProductsContainer\n            list={list}\n            currentKurlyPass={currentKurlyPass}\n            onClick={toggle}\n            moveKurlyPass={moveKurlyPass}\n            onClickTerminate={terminateKurlyPass}\n          />\n          <KurlyPassReceiptContainer\n            list={list}\n            isOpen={isOpen}\n            loading={loading}\n            onClick={toggle}\n            onNextPage={handleNextPage}\n          />\n        </Container>\n      </Body>\n      <Footer />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/leave/index.tsx","import styled from '@emotion/styled';\n\nimport Header from '../../../src/header/components/Header';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport LeaveContainer\n  from '../../../src/mypage/leave/shared/containers/LeaveContainer';\nimport Footer from '../../../src/footer/components/Footer';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function LeavePage() {\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <LeaveContainer />\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/my-kurly-style/index.tsx","import { useRouter } from 'next/router';\n\nimport { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport MypageHeader from '../../../src/mypage/common/Header';\nimport MypageSubHeader from '../../../src/mypage/common/SubHeader';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport MyKurlyStyle from '../../../src/mypage/my-kurly-style/shared/containers/MyKurlyStyle';\nimport { clearRecommendProduct } from '../../../src/mypage/my-kurly-style/slice';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\nimport { BADGE_KEY, updateReadBadge } from '../../../src/shared/api';\nimport { useAppSelector } from '../../../src/shared/store';\n\nexport default function MyKurlyStylePage() {\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n  const { userNotification: { badge } } = useAppSelector(({ header }) => header);\n\n  useScreenName(ScreenName.MY_KURLY_STYLE);\n\n  const router = useRouter();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(clearRecommendProduct());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!hasSession || !badge.profile) {\n      return;\n    }\n\n    updateReadBadge(BADGE_KEY.profile_badge);\n  }, [badge.profile, hasSession]);\n\n  return (router.isReady && (\n    <AuthContainer loginRequired>\n      <Header />\n      <MypageLayout sidebarType=\"myKurly\">\n        <MypageHeader\n          title=\"나의 컬리 스타일\"\n          description=\"나만의 취향이 담긴 프로필을 만들어 다양한 상품을 추천 받아보세요!\"\n        />\n        <MypageSubHeader />\n        <MyKurlyStyle />\n      </MypageLayout>\n      <Footer />\n    </AuthContainer>\n  ));\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/my-kurly-style/success.tsx","import { useRouter } from 'next/router';\n\nimport { useEffect } from 'react';\n\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport SaveSuccessful from '../../../src/mypage/my-kurly-style/shared/containers/SaveSuccessful';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { amplitudeService, ScreenName } from '../../../src/shared/amplitude';\nimport {\n  SubmitProfileSuccess,\n} from '../../../src/shared/amplitude/events/mykurly-style';\n\nexport default function MyKurlyStyleSuccessPage() {\n  useScreenName(ScreenName.PROFILE_SETTING_SUCCESS);\n\n  const router = useRouter();\n\n  useEffect(() => {\n    void amplitudeService.logEvent(new SubmitProfileSuccess());\n  }, []);\n\n  return (router.isReady && (\n    <AuthContainer loginRequired>\n      <Header />\n      <SaveSuccessful />\n      <Footer />\n    </AuthContainer>\n  ));\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/next-grade/index.tsx","import styled from '@emotion/styled';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\n\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport NextGradeContainer\n  from '../../../src/mypage/next-grade/containers/NextGradeContainer';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function NextGradePage() {\n  useScreenName(ScreenName.MEMBERSHIP_BENEFIT);\n\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <NextGradeContainer />\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/order/[orderNo].tsx","import styled from '@emotion/styled';\n\nimport { useRouter } from 'next/router';\n\nimport { ParsedUrlQuery } from 'querystring';\n\nimport Header from '../../../src/header/components/Header';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport Footer from '../../../src/footer/components/Footer';\nimport OrderDetailContainer from '../../../src/mypage/order/pc/detail/containers/OrderDetailContainer';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function MypageOrderDetailPage() {\n  useScreenName(ScreenName.ORDER_SHEET_DETAIL);\n\n  const router = useRouter();\n\n  const { orderNo } = router.query as ParsedUrlQuery & { orderNo: string; };\n\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout sidebarType='myKurly'>\n          <OrderDetailContainer orderNo={orderNo} />\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/order/delivery-tracking.tsx","import { useRouter } from 'next/router';\n\nimport { ParsedUrlQuery } from 'querystring';\n\nimport DeliveryTracker from '../../../src/mypage/order/shared/components/delivary-tracking/DeliveryTracker';\n\nexport default function DeliveryTracingPage() {\n  const { query } = useRouter();\n\n  const { invoiceNo, extraCourierCode } = query as ParsedUrlQuery & { invoiceNo: string; extraCourierCode: string; };\n\n  return (\n    <DeliveryTracker invoiceNo={invoiceNo} extraCourierCode={extraCourierCode} />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/order/index.tsx","import styled from '@emotion/styled';\n\nimport Header from '../../../src/header/components/Header';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport Footer from '../../../src/footer/components/Footer';\nimport OrderListContainer\n  from '../../../src/mypage/order/pc/list/containers/OrderListContainer';\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function MypageOrderPage() {\n  useScreenName(ScreenName.ORDER_HISTORY);\n\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout sidebarType=\"myKurly\">\n          <OrderListContainer />\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/order/cancel/fail.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\n\nimport SubPageLayout from '../../../../src/shared/components/layouts/SubPageLayout';\nimport CancelFailContainer from '../../../../src/mypage/order/pc/cancel/containers/CancelFailContainer';\n\nconst styles = {\n  layout: {\n    background: COLOR.bg,\n  },\n};\n\nconst Title = styled.h2`\n  display: block;\n  padding-bottom: 30px;\n  font-size: 28px;\n  line-height: 35px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport default function OrderCancelFailPage() {\n  return (\n    <SubPageLayout css={styles.layout}>\n      <Title>주문 취소 실패</Title>\n      <CancelFailContainer />\n    </SubPageLayout>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/order/cancel/index.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\n\nimport SubPageLayout from '../../../../src/shared/components/layouts/SubPageLayout';\nimport AuthContainer from '../../../../src/shared/components/Auth/AuthContainer';\nimport CancelContainer from '../../../../src/mypage/order/pc/cancel/containers/CancelContainer';\n\nconst styles = {\n  layout: {\n    background: COLOR.bg,\n  },\n};\n\nconst Title = styled.h2`\n  display: block;\n  padding-bottom: 30px;\n  font-size: 28px;\n  line-height: 35px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport default function OrderCancelPage() {\n  return (\n    <SubPageLayout css={styles.layout}>\n      <Title>주문 취소</Title>\n      <AuthContainer loginRequired>\n        <CancelContainer />\n      </AuthContainer>\n    </SubPageLayout>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/order/cancel/success.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../../src/shared/constant/colorset';\n\nimport SubPageLayout from '../../../../src/shared/components/layouts/SubPageLayout';\nimport CancelSuccessContainer from '../../../../src/mypage/order/pc/cancel/containers/CancelSuccessContainer';\n\nconst styles = {\n  layout: {\n    background: COLOR.bg,\n  },\n};\n\nconst Title = styled.h2`\n  display: block;\n  padding-bottom: 30px;\n  font-size: 28px;\n  line-height: 35px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport default function OrderCancelSuccessPage() {\n  return (\n    <SubPageLayout css={styles.layout}>\n      <Title>주문 취소 완료</Title>\n      <CancelSuccessContainer />\n    </SubPageLayout>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/pick/list.tsx","import styled from '@emotion/styled';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useEffect } from 'react';\n\nimport { useScreenName } from '../../../src/shared/hooks';\nimport { ScreenName } from '../../../src/shared/amplitude';\nimport { useAppSelector } from '../../../src/shared/store';\nimport { loadPickedProducts } from '../../../src/mypage/pick/slice';\n\nimport Header from '../../../src/header/components/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport PickProductsContainer\n  from '../../../src/mypage/pick/pc/containers/PickProductsContainer';\n\nconst Fallback = styled.div`\n  width: 100%;\n  height: 1050px;\n`;\n\nexport default function PickListPage() {\n  useScreenName(ScreenName.PICK_LIST);\n\n  const dispatch = useDispatch();\n\n  const { isGuest } = useAppSelector(({ auth }) => auth);\n\n  useEffect(() => {\n    if (!isGuest) {\n      dispatch(loadPickedProducts());\n    }\n  }, [dispatch, isGuest]);\n\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout sidebarType={'myKurly'}>\n          <PickProductsContainer />\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/mypage/review/index.tsx","import { useEffect } from 'react';\nimport dynamic from 'next/dynamic';\n\nimport Header from '../../../src/header/components/Header';\nimport AuthContainer from '../../../src/shared/components/Auth/AuthContainer';\nimport MypageLayout from '../../../src/mypage/common/Layout';\nimport MypageHeader from '../../../src/mypage/common/Header';\nimport Footer from '../../../src/footer/components/Footer';\nimport { TabProvider } from '../../../src/mypage/review/context/tab-context';\nimport {\n  Tabs,\n  Tab,\n  TabList,\n  TabPanels,\n  TabPanel,\n  Fallback,\n} from '../../../src/mypage/review/pc/components/styled-components';\n\nconst WritableReviewPanel = dynamic(\n  () => import('../../../src/mypage/review/pc/WritableReviewPanel'),\n  { ssr: false },\n);\nconst WrittenReviewPanel = dynamic(\n  () => import('../../../src/mypage/review/pc/WrittenReviewPanel'),\n  { ssr: false },\n);\n\nexport default function ProductReview() {\n  useEffect(() => {\n    addEventListener('contextmenu', (event) => event.preventDefault());\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <AuthContainer loginRequired fallback={<Fallback />}>\n        <MypageLayout sidebarType=\"myKurly\">\n          <MypageHeader title=\"상품 후기\" />\n          <TabProvider>\n            {({ tabIndex, setTabIndex }) => (\n              <Tabs index={tabIndex} onChange={(index) => setTabIndex(index)}>\n                <TabList>\n                  <Tab>작성 가능 후기</Tab>\n                  <Tab>작성한 후기</Tab>\n                </TabList>\n                <TabPanels>\n                  <TabPanel>\n                    {tabIndex === 0 ? <WritableReviewPanel /> : null}\n                  </TabPanel>\n                  <TabPanel>\n                    {tabIndex === 1 ? <WrittenReviewPanel /> : null}\n                  </TabPanel>\n                </TabPanels>\n              </Tabs>\n            )}\n          </TabProvider>\n        </MypageLayout>\n      </AuthContainer>\n      <Footer />\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/index.tsx","import { useCallback, useEffect, useState } from 'react';\n\nimport styled from '@emotion/styled';\nimport { useDispatch } from 'react-redux';\n\nimport { useIntersectionObserver } from 'react-intersection-observer-hook';\n\nimport { useAppSelector } from '../../../src/shared/store';\nimport { initialState, setValue } from '../../../src/order/checkout/shared/reducers/checkout.slice';\nimport {\n  initialState as initialPaymentsState,\n  setValue as setPaymentsValue,\n} from '../../../src/order/shared/shared/reducers/payments.slice';\n\nimport { useScreenName } from '../../../src/shared/hooks';\nimport LoadingOrderer from '../../../src/order/checkout/pc/components/Loading/LoadingOrderer';\n\nimport BannerContainer from '../../../src/order/checkout/shared/containers/BannerContainer';\nimport ProductContainer from '../../../src/order/checkout/pc/containers/ProductContainer';\nimport OrdererContainer from '../../../src/order/checkout/pc/containers/OrdererContainer';\nimport ShippingContainer from '../../../src/order/checkout/pc/containers/ShippingContainer';\nimport PickupContainer from '../../../src/order/checkout/pc/containers/PickupContainer';\nimport PackagingMethodContainer from '../../../src/order/checkout/pc/containers/PackagingMethodContainer';\nimport CouponsContainer from '../../../src/order/checkout/pc/containers/CouponsContainer';\nimport PointContainer from '../../../src/order/checkout/pc/containers/PointContainer';\nimport PaymentMethodsContainer from '../../../src/order/checkout/pc/containers/PaymentMethodsContainer';\nimport DeliveryNoticeContainer from '../../../src/order/checkout/pc/containers/DeliveryNoticeContainer';\nimport TermsContainer from '../../../src/order/checkout/pc/containers/TermsContainer';\nimport CheckoutContainer from '../../../src/order/checkout/pc/containers/CheckoutContainer';\nimport PriceContainer from '../../../src/order/checkout/pc/containers/PriceContainer';\n\nimport SubPageLayout from '../../../src/shared/components/layouts/SubPageLayout';\nimport PaymentsLoading from '../../../src/order/checkout/shared/components/PaymentsLoading';\n\nimport { Title } from '../../../src/order/checkout/pc/components/Title';\n\nimport { ScreenName } from '../../../src/shared/amplitude';\n\nconst Wrapper = styled.div`\n  letter-spacing: -0.5px;\n`;\n\nconst PaymentWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst InnerContainer = styled.div`\n  width: 742px;\n  > div:first-of-type {\n    margin-top: 60px;\n  }\n`;\n\nconst ActualPriceContainer = styled.div`\n  position: relative;\n  width: 284px;\n`;\n\nconst ScrollWrapper = styled.div<{ sticky: boolean; }>`\n  position: absolute;\n  width: 284px;\n  top: 0;\n  ${({ sticky }) => sticky && `\n    position: sticky;\n    top: 60px;\n  `};\n`;\n\nconst headerOption = {\n  rootMargin: '-57px 0px 0px 0px',\n  threshold: 1,\n};\n\nconst styles = {\n  layout: {\n    '> div': {\n      paddingTop: '50px',\n    },\n    h2: {\n      fontWeight: 500,\n      fontSize: '28px',\n      lineHeight: '36px',\n      letterSpacing: '-0.5px',\n    },\n  },\n};\n\nexport default function OrderPage() {\n  useScreenName(ScreenName.ORDER_SHEET);\n\n  const dispatch = useDispatch();\n  const {\n    isKurlyPassOrder,\n    isPickupOrder,\n    hasNonDeliveryProduct,\n    reusablePackage: {\n      viewPackage,\n    },\n  } = useAppSelector(({ checkout }) => checkout);\n  const { isPaymentsLoading } = useAppSelector(({ payments }) => payments);\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n\n  const [sticky, setStickey] = useState(false);\n  const [headerRef, headerEntry] = useIntersectionObserver(headerOption);\n\n  useEffect(() => {\n    if (headerEntry.entry && !headerEntry.entry.isIntersecting) {\n      setStickey(true);\n      return;\n    }\n\n    setStickey(false);\n  }, [headerEntry.entry]);\n\n  const initOrderPage = useCallback(() => {\n    dispatch(setValue(initialState));\n    dispatch(setPaymentsValue(initialPaymentsState));\n  }, [dispatch]);\n\n  useEffect(() => {\n    initOrderPage();\n  }, [initOrderPage]);\n\n  useEffect(() => {\n    // 주문서 페이지로 리다이렉트시 토스페이먼츠 Iframe이 있으면 삭제합니다.\n    document.querySelectorAll('#_lguplus_popup_').forEach(iframe => iframe.remove());\n  }, []);\n\n  return (\n    <SubPageLayout title=\"주문서\" css={styles.layout}>\n      <Wrapper>\n        {isPaymentsLoading && <PaymentsLoading />}\n        <ProductContainer />\n        <Title title=\"주문자 정보\" />\n        {hasSession\n          ? <OrdererContainer />\n          : <LoadingOrderer />\n        }\n        {!isKurlyPassOrder && (\n          <ShippingContainer />\n        )}\n        {isPickupOrder && <PickupContainer />}\n        {!isKurlyPassOrder && viewPackage && (\n          <>\n            <PackagingMethodContainer />\n            <BannerContainer device=\"pc\" />\n          </>\n        )}\n        <div ref={headerRef} />\n        <PaymentWrapper>\n          <InnerContainer>\n            <Title title=\"쿠폰 / 적립금\" />\n            <CouponsContainer />\n            {!isKurlyPassOrder && (<PointContainer />)}\n            <PaymentMethodsContainer />\n          </InnerContainer>\n          <ActualPriceContainer>\n            <ScrollWrapper sticky={sticky}>\n              <PriceContainer />\n              {!hasNonDeliveryProduct && (<DeliveryNoticeContainer />)}\n            </ScrollWrapper>\n          </ActualPriceContainer>\n        </PaymentWrapper>\n        <TermsContainer />\n        <CheckoutContainer />\n      </Wrapper>\n    </SubPageLayout>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/cancel/kakao-pay.tsx","import OrderCancelContainer from '../../../../src/order/checkout/shared/containers/payments/cancel/OrderCancelContainer';\n\nexport default function KakaoPayCancelPage() {\n  return (\n    <OrderCancelContainer />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/cancel/kurly-pass.tsx","import OrderCancelContainer from '../../../../src/order/checkout/shared/containers/payments/cancel/OrderCancelContainer';\n\nexport default function KurlyPassCancelPage() {\n  return (\n    <OrderCancelContainer kurlyPass={true} />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/cancel/mobilians.tsx","import OrderCancelContainer from '../../../../src/order/checkout/shared/containers/payments/cancel/OrderCancelContainer';\n\nexport default function MobiliansCancelPage() {\n  return (\n    <OrderCancelContainer />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/cancel/toss-payments.tsx","import OrderCancelContainer from '../../../../src/order/checkout/shared/containers/payments/cancel/OrderCancelContainer';\n\nexport default function TossPaymentsCancelPage() {\n  return (\n    <OrderCancelContainer />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/cancel/toss.tsx","import OrderCancelContainer from '../../../../src/order/checkout/shared/containers/payments/cancel/OrderCancelContainer';\n\nexport default function TossCancelPage() {\n  return (\n    <OrderCancelContainer />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/fail/index.tsx","import COLOR from '../../../../src/shared/constant/colorset';\n\nimport SubPageLayout from '../../../../src/shared/components/layouts/SubPageLayout';\nimport FailContainer from '../../../../src/order/checkout/pc/containers/FailContainer';\n\nconst styles = {\n  layout: {\n    background: COLOR.bg,\n  },\n};\n\nexport default function FailPage() {\n  return (\n    <SubPageLayout css={styles.layout}>\n      <FailContainer />\n    </SubPageLayout>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/fail/kurly-pass.tsx","import OrderFailContainer from '../../../../src/order/checkout/shared/containers/payments/fail/OrderFailContainer';\n\nexport default function KurlyPassFailPage() {\n  return (\n    <OrderFailContainer kurlyPass={true} />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/fail/pay-fail.tsx","import OrderFailContainer, { getServerSideMobiliansFailProps } from '../../../../src/order/checkout/shared/containers/payments/fail/OrderFailContainer';\n\nexport default OrderFailContainer;\n\nexport const getServerSideProps = getServerSideMobiliansFailProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/fail/toss-payments.tsx","import OrderFailContainer from '../../../../src/order/checkout/shared/containers/payments/fail/OrderFailContainer';\n\nexport default OrderFailContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/init/chai.tsx","import ChaiInitContainer from '../../../../src/order/checkout/shared/containers/payments/init/ChaiInitContainer';\n\nexport default ChaiInitContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/init/index.tsx","import PgInitContainer from '../../../../src/order/checkout/shared/containers/payments/init/PgInitContainer';\n\nexport default PgInitContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/init/kurly-pass.tsx","import KurlyPassInitContainer from '../../../../src/order/checkout/shared/containers/payments/init/KurlyPassInitContainer';\n\nexport default KurlyPassInitContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/init/popup.tsx","import PopupInitContainer from '../../../../src/order/checkout/shared/containers/payments/init/PopupInitContainer';\n\nexport default PopupInitContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/init/smile-pay.tsx","import SmilePayInitContainer from '../../../../src/order/checkout/shared/containers/payments/init/SmilePayInitContainer';\n\nexport default SmilePayInitContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/init/toss-payments.tsx","import TossPaymentsInitContainer from '../../../../src/order/checkout/shared/containers/payments/init/TossPaymentsInitContainer';\n\nexport default TossPaymentsInitContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/process/chai.tsx","import ChaiProcessContainer from '../../../../src/order/checkout/shared/containers/payments/process/ChaiProcessContainer';\n\nexport default ChaiProcessContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/process/kakao-pay.tsx","import KakaoPayProcessContainer from '../../../../src/order/checkout/shared/containers/payments/process/KakaoPayProcessContainer';\n\nexport default KakaoPayProcessContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/process/kurly-pass.tsx","import KurlyPassProcessContainer, { getServerSideKurlyPassProps } from '../../../../src/order/checkout/shared/containers/payments/process/KurlyPassProcessContainer';\n\nexport default KurlyPassProcessContainer;\n\nexport const getServerSideProps = getServerSideKurlyPassProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/process/mobilians.tsx","import MobiliansProcessContainer, { getServerSideMobiliansProps } from '../../../../src/order/checkout/shared/containers/payments/process/MobiliansProcessContainer';\n\nexport default MobiliansProcessContainer;\n\nexport const getServerSideProps = getServerSideMobiliansProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/process/naver-pay.tsx","import NaverPayProcessContainer from '../../../../src/order/checkout/shared/containers/payments/process/NaverPayProcessContainer';\n\nexport default NaverPayProcessContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/process/payco.tsx","import PaycoProcessContainer from '../../../../src/order/checkout/shared/containers/payments/process/PaycoProcessContainer';\n\nexport default PaycoProcessContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/process/smile-pay.tsx","import SmilePayProcessContainer, { getServerSideSmilePayProps } from '../../../../src/order/checkout/shared/containers/payments/process/SmilePayProcessContainer';\n\nexport default SmilePayProcessContainer;\n\nexport const getServerSideProps = getServerSideSmilePayProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/process/toss-payments.tsx","import TossPaymentsProcessContainer, { getServerSideTossPaymentsProps } from '../../../../src/order/checkout/shared/containers/payments/process/TossPaymentsProcessContainer';\n\nexport default TossPaymentsProcessContainer;\n\nexport const getServerSideProps = getServerSideTossPaymentsProps();\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/process/toss.tsx","import TossProcessContainer from '../../../../src/order/checkout/shared/containers/payments/process/TossProcessContainer';\n\nexport default TossProcessContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/receiver-details/index.tsx","import { useAppSelector } from '../../../../src/shared/store';\n\nimport ReceiverDetailsContainer from '../../../../src/order/checkout/shared/containers/ReceiverDetailsContainer';\nimport Loading from '../../../../src/shared/components/Loading/Loading';\n\nexport default function ReceiverDetailsPage() {\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n\n  if (!hasSession) {\n    return <Loading testId=\"loading\" />;\n  }\n\n  return (\n    <ReceiverDetailsContainer isPC />\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/success/index.tsx","import COLOR from '../../../../src/shared/constant/colorset';\n\nimport SuccessContainer from '../../../../src/order/checkout/pc/containers/SuccessContainer';\nimport SubPageLayout from '../../../../src/shared/components/layouts/SubPageLayout';\n\nconst styles = {\n  layout: {\n    background: COLOR.bg,\n  },\n};\n\nexport default function SuccessPage() {\n  return (\n    <SubPageLayout css={styles.layout}>\n      <SuccessContainer />\n    </SubPageLayout>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/success/kurly-pass.tsx","import KurlyPassSuccessContainer from '../../../../src/order/checkout/shared/containers/payments/success/KurlyPassSuccessContainer';\n\nexport default KurlyPassSuccessContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/success/kurly.tsx","import KurlySuccessContainer from '../../../../src/order/checkout/shared/containers/payments/success/KurlySuccessContainer';\n\nexport default KurlySuccessContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/order/checkout/success/toss-payments.tsx","import TossPaymentsSuccessContainer from '../../../../src/order/checkout/shared/containers/payments/success/TossPaymentsSuccessContainer';\n\nexport default TossPaymentsSuccessContainer;\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/search/index.tsx","import styled from '@emotion/styled';\n\nimport { isEmpty } from 'lodash';\n\nimport { useRouter } from 'next/router';\n\nimport { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useScreenName } from '../../src/shared/hooks';\nimport { ScreenName } from '../../src/shared/amplitude';\n\nimport COLOR from '../../src/shared/constant/colorset';\n\nimport Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\nimport MainSiteProvider\n  from '../../src/main/components/shared/MainSiteProvider';\n\nimport ScrollEventTopButton\n  from '../../src/shared/components/Scroll/ScrollEventTopButton';\n\nimport { AppState, useAppSelector } from '../../src/shared/store';\n\nimport { branchService } from '../../src/shared/branch';\nimport { Search } from '../../src/shared/branch/events';\nimport { useSearchListPageQueryParams } from '../../src/search/hooks/useSearchListPageQueryParams';\nimport { ListPageSkeleton } from '../../src/product/list/pc/components/ListPageSkeleton';\nimport SearchListContainer from '../../src/search/pc/containers/SearchListContainer';\nimport { setFilterId } from '../../src/product/list/slice';\nimport { initializeFilterId } from '../../src/product/list/shared/util/initializeFilterId';\nimport { productListSetScreenName } from '../../src/product/list/shared/util/productListSetScreenName';\n\nconst Content = styled.div`\n  width: 100%;\n  padding-bottom: 80px;\n  background-color: ${COLOR.kurlyWhite};\n`;\n\nconst Container = styled.div`\n  width: 1050px;\n  margin: 0 auto;\n  align-content: center;\n`;\n\nexport default function SearchPage() {\n  useScreenName(ScreenName.SEARCH);\n  const { accessToken } = useSelector(({ auth }: AppState) => auth);\n  const { hasSession } = useAppSelector(({ auth }) => auth);\n  const { isReady } = useRouter();\n  const { site, sword, filters: urlBasedFilter } = useSearchListPageQueryParams();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isEmpty(sword) || !accessToken) {\n      return;\n    }\n\n    branchService.logEvent(\n      new Search({\n        searchQuery: sword,\n      }),\n    );\n  }, [accessToken, sword]);\n\n  useEffect(() => {\n    if (!isReady) {\n      return;\n    }\n\n    const filterId = initializeFilterId(urlBasedFilter);\n\n    dispatch(setFilterId(filterId));\n    productListSetScreenName(sword, 'search');\n  }, [sword, urlBasedFilter, dispatch, isReady]);\n\n  return (\n    <>\n      <MainSiteProvider site={site}>\n        <Header sword={sword} />\n        <ScrollEventTopButton>\n          <Content>\n            <Container>\n              {isReady && hasSession ? (\n                <SearchListContainer searchKeyword={sword} />\n              ) : (\n                <ListPageSkeleton pageType='search' />\n              )}\n            </Container>\n          </Content>\n        </ScrollEventTopButton>\n        <Footer />\n      </MainSiteProvider>\n    </>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/user-guide/index.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../src/shared/constant/colorset';\n\nimport { useScreenName } from '../../src/shared/hooks';\nimport { ScreenName } from '../../src/shared/amplitude';\n\nimport Header from '../../src/header/components/Header';\nimport Footer from '../../src/footer/components/Footer';\nimport UserGuideContainer from '../../src/user-guide/components/pc/UserGuideContainer';\nimport MainSiteProvider\n  from '../../src/main/components/shared/MainSiteProvider';\n\nconst Content = styled.div`\n  width: 100%;\n  padding: 50px 0 60px 0;\n  background-color: ${COLOR.kurlyWhite};\n`;\n\nconst Title = styled.div`\n  font-weight: 500;\n  font-size: 28px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  margin: 55px auto 0;\n  background-color: ${COLOR.bgLightGray};\n`;\n\nexport default function UserGuidePage() {\n  useScreenName(ScreenName.SERVICE_GUIDE);\n\n  return (\n    <MainSiteProvider>\n      <Header />\n      <Content>\n        <Title>이용안내</Title>\n        <Container>\n          <UserGuideContainer />\n        </Container>\n      </Content>\n      <Footer />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/user-terms/agreement/index.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../src/shared/constant/colorset';\n\nimport Footer from '../../../src/footer/components/Footer';\nimport Header from '../../../src/header/components/Header';\n\nimport UserTermsView from '../../../src/user-terms/components/UserTermsView';\nimport SelectBox from '../../../src/shared/components/Input/SelectBox';\n\nimport useUserTerms from '../../../src/user-terms/hooks/useUserTerms';\nimport MainSiteProvider\n  from '../../../src/main/components/shared/MainSiteProvider';\n\nconst Content = styled.div`\n  min-width: 1050px;\n  padding: 50px 0;\n  background-color: ${COLOR.kurlyWhite};\n`;\n\nconst Title = styled.div`\n  font-weight: 500;\n  font-size: 28px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  padding: 0;\n  min-width: 1050px;\n  background-color: ${COLOR.bgLightGray};\n`;\n\nconst AgreementLayout = styled.div`\n  padding-top: 10px;\n  color: ${COLOR.kurlyGray800};\n  line-height: 1.5;\n  letter-spacing: 0;\n`;\n\nconst SelectBoxLayout = styled.div`\n  width: 300px;\n  margin: 0 auto;\n  padding: 30px 0;\n`;\n\nexport default function AgreementPage() {\n  const { details, value, options, handleChange } = useUserTerms('agreement');\n\n  return (\n    <MainSiteProvider>\n      <Header />\n      <Content>\n        <Title>이용약관</Title>\n      </Content>\n      <Container>\n        <AgreementLayout>\n          <UserTermsView html={details ?? ''} />\n        </AgreementLayout>\n        <SelectBoxLayout>\n          <SelectBox\n            name={'agreement'}\n            value={value ?? ''}\n            options={options}\n            onChange={handleChange}\n          />\n        </SelectBoxLayout>\n      </Container>\n      <Footer />\n    </MainSiteProvider>\n  );\n}\n"],["/Users/hamtori/kurly/kurlymall-nx/pages/user-terms/privacy-policy/index.tsx","import styled from '@emotion/styled';\n\nimport COLOR from '../../../src/shared/constant/colorset';\n\nimport Footer from '../../../src/footer/components/Footer';\nimport Header from '../../../src/header/components/Header';\n\nimport UserTermsView from '../../../src/user-terms/components/UserTermsView';\nimport SelectBox from '../../../src/shared/components/Input/SelectBox';\n\nimport useUserTerms from '../../../src/user-terms/hooks/useUserTerms';\nimport MainSiteProvider\n  from '../../../src/main/components/shared/MainSiteProvider';\n\nconst Content = styled.div`\n  min-width: 1050px;\n  padding: 50px 0;\n  background-color: ${COLOR.kurlyWhite};\n`;\n\nconst Title = styled.div`\n  font-weight: 500;\n  font-size: 28px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  padding: 0;\n  min-width: 1050px;\n  background-color: ${COLOR.bgLightGray};\n`;\n\nconst PolicyLayout = styled.div`\n  padding-top: 10px;\n  color: ${COLOR.kurlyGray800};\n  line-height: 1.5;\n  letter-spacing: 0;\n`;\n\nconst SelectBoxLayout = styled.div`\n  width: 300px;\n  margin: 0 auto;\n  padding: 30px 0;\n`;\n\nexport default function PrivacyPolicyPage() {\n  const { details, value, options, handleChange } = useUserTerms('privacyPolicy');\n\n  return (\n    <MainSiteProvider>\n      <Header />\n      <Content>\n        <Title>개인정보처리방침</Title>\n      </Content>\n      <Container>\n        <PolicyLayout>\n          <UserTermsView html={details ?? ''} />\n        </PolicyLayout>\n        <SelectBoxLayout>\n          <SelectBox\n            name={'privacyPolicy'}\n            value={value ?? ''}\n            options={options}\n            onChange={handleChange}\n          />\n        </SelectBoxLayout>\n      </Container>\n      <Footer />\n    </MainSiteProvider>\n  );\n}\n"]]